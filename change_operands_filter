1 384 note,content state.note,content
2 308 !isIndexing||(isIndexing&&this.indexCtr%30==0) !isIndexing||(isIndexing&&this.indexCtr%30===0)
3 308 isIndexing&&this.indexCtr%30==0 isIndexing&&this.indexCtr%30===0
4 714 nTable.offsetWidth>nTableScrollBody.offsetWidth nTable.offsetWidth>nTableScrollBody.clientWidth
5 719 nTable.offsetHeight>nTableScrollBody.offsetHeight nTable.offsetHeight>nTableScrollBody.clientHeight
6 977 $.browser.msie&&$.browser.version<9 $.browser.msie&&$.browser.version<8
7 977 $.browser.version<9 $.browser.version<8
8 498 (c>=5&&c<=20)||(c%10>=5&&c%10<=9)||c%10===0 (c%100>=5&&c%100<=20)||(c%10>=5&&c%10<=9)||c%10===0
9 498 c>=5 c%100>=5
10 498 c<=20 c%100<=20
11 141 "timm"+((c!==1)?"e":"ar") "timm"+((c!==1)?"ar":"e")
12 138 "milesegundo"+((c!==1)?"s":"") "milissegundo"+((c!==1)?"s":"")
13 32 text.toLowerCase().indexOf(type)>-1 text.toLowerCase().indexOf(type?type.toLowerCase():type)>-1
14 37 text.toLowerCase().indexOf(type.toLowerCase())>-1 text.toLowerCase().indexOf(type?type.toLowerCase():type)>-1
15 36 text.toLowerCase().indexOf(type.toLowerCase())>-1 text.toLowerCase().indexOf(type?type.toLowerCase():type)>-1
16 304 hasEquivilantSibling<2 hasEquivalentSibling<2
17 304 hasEquivilantSibling<2 hasEquivalentSibling<2
18 277 state.response_type==="si:r" state.request_type==="si:r"
19 280 state.response_type==="si:p" state.request_type==="si:p"
20 283 state.response_type==="si:s" state.request_type==="si:s"
21 292 state.response_type==="so:r" state.request_type==="so:r"
22 295 state.response_type==="si:p" state.request_type==="si:p"
23 160 node===popup||(node.classList&&node.classList.contains("tc-popup-keep")) node===popup||(node.classList&&(node.classList.contains("tc-popup-keep")||node.classList.contains("tc-popup-handle")))
24 160 node.classList&&node.classList.contains("tc-popup-keep") node.classList&&(node.classList.contains("tc-popup-keep")||node.classList.contains("tc-popup-handle"))
25 43 "Error:Unabletoloadusercredentialsfrom'"+credentialsFilepath+"'" "Error:Unabletoloadusercredentialsfrom'"+resolveCredentialsFilepath+"'"
26 43 "Error:Unabletoloadusercredentialsfrom'"+credentialsFilepath "Error:Unabletoloadusercredentialsfrom'"+resolveCredentialsFilepath
27 31 this.wiki.getTiddlerText("$:/GitHub/Url")||"https://api.github.com" this.wiki.getTiddlerText("$:/GitHub/ServerURL")||"https://api.github.com"
28 140 changedAttributes.tiddler||changedAttributes.field||changedAttributes.index||changedAttributes.placeholder||changedAttributes["default"]||changedAttributes["class"]||changedAttributes.style||changedAttributes.tooltip||changedAttributes["aria-label"] changedAttributes.tiddler||changedAttributes.field||changedAttributes.index||changedAttributes.placeholder||changedAttributes["default"]||changedAttributes["class"]||changedAttributes.style||changedAttributes.tooltip||changedAttributes["aria-label"]||changedAttributes.focus
29 140 changedAttributes.field||changedAttributes.index||changedAttributes.placeholder||changedAttributes["default"]||changedAttributes["class"]||changedAttributes.style||changedAttributes.tooltip||changedAttributes["aria-label"] changedAttributes.field||changedAttributes.index||changedAttributes.placeholder||changedAttributes["default"]||changedAttributes["class"]||changedAttributes.style||changedAttributes.tooltip||changedAttributes["aria-label"]||changedAttributes.focus
30 140 changedAttributes.index||changedAttributes.placeholder||changedAttributes["default"]||changedAttributes["class"]||changedAttributes.style||changedAttributes.tooltip||changedAttributes["aria-label"] changedAttributes.index||changedAttributes.placeholder||changedAttributes["default"]||changedAttributes["class"]||changedAttributes.style||changedAttributes.tooltip||changedAttributes["aria-label"]||changedAttributes.focus
31 140 changedAttributes.placeholder||changedAttributes["default"]||changedAttributes["class"]||changedAttributes.style||changedAttributes.tooltip||changedAttributes["aria-label"] changedAttributes.placeholder||changedAttributes["default"]||changedAttributes["class"]||changedAttributes.style||changedAttributes.tooltip||changedAttributes["aria-label"]||changedAttributes.focus
32 140 changedAttributes["default"]||changedAttributes["class"]||changedAttributes.style||changedAttributes.tooltip||changedAttributes["aria-label"] changedAttributes["default"]||changedAttributes["class"]||changedAttributes.style||changedAttributes.tooltip||changedAttributes["aria-label"]||changedAttributes.focus
33 140 changedAttributes["class"]||changedAttributes.style||changedAttributes.tooltip||changedAttributes["aria-label"] changedAttributes["class"]||changedAttributes.style||changedAttributes.tooltip||changedAttributes["aria-label"]||changedAttributes.focus
34 140 changedAttributes.style||changedAttributes.tooltip||changedAttributes["aria-label"] changedAttributes.style||changedAttributes.tooltip||changedAttributes["aria-label"]||changedAttributes.focus
35 140 changedAttributes.tooltip||changedAttributes["aria-label"] changedAttributes.tooltip||changedAttributes["aria-label"]||changedAttributes.focus
36 106 scrollPosition.y+(endY-scrollPosition.y-offset)*t scrollPosition.y+(endY-scrollPosition.y)*t
37 106 (endY-scrollPosition.y-offset)*t (endY-scrollPosition.y)*t
38 471 this.openLinkFromOutsideRiver==="bottom" this.getAttribute("openLinkFromOutsideRiver","top")==="bottom"
39 106 (endY-scrollPosition.y)*t (endY-scrollPosition.y-offset)*t
40 58 "<divclass='tc-table-of-contents'><<toc-selective-expandable'"+this.baseTiddlerTitle "<divclass='tc-table-of-contents'><<toc-selective-expandable\"\"\""+this.baseTiddlerTitle
41 306 "[img["+url+"]]" "[img["+$tw.utils.resolvePath(url,this.baseTiddlerTitle)+"]]"
42 306 "[img["+url "[img["+$tw.utils.resolvePath(url,this.baseTiddlerTitle)
43 38 !tiddler||!$tw.utils.hop(tiddler.fields,operator.operand)||(tiddler.fields[operator.operand]!=="") !tiddler||!$tw.utils.hop(tiddler.fields,operator.operand)||(tiddler.fields[operator.operand]==="")
44 38 !$tw.utils.hop(tiddler.fields,operator.operand)||(tiddler.fields[operator.operand]!=="") !$tw.utils.hop(tiddler.fields,operator.operand)||(tiddler.fields[operator.operand]==="")
45 1266 (tiddler.title||"")+line.substr(0,colonPos) (tiddler.title||"")+line.substr(0,colonPos).trim()
46 406 this.syncadaptor.isReady()&&this.numTasksInProgress()===0 (!this.syncadaptor.isReady||this.syncadaptor.isReady())&&this.numTasksInProgress()===0
47 558 $tw.language.getString("Import/Imported")+"\n" $tw.language.getString("Import/Imported/Hint")+"\n"
48 173 "Filtererror:"+e $tw.language.getString("Error/Filter")+":"+e
49 153 "Errorwhilesaving:\n\n"+err $tw.language.getString("Error/WhileSaving")+":\n\n"+err
50 41 "ErrorsavingtoTWEdit:"+event.target.error.code $tw.language.getString("Error/SavingToTWEdit")+":"+event.target.error.code
51 69 "Error:"+ex $tw.language.getString("Error/Caption")+":"+ex
52 80 "Errorloadingpluginlibrary:"+url $tw.language.getString("Error/LoadingPluginLibrary")+":"+url
53 198 $tw.language.getString("Syncer/ErrorRetrievingSkinny")+":" $tw.language.getString("Error/RetrievingSkinny")+":"
54 47 $tw.language.getString("Syncer/XMLHttpRequestError")+":"+this.status $tw.language.getString("Error/XMLHttpRequest")+":"+this.status
55 47 $tw.language.getString("Syncer/XMLHttpRequestError")+":" $tw.language.getString("Error/XMLHttpRequest")+":"
56 30 "Cannotparseplugintiddler"+title+"\nError:"+e "Cannotparseplugintiddler"+title+"\n"+$tw.language.getString("Error/Caption")+":"+e
57 30 "Cannotparseplugintiddler"+title+"\nError:" "Cannotparseplugintiddler"+title+"\n"
58 47 "XMLHttpRequesterrorcode:"+this.status $tw.language.getString("Syncer/XMLHttpRequestError")+":"+this.status
59 39 this.hideMissingLinks&&this.isMissing this.hideMissingLinks&&this.isMissing&&!this.isShadow
60 56 "multipart/form-data;;charset=UTF-8;boundary="+boundary "multipart/form-data;charset=UTF-8;boundary="+boundary
61 56 "multipart/form-data;;charset=UTF-8;boundary="+boundary "multipart/form-data;charset=UTF-8;boundary="+boundary
62 27 tiddler&&$tw.utils.hop(tiddler.fields,operator.operand)&&tiddler.fields[operator.operand]!=="" tiddler&&$tw.utils.hop(tiddler.fields,operator.operand)&&(tiddler.fields[operator.operand]!==""||($tw.utils.isArray(tiddler.fields[operator.operand])&&tiddler.fields[operator.operand].length==0))
63 27 $tw.utils.hop(tiddler.fields,operator.operand)&&tiddler.fields[operator.operand]!=="" $tw.utils.hop(tiddler.fields,operator.operand)&&(tiddler.fields[operator.operand]!==""||($tw.utils.isArray(tiddler.fields[operator.operand])&&tiddler.fields[operator.operand].length==0))
64 27 tiddler&&$tw.utils.hop(tiddler.fields,operator.operand)&&tiddler.fields[operator.operand]!=="" tiddler&&$tw.utils.hop(tiddler.fields,operator.operand)&&tiddler.fields[operator.operand]!=""
65 27 $tw.utils.hop(tiddler.fields,operator.operand)&&tiddler.fields[operator.operand]!=="" $tw.utils.hop(tiddler.fields,operator.operand)&&tiddler.fields[operator.operand]!=""
66 112 this.wiki.getTextReference(this.set,"",this.getVariable("currentTiddler"))===this.setTo this.wiki.getTextReference(this.set,this.defaultSetValue,this.getVariable("currentTiddler"))===this.setTo
67 163 "data:text/vnd.tiddler,"+encodeURI(jsonData) "data:text/vnd.tiddler,"+encodeURIComponent(jsonData)
68 165 "data:text/vnd.tiddler,"+encodeURI(jsonData) "data:text/vnd.tiddler,"+encodeURIComponent(jsonData)
69 19 "data:text/html,"+encodeURIComponent(text) "data:text/html;charset=utf-8,"+encodeURIComponent(text)
70 689 "Errorexecutingbootmodule"+name+":\n"+e "Errorexecutingbootmodule"+name+":\n"+e.stack
71 85 changedAttributes.tiddler||changedAttributes.field||changedAttributes.index changedAttributes.tiddler||changedAttributes.field||changedAttributes.index||changedTiddlers[this.editTitle]
72 85 changedAttributes.field||changedAttributes.index changedAttributes.field||changedAttributes.index||changedTiddlers[this.editTitle]
73 50 !tag.isSelfClosing&&!!$tw.utils.parseTokenRegExp(this.parser.source,this.parser.pos,/([^\S\n]*\r?\n(?:[^\S\n]*\r?\n|$))/g) !tag.isSelfClosing&&!!$tw.utils.parseTokenRegExp(this.parser.source,this.parser.pos,/([^\S\n\r]*\r?\n(?:[^\S\n\r]*\r?\n|$))/g)
74 36 path.resolve($tw.boot.corePath,$tw.config.editionsPath)+"/"+editionName path.resolve($tw.boot.corePath,$tw.config.editionsPath)+path.sep+editionName
75 36 path.resolve($tw.boot.corePath,$tw.config.editionsPath)+"/" path.resolve($tw.boot.corePath,$tw.config.editionsPath)+path.sep
76 90 $tw.boot.wikiTiddlersPath+"/"+self.generateTiddlerFilename(title,extension,files) $tw.boot.wikiTiddlersPath+path.sep+self.generateTiddlerFilename(title,extension,files)
77 90 $tw.boot.wikiTiddlersPath+"/" $tw.boot.wikiTiddlersPath+path.sep
78 38 "h"+this.match[1].length "h"+headingLevel
79 285 !options.excludeTag||!this.tiddlers[t].hasTag(excludeTag) !options.excludeTag||!this.tiddlers[t].hasTag(options.excludeTag)
80 159 "\"default/"+title+"/"+changeCount+":\"" "\"default/"+encodeURIComponent(title)+"/"+changeCount+":\""
81 159 "\"default/"+title+"/"+changeCount "\"default/"+encodeURIComponent(title)+"/"+changeCount
82 159 "\"default/"+title+"/" "\"default/"+encodeURIComponent(title)+"/"
83 159 "\"default/"+title "\"default/"+encodeURIComponent(title)
84 20 element.nodeType===Element.ELEMENT_NODE element.nodeType===1
85 150 format||"YYYYMMDD0hh:0ss" format||"YYYYMMDD0hh:0mm"
86 106 cellMatch[1].substr(cellMatch[1].length-1,1)==="" this.parser.source.substr(this.parser.pos-2,1)===""
87 273 parseTreeNodes||this.parseTreeNode.children parseTreeNodes||(this.parseTreeNode&&this.parseTreeNode.children)
88 337 parseTreeNode.type==="element"&&parseTreeNode.tag==="$link"&&parseTreeNode.attributes.to.type==="string" parseTreeNode.type==="element"&&parseTreeNode.tag==="$link"&&parseTreeNode.attributes.to&&parseTreeNode.attributes.to.type==="string"
89 337 parseTreeNode.tag==="$link"&&parseTreeNode.attributes.to.type==="string" parseTreeNode.tag==="$link"&&parseTreeNode.attributes.to&&parseTreeNode.attributes.to.type==="string"
90 178 !paramValue&&macroCallParseTreeNode.params.length>0 !paramValue&&nextAnonParameter<macroCallParseTreeNode.params.length
91 1316 "TiddlyWiki5requiresnode.jsversion"+$tw.packageInfo.engine.node "TiddlyWiki5requiresnode.jsversion"+$tw.packageInfo.engines.node
92 23 tiddler.fields[operator.operator]===operator.operand tiddler.getFieldString(operator.operator)===operator.operand
93 22 "[!has[draft.of]tag["+STYLESHEET_TAG+"]]" "[is[shadow]!has[draft.of]tag["+STYLESHEET_TAG+"]][!is[shadow]!has[draft.of]tag["+STYLESHEET_TAG+"]]"
94 22 "[!has[draft.of]tag["+STYLESHEET_TAG "[is[shadow]!has[draft.of]tag["+STYLESHEET_TAG+"]][!is[shadow]!has[draft.of]tag["+STYLESHEET_TAG
95 22 "[!has[draft.of]tag["+STYLESHEET_TAG "[is[shadow]!has[draft.of]tag["+STYLESHEET_TAG
96 22 "[is[shadow]!has[draft.of]tag["+STYLESHEET_TAG+"]]" "[!has[draft.of]tag["+STYLESHEET_TAG+"]]"
97 22 "[is[shadow]!has[draft.of]tag["+STYLESHEET_TAG "[!has[draft.of]tag["+STYLESHEET_TAG
98 100 ["keyup","focus","blur"].indexOf(event.type)!==-1 ["input","focus","blur"].indexOf(event.type)!==-1
99 104 ["keyup","focus"].indexOf(event.type)!==-1 ["input","focus"].indexOf(event.type)!==-1
100 72 "(</"+$tw.utils.escapeRegExp(tagName) "</"+$tw.utils.escapeRegExp(tagName)
101 44 title+extension encodeURIComponent(title)+extension
102 130 changedAttributes.target||changedAttributes.template||(this.targetTitle&&changedTiddlers[this.targetTitle])||(this.templateTitle&&changedTiddlers[this.templateTitle]) changedAttributes.target||changedAttributes.template||(this.templateTitle&&changedTiddlers[this.templateTitle])
103 130 changedAttributes.template||(this.targetTitle&&changedTiddlers[this.targetTitle])||(this.templateTitle&&changedTiddlers[this.templateTitle]) changedAttributes.template||(this.templateTitle&&changedTiddlers[this.templateTitle])
104 58 this.match&&this.match.index===this.parse.pos this.match&&this.match.index===this.parser.pos
105 58 this.match.index===this.parse.pos this.match.index===this.parser.pos
106 253 tiddler&&tiddler.fields.text tiddler&&tiddler.fields.text!==undefined
107 197 "varlist=this.getTiddler(\""+$tw.utils.stringify(operator.operand)+"\").fields.text.split(\"\\n\");"+"for(titleinsource){if(list.indexOf(title)===-1){$tw.utils.pushTop(subResults,title);}}" "varlist=this.getTextReference(\""+$tw.utils.stringify(operator.operand)+"\",\"\").split(\"\\n\");"+"for(titleinsource){if(list.indexOf(title)===-1){$tw.utils.pushTop(subResults,title);}}"
108 197 "varlist=this.getTiddler(\""+$tw.utils.stringify(operator.operand) "varlist=this.getTextReference(\""+$tw.utils.stringify(operator.operand)
109 200 "$tw.utils.pushTop(subResults,this.getTiddler(\""+$tw.utils.stringify(operator.operand) "$tw.utils.pushTop(subResults,this.getTextReference(\""+$tw.utils.stringify(operator.operand)
110 70 this.hasParameter("popup")&&!$tw.utils.domContains(this.domNode,event.targetOfCancel) this.hasParameter("popup")&&this.domNode!==event.targetOfCancel&&!$tw.utils.domContains(this.domNode,event.targetOfCancel)
111 70 this.hasParameter("popup")&&event.targetOfCancel!==this.domNode this.hasParameter("popup")&&!$tw.utils.domContains(this.domNode,event.targetOfCancel)
112 33 this.params[1]||"$:/core/tiddlywiki5.template.html" this.params[1]||"$:/core/templates/tiddlywiki5.template.html"
113 417 "<"+"scripttype=\"application/javascript\"data-tiddler-title=\""+title+"\">" "<"+"scripttype=\"text/javascript\"data-tiddler-title=\""+title+"\">"
114 417 "<"+"scripttype=\"application/javascript\"data-tiddler-title=\""+title "<"+"scripttype=\"text/javascript\"data-tiddler-title=\""+title
115 417 "<"+"scripttype=\"application/javascript\"data-tiddler-title=\"" "<"+"scripttype=\"text/javascript\"data-tiddler-title=\""
116 23 "data:"+type+","+encodeURIComponent(text) "data:image/svg+xml,"+encodeURIComponent(text)
117 84 contextPathIsHttp||filepathIsHttp baseDirIsHttp||filepathIsHttp
118 62 a+"=\""+element.attributes[a]+"\"" a+"=\""+utils.htmlEncode(element.attributes[a])+"\""
119 62 a+"=\""+element.attributes[a] a+"=\""+utils.htmlEncode(element.attributes[a])
120 71 isDrag&&onChanged($(target),$(target).val(),event) isDrag&&onChanged($(event.target),$(event.target).val(),event)
121 48 (!IsRandom()&&IsNewDay(Today(),true))||(Verify(13)=="true"&&IsNewDay(Today(),true)&&IsRandom()) (IsNewDay(Today(),true)&&!IsRandom())||(Verify(13)=="true"&&IsNewDay(Today(),true)&&IsRandom())
122 36 APIS.prototype.ORIGINS.length-3 APIS.prototype.ORIGINS.length-2
123 115 "http://"+local+"bing.com/HPImageArchive.aspx?format=js&idx=0&n=1" "https://"+local+"bing.com/HPImageArchive.aspx?format=js&idx=0&n=1"
124 115 "http://"+local "https://"+local
125 276 vo.cur.type!="upload"&&vo.cur.pin==-1&&controlbar.SetDislikeState(false) vo.cur.type!="upload"&&vo.cur.pin==-1&&localStorage["simptab-background-mode"]=="time"&&controlbar.SetDislikeState(false)
126 276 vo.cur.pin==-1&&controlbar.SetDislikeState(false) vo.cur.pin==-1&&localStorage["simptab-background-mode"]=="time"&&controlbar.SetDislikeState(false)
127 177 !is_default&&(vo.cur.favorite==-1&&vo.cur.pin==-1)&&setting.IsRandom() !is_default&&(vo.cur.favorite==-1&&vo.cur.pin==-1&&vo.cur.type!="upload")&&setting.IsRandom()
128 177 (vo.cur.favorite==-1&&vo.cur.pin==-1)&&setting.IsRandom() (vo.cur.favorite==-1&&vo.cur.pin==-1&&vo.cur.type!="upload")&&setting.IsRandom()
129 177 vo.cur.favorite==-1&&vo.cur.pin==-1 vo.cur.favorite==-1&&vo.cur.pin==-1&&vo.cur.type!="upload"
130 520 result&&!$.isArray(result) result&&!$.isEmptyObject(result)
131 39 date.getFullYear()+format(date.getUTCMonth()+1)+format(date.getUTCDate())+format(date.getHours())+format(date.getMinutes())+format(date.getSeconds()) date.getFullYear()+""+format(date.getUTCMonth()+1)+""+format(date.getUTCDate())+""+format(date.getHours())+""+format(date.getMinutes())+""+format(date.getSeconds())
132 39 date.getFullYear()+format(date.getUTCMonth()+1)+format(date.getUTCDate())+format(date.getHours())+format(date.getMinutes()) date.getFullYear()+""+format(date.getUTCMonth()+1)+""+format(date.getUTCDate())+""+format(date.getHours())+""+format(date.getMinutes())
133 39 date.getFullYear()+format(date.getUTCMonth()+1)+format(date.getUTCDate())+format(date.getHours()) date.getFullYear()+""+format(date.getUTCMonth()+1)+""+format(date.getUTCDate())+""+format(date.getHours())
134 39 date.getFullYear()+format(date.getUTCMonth()+1)+format(date.getUTCDate()) date.getFullYear()+""+format(date.getUTCMonth()+1)+""+format(date.getUTCDate())
135 39 date.getFullYear()+format(date.getUTCMonth()+1) date.getFullYear()+""+format(date.getUTCMonth()+1)
136 39 date.getFullYear()+format(date.getUTCMonth()+1) date.getFullYear()+""
137 34 date.getFullYear()+format(date.getUTCMonth()+1)+format(date.getUTCDate()) date.getFullYear()+""+format(date.getUTCMonth()+1)+""+format(date.getUTCDate())
138 34 date.getFullYear()+format(date.getUTCMonth()+1) date.getFullYear()+""+format(date.getUTCMonth()+1)
139 34 date.getFullYear()+format(date.getUTCMonth()+1) date.getFullYear()+""
140 584 setting.Verify(code)=="false"||localStorage["simptab-prv-code"]==code||code==8||(localStorage["simptab-special-day-count"]&&localStorage["simptab-special-day-count"].length===5&&code==7) setting.Verify(code)=="false"||localStorage["simptab-prv-code"]==code||code==9||(localStorage["simptab-special-day-count"]&&localStorage["simptab-special-day-count"].length===5&&code==8)
141 584 localStorage["simptab-prv-code"]==code||code==8||(localStorage["simptab-special-day-count"]&&localStorage["simptab-special-day-count"].length===5&&code==7) localStorage["simptab-prv-code"]==code||code==9||(localStorage["simptab-special-day-count"]&&localStorage["simptab-special-day-count"].length===5&&code==8)
142 584 code==8 code==9
143 584 localStorage["simptab-special-day-count"]&&localStorage["simptab-special-day-count"].length===5&&code==7 localStorage["simptab-special-day-count"]&&localStorage["simptab-special-day-count"].length===5&&code==8
144 584 localStorage["simptab-special-day-count"].length===5&&code==7 localStorage["simptab-special-day-count"].length===5&&code==8
145 584 code==7 code==8
146 105 typeofarguments[0]!=="object"&&arguments.length<5 typeofarguments[0]!=="object"&&arguments.length>0&&arguments.length<5
147 44 event.data+".close" "."+event.data+".close"
148 49 typeofresult==="boolen" typeofresult==="boolean"
149 208 query_host+flie_name+"?random="+Math.round(+newDate()) query_host+flickr_name+"?random="+Math.round(+newDate())
150 208 query_host+flie_name+"?random=" query_host+flickr_name+"?random="
151 208 query_host+flie_name query_host+flickr_name
152 206 query_host+flie_name+"?random="+createRandom(0,1000) query_host+flie_name+"?random="+Math.round(+newDate())
153 51 i<=num.length i<=num
154 36 loc.hostname+uri loc.host+uri
155 7303 Buffer.isBuffer(obj)||(global.ArrayBuffer&&objinstanceofArrayBuffer)||(global.Blob&&objinstanceofBlob) (global.Buffer&&Buffer.isBuffer(obj))||(global.ArrayBuffer&&objinstanceofArrayBuffer)||(global.Blob&&objinstanceofBlob)
156 26 loc||location loc||global.location
157 175 uri.host||global.domain uri.host||global.document.domain||global.location.hostname
158 156 swfobject.getFlashPlayerVersion().major>=1 swfobject.getFlashPlayerVersion().major>=10
159 698 cur.indexOf('\n')>=0 indexOf(cur,'\n')>=0
160 557 isDate(value)&&keys.length===0 isDate(value)&&$keys.length===0
161 557 keys.length===0 $keys.length===0
162 584 keys.length===0 $keys.length===0
163 104 self.sendXHR.readyState==4 this.readyState==4
164 22 self._xhr.readyState==3 self._xhr.readyState==4
165 62 Observer<DescriptorEvent<string>> Observer<DescriptorEvent<
166 151 afterMTUTime-beforeMTUTime<500 afterMTUTime-beforeMTUTime<1000
167 151 afterMTUTime-beforeMTUTime<500 afterMTUTime-beforeMTUTime<1000
168 44 Currency,Unit,Rate,UnitValue Currency,Unit,FiatUnit,Rate,UnitValue
169 44 Currency,Unit,Rate Currency,Unit,FiatUnit,Rate
170 44 Currency,Unit,Rate Currency,Unit,FiatUnit
171 292 this.timeout!=0 currentObject.timeout!=0
172 292 this.timeout!=0 currentObject.timeout!=0
173 71 defaultArgs,payload,status defaultArgs,payload,error
174 1334 a.targetConnection&&!a.targetBlock().isMovable()&&!a.targetBlock().isShadow()||a.targetConnection&&(b=a.targetBlock(),Blockly.pxtBlocklyUtils.isShadowArgumentReporter(b))||Blockly.Functions.isFunctionArgumentReporter(this.sourceBlock_)&&(b=a.sourceBlock_.getRootBlock(),!Blockly.pxtBlocklyUtils.hasMatchingArgumentReporter(b,this.sourceBlock_)) a.targetConnection&&!a.targetBlock().isMovable()&&!a.targetBlock().isShadow()||a.targetConnection&&(b=a.targetBlock(),b.isShadow()&&Blockly.Functions.isFunctionArgumentReporter(b))||Blockly.Functions.isFunctionArgumentReporter(this.sourceBlock_)&&(b=a.sourceBlock_.getRootBlock(),!Blockly.pxtBlocklyUtils.hasMatchingArgumentReporter(b,this.sourceBlock_))
175 1334 a.targetConnection&&(b=a.targetBlock(),Blockly.pxtBlocklyUtils.isShadowArgumentReporter(b))||Blockly.Functions.isFunctionArgumentReporter(this.sourceBlock_)&&(b=a.sourceBlock_.getRootBlock(),!Blockly.pxtBlocklyUtils.hasMatchingArgumentReporter(b,this.sourceBlock_)) a.targetConnection&&(b=a.targetBlock(),b.isShadow()&&Blockly.Functions.isFunctionArgumentReporter(b))||Blockly.Functions.isFunctionArgumentReporter(this.sourceBlock_)&&(b=a.sourceBlock_.getRootBlock(),!Blockly.pxtBlocklyUtils.hasMatchingArgumentReporter(b,this.sourceBlock_))
176 1334 a.targetConnection&&(b=a.targetBlock(),Blockly.pxtBlocklyUtils.isShadowArgumentReporter(b)) a.targetConnection&&(b=a.targetBlock(),b.isShadow()&&Blockly.Functions.isFunctionArgumentReporter(b))
177 1334 b=a.targetBlock(),Blockly.pxtBlocklyUtils.isShadowArgumentReporter(b) b=a.targetBlock(),b.isShadow()&&Blockly.Functions.isFunctionArgumentReporter(b)
178 204 pxt.semver.strcmp("3.9.0",pxt.appTarget.versions.pxt)<0&&pxt.appTarget.appTheme&&pxt.appTarget.appTheme.extendEditor pxt.semver.strcmp(pxt.appTarget.versions.pxt,"3.9.0")<0&&pxt.appTarget.appTheme&&pxt.appTarget.appTheme.extendEditor
179 204 pxt.semver.strcmp("3.9.0",pxt.appTarget.versions.pxt)<0 pxt.semver.strcmp(pxt.appTarget.versions.pxt,"3.9.0")<0
180 204 pxt.semver.strcmp("v3.9",pxt.appTarget.versions.pxt)<0&&pxt.appTarget.appTheme&&pxt.appTarget.appTheme.extendEditor pxt.semver.strcmp("3.9.0",pxt.appTarget.versions.pxt)<0&&pxt.appTarget.appTheme&&pxt.appTarget.appTheme.extendEditor
181 204 pxt.semver.strcmp("v3.9",pxt.appTarget.versions.pxt)<0 pxt.semver.strcmp("3.9.0",pxt.appTarget.versions.pxt)<0
182 156 "npmpack'"+moduleOutDir "npmpack\""+moduleOutDir
183 340 parSets.GEN_DSBL_ADS&&(document.getElementById("masthead_child")||document.getElementById("feed-pyv-container")||document.getElementsByClassName("pyv-afc-ads-container")[0]||document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item)")) parSets.GEN_DSBL_ADS&&(document.getElementById("masthead_child")||document.getElementById("feed-pyv-container")||document.getElementsByClassName("pyv-afc-ads-container")[0]||document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item):not(.dashboard-widget-item)"))
184 340 document.getElementById("masthead_child")||document.getElementById("feed-pyv-container")||document.getElementsByClassName("pyv-afc-ads-container")[0]||document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item)") document.getElementById("masthead_child")||document.getElementById("feed-pyv-container")||document.getElementsByClassName("pyv-afc-ads-container")[0]||document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item):not(.dashboard-widget-item)")
185 340 document.getElementById("feed-pyv-container")||document.getElementsByClassName("pyv-afc-ads-container")[0]||document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item)") document.getElementById("feed-pyv-container")||document.getElementsByClassName("pyv-afc-ads-container")[0]||document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item):not(.dashboard-widget-item)")
186 340 document.getElementsByClassName("pyv-afc-ads-container")[0]||document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item)") document.getElementsByClassName("pyv-afc-ads-container")[0]||document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item):not(.dashboard-widget-item)")
187 340 document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item)") document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item):not(.dashboard-widget-item)")
188 340 parSets.GEN_DSBL_ADS&&(document.getElementById("masthead_child")||document.getElementById("feed-pyv-container")||document.getElementsByClassName("pyv-afc-ads-container")[0]||document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item)")) parSets.GEN_DSBL_ADS&&(document.getElementById("masthead_child")||document.getElementById("feed-pyv-container")||document.getElementsByClassName("pyv-afc-ads-container")[0]||document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item):not(.dashboard-widget-item)"))
189 340 document.getElementById("masthead_child")||document.getElementById("feed-pyv-container")||document.getElementsByClassName("pyv-afc-ads-container")[0]||document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item)") document.getElementById("masthead_child")||document.getElementById("feed-pyv-container")||document.getElementsByClassName("pyv-afc-ads-container")[0]||document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item):not(.dashboard-widget-item)")
190 340 document.getElementById("feed-pyv-container")||document.getElementsByClassName("pyv-afc-ads-container")[0]||document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item)") document.getElementById("feed-pyv-container")||document.getElementsByClassName("pyv-afc-ads-container")[0]||document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item):not(.dashboard-widget-item)")
191 340 document.getElementsByClassName("pyv-afc-ads-container")[0]||document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item)") document.getElementsByClassName("pyv-afc-ads-container")[0]||document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item):not(.dashboard-widget-item)")
192 340 document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item)") document.getElementsByClassName("ad-div")[0]||document.querySelector(".video-list-item:not(.related-list-item):not(.dashboard-widget-item)")
193 1145 clear&&[27,32,35,36,37,38,39,40,66,67,79,87,187,189].indexOf(event.which)>-1&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0 clear&&((event.which>47&&event.which<58)||[27,32,35,36,37,38,39,40,66,67,79,87,187,189].indexOf(event.which)>-1)&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0
194 1145 [27,32,35,36,37,38,39,40,66,67,79,87,187,189].indexOf(event.which)>-1&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0 ((event.which>47&&event.which<58)||[27,32,35,36,37,38,39,40,66,67,79,87,187,189].indexOf(event.which)>-1)&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0
195 1145 clear&&[27,32,35,36,37,38,39,40,66,67,79,87,187,189].indexOf(event.which)>-1&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0 clear&&((event.which>47&&event.which<58)||[27,32,35,36,37,38,39,40,66,67,79,87,187,189].indexOf(event.which)>-1)&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0
196 1145 [27,32,35,36,37,38,39,40,66,67,79,87,187,189].indexOf(event.which)>-1&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0 ((event.which>47&&event.which<58)||[27,32,35,36,37,38,39,40,66,67,79,87,187,189].indexOf(event.which)>-1)&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0
197 1149 event.target!==api&&!window.frameSteps&&event.which<112&&!event.target.isContentEditable&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0 event.target!==api&&!window.frameSteps&&event.which<112&&!event.ctrlKey&&!event.shiftKey&&!event.altKey&&!event.metaKey&&!event.target.isContentEditable&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0
198 1149 !window.frameSteps&&event.which<112&&!event.target.isContentEditable&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0 !window.frameSteps&&event.which<112&&!event.ctrlKey&&!event.shiftKey&&!event.altKey&&!event.metaKey&&!event.target.isContentEditable&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0
199 1149 event.which<112&&!event.target.isContentEditable&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0 event.which<112&&!event.ctrlKey&&!event.shiftKey&&!event.altKey&&!event.metaKey&&!event.target.isContentEditable&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0
200 1149 event.target!==api&&!window.frameSteps&&event.which<112&&!event.target.isContentEditable&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0 event.target!==api&&!window.frameSteps&&event.which<112&&!event.ctrlKey&&!event.shiftKey&&!event.altKey&&!event.metaKey&&!event.target.isContentEditable&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0
201 1149 !window.frameSteps&&event.which<112&&!event.target.isContentEditable&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0 !window.frameSteps&&event.which<112&&!event.ctrlKey&&!event.shiftKey&&!event.altKey&&!event.metaKey&&!event.target.isContentEditable&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0
202 1149 event.which<112&&!event.target.isContentEditable&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0 event.which<112&&!event.ctrlKey&&!event.shiftKey&&!event.altKey&&!event.metaKey&&!event.target.isContentEditable&&["EMBED","INPUT","OBJECT","TEXTAREA","IFRAME"].indexOf(document.activeElement.tagName)<0
203 1473 (parSets.BLK_ON||parSets.GEN_SDBR_ON)&&(window.location.pathname==="/"||window.location.pathname==="/results"||window.location.pathname==="/watch"||window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1) (parSets.BLK_ON||parSets.GEN_SDBR_ON)&&(window.location.pathname==="/"||window.location.pathname==="/results"||window.location.pathname==="/watch"||window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1||window.location.href.split("/feed/trending").length>1)
204 1473 window.location.pathname==="/"||window.location.pathname==="/results"||window.location.pathname==="/watch"||window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1 window.location.pathname==="/"||window.location.pathname==="/results"||window.location.pathname==="/watch"||window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1||window.location.href.split("/feed/trending").length>1
205 1473 window.location.pathname==="/results"||window.location.pathname==="/watch"||window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1 window.location.pathname==="/results"||window.location.pathname==="/watch"||window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1||window.location.href.split("/feed/trending").length>1
206 1473 window.location.pathname==="/watch"||window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1 window.location.pathname==="/watch"||window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1||window.location.href.split("/feed/trending").length>1
207 1473 window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1 window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1||window.location.href.split("/feed/trending").length>1
208 1473 (parSets.BLK_ON||parSets.GEN_SDBR_ON)&&(window.location.pathname==="/"||window.location.pathname==="/results"||window.location.pathname==="/watch"||window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1) (parSets.BLK_ON||parSets.GEN_SDBR_ON)&&(window.location.pathname==="/"||window.location.pathname==="/results"||window.location.pathname==="/watch"||window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1||window.location.href.split("/feed/trending").length>1)
209 1473 window.location.pathname==="/"||window.location.pathname==="/results"||window.location.pathname==="/watch"||window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1 window.location.pathname==="/"||window.location.pathname==="/results"||window.location.pathname==="/watch"||window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1||window.location.href.split("/feed/trending").length>1
210 1473 window.location.pathname==="/results"||window.location.pathname==="/watch"||window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1 window.location.pathname==="/results"||window.location.pathname==="/watch"||window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1||window.location.href.split("/feed/trending").length>1
211 1473 window.location.pathname==="/watch"||window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1 window.location.pathname==="/watch"||window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1||window.location.href.split("/feed/trending").length>1
212 1473 window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1 window.location.pathname==="/feed/music"||window.location.href.split("/feed/subscriptions").length>1||window.location.href.split("/feed/trending").length>1
213 1137 comments&&!comments.lazyload&&!comments.classList.contains("show")&&args[0].split("comments").length>1 comments&&!comments.lazyload&&parSets.VID_HIDE_COMS==="1"&&!comments.classList.contains("show")&&args[0].split("comments").length>1
214 1137 !comments.lazyload&&!comments.classList.contains("show")&&args[0].split("comments").length>1 !comments.lazyload&&parSets.VID_HIDE_COMS==="1"&&!comments.classList.contains("show")&&args[0].split("comments").length>1
215 32 (clientX-left)/right (clientX-left)/(right-left)
216 26 tabs[3].style.borderBottomColor===borderFixture.style.borderBottomColor tabs[2].style.borderBottomColor===borderFixture.style.borderBottomColor
217 26 tabs[3].style.borderBottomColor===borderFixture.style.borderBottomColor tabs[2].style.borderBottomColor===borderFixture.style.borderBottomColor
218 352 $this.minimize_set_interval!==undefined typeofminimize_set_interval!==undefined
219 352 $this.minimize_set_interval!==undefined typeofminimize_set_interval!==undefined
220 1005 is_orgnaization_member!==0||parseInt(board.attributes.organization_visibility)===1||(authuser.user.role_id)===1 is_orgnaization_member!==0||parseInt(board.attributes.organization_visibility)===1||parseInt(authuser.user.role_id)===1
221 1005 parseInt(board.attributes.organization_visibility)===1||(authuser.user.role_id)===1 parseInt(board.attributes.organization_visibility)===1||parseInt(authuser.user.role_id)===1
222 1005 (authuser.user.role_id)===1 parseInt(authuser.user.role_id)===1
223 1005 is_orgnaization_member!==0||parseInt(board.attributes.organization_visibility)===1||(authuser.user.role_id)===1 is_orgnaization_member!==0||parseInt(board.attributes.organization_visibility)===1||parseInt(authuser.user.role_id)===1
224 1005 parseInt(board.attributes.organization_visibility)===1||(authuser.user.role_id)===1 parseInt(board.attributes.organization_visibility)===1||parseInt(authuser.user.role_id)===1
225 1005 (authuser.user.role_id)===1 parseInt(authuser.user.role_id)===1
226 1760 parseInt(activity.attributes.card_id)!==0&&activity.attributes.token!==authuser.access_token&&(parseInt(Auth.user.unread_activity_id)<parseInt(activity.attributes.id)) parseInt(activity.attributes.card_id)!==0&&activity.attributes.token!==authuser.access_token&&(parseInt(Auth.user.unread_activity_id)<parseInt(activity.attributes.id)||_.isUndefined(Auth.user.unread_activity_id))
227 1760 activity.attributes.token!==authuser.access_token&&(parseInt(Auth.user.unread_activity_id)<parseInt(activity.attributes.id)) activity.attributes.token!==authuser.access_token&&(parseInt(Auth.user.unread_activity_id)<parseInt(activity.attributes.id)||_.isUndefined(Auth.user.unread_activity_id))
228 1126 (!_.isUndefined(APPS)&&APPS!==null&&!_.isUndefined(APPS.enabled_apps)&&APPS.enabled_apps!==null)&&(activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate")&&!_.isEmpty(activity.attributes.revisions.new_value.custom_fields) (!_.isUndefined(APPS)&&APPS!==null&&!_.isUndefined(APPS.enabled_apps)&&APPS.enabled_apps!==null)&&(activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate")&&!_.isEmpty(activity.attributes.revisions.new_value.custom_fields)
229 1126 (activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate")&&!_.isEmpty(activity.attributes.revisions.new_value.custom_fields) (activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate")&&!_.isEmpty(activity.attributes.revisions.new_value.custom_fields)
230 1126 activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate" activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate"
231 1126 activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate" activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate"
232 1126 activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate" activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate"
233 1126 activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate" activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate"
234 1126 activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate" activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate"
235 1126 activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate" activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate"
236 1126 activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate" activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate"
237 1126 (!_.isUndefined(APPS)&&APPS!==null&&!_.isUndefined(APPS.enabled_apps)&&APPS.enabled_apps!==null)&&(activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate")&&!_.isEmpty(activity.attributes.revisions.new_value.custom_fields) (!_.isUndefined(APPS)&&APPS!==null&&!_.isUndefined(APPS.enabled_apps)&&APPS.enabled_apps!==null)&&(activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate")&&!_.isEmpty(activity.attributes.revisions.new_value.custom_fields)
238 1126 (activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate")&&!_.isEmpty(activity.attributes.revisions.new_value.custom_fields) (activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate")&&!_.isEmpty(activity.attributes.revisions.new_value.custom_fields)
239 1126 activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate" activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate"
240 1126 activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate" activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate"
241 1126 activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate" activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate"
242 1126 activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate" activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate"
243 1126 activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate" activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate"
244 1126 activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate" activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate"
245 1126 activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate" activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"||activity.attributes.type==="delete_card_startdate"
246 1112 (!_.isUndefined(APPS)&&APPS!==null&&!_.isUndefined(APPS.enabled_apps)&&APPS.enabled_apps!==null)&&(activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate")&&!_.isEmpty(activity.attributes.revisions.new_value.custom_fields) (!_.isUndefined(APPS)&&APPS!==null&&!_.isUndefined(APPS.enabled_apps)&&APPS.enabled_apps!==null)&&(activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate")&&!_.isEmpty(activity.attributes.revisions.new_value.custom_fields)
247 1112 (activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate")&&!_.isEmpty(activity.attributes.revisions.new_value.custom_fields) (activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate")&&!_.isEmpty(activity.attributes.revisions.new_value.custom_fields)
248 1112 activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate" activity.attributes.type==="add_card_estimatedtime"||activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"
249 1112 activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate" activity.attributes.type==="edit_card_estimatedtime"||activity.attributes.type==="delete_card_estimatedtime"||activity.attributes.type==="add_card_spenttime"||activity.attributes.type==="edit_card_spenttime"||activity.attributes.type==="delete_card_spenttime"||activity.attributes.type==="add_card_startdate"||activity.attributes.type==="edit_card_startdate"
250 1112 activity.attributes.type==="add_card_spenttime" activity.attributes.type==="delete_card_estimatedtime"
251 1112 activity.attributes.type==="edit_card_spenttime" activity.attributes.type==="add_card_spenttime"
252 1112 activity.attributes.type==="delete_card_spenttime" activity.attributes.type==="edit_card_spenttime"
253 1112 activity.attributes.type==="add_card_startdate" activity.attributes.type==="delete_card_spenttime"
254 1112 activity.attributes.type==="edit_card_startdate" activity.attributes.type==="add_card_startdate"
255 7 $(".js-board-list")&&(/Edge/.test(navigator.userAgent)||!!navigator.userAgent.match(/Tradient.*rv\:11\./)) $(".js-board-list")&&(/Edge/.test(navigator.userAgent)||!!navigator.userAgent.match(/Trident.*rv\:11\./))
256 7 /Edge/.test(navigator.userAgent)||!!navigator.userAgent.match(/Tradient.*rv\:11\./) /Edge/.test(navigator.userAgent)||!!navigator.userAgent.match(/Trident.*rv\:11\./)
257 851 parseInt(board.attributes.is_closed)==0&&parseInt(board.attributes.organization_id)!==0 parseInt(board.attributes.is_closed)===0&&parseInt(board.attributes.organization_id)!==0
258 31 !_.isUndefined(authuser.user)&&!_.isUndefined(this.model.board_users) !_.isUndefined(authuser.user)&&!_.isEmpty(this.model)&&!_.isUndefined(this.model.board_users)
259 31 !_.isUndefined(authuser.user)&&!_.isUndefined(this.model.board_users) !_.isUndefined(authuser.user)&&!_.isEmpty(this.model)&&!_.isUndefined(this.model.board_users)
260 19 pattern.test(data.get("name"))||pattern.test(data.get("email")) pattern.test(data.get("username"))||pattern.test(data.get("email"))
261 938 $(window).height()-78 $(window).height()-38
262 1482 $(window).height()-40 $(window).height()-38
263 73 $(window).height()-40 $(window).height()-38
264 938 $(window).height()-78 $(window).height()-38
265 1482 $(window).height()-40 $(window).height()-38
266 73 $(window).height()-40 $(window).height()-38
267 627 (matrix.cell(c,r).real*100).toFixed(4)+"%" (matrix.cell(r,c).real*100).toFixed(4)+"%"
268 627 matrix.cell(c,r).real*100 matrix.cell(r,c).real*100
269 1383 boundingWidth/w (boundingWidth-2)/w
270 1387 2/scale 1/scale
271 1396 h*n step*n
272 710 g!==undefined&&g._requiredContextKeys.indexOf(key)!==-1 g!==undefined&&g.getUnmetContextKeys().has(key)
273 710 g!==undefined&&g._requiredContextKeys.indexOf(key)!==-1 g!==undefined&&g.getUnmetContextKeys().has(key)
274 91 gate.height>4||gate.knownBitPermutationFunc===undefined gate.height>6||gate.knownBitPermutationFunc===undefined
275 91 gate.height>4 gate.height>6
276 1467 prefix+Util.bin(colCount-1-i,rowWires) prefix+Util.bin(colCount-1-i,colWires)
277 714 rowShift>0&&gatesOfCol.length<Config.MAX_WIRE_COUNT rowShift>0&&newGateColumn(gatesOfCol).minimumRequiredWireCount()<Config.MAX_WIRE_COUNT
278 714 gatesOfCol.length<Config.MAX_WIRE_COUNT newGateColumn(gatesOfCol).minimumRequiredWireCount()<Config.MAX_WIRE_COUNT
279 170 p.x<0||p.y<top||p.y>top+this.desiredHeight() p.x<0||p.y<this.top||p.y>this.top+this.desiredHeight()
280 170 p.y<top p.y<this.top
281 170 p.y>top+this.desiredHeight() p.y>this.top+this.desiredHeight()
282 170 top+this.desiredHeight() this.top+this.desiredHeight()
283 501 this.locIsControl(pt)&&!this.locIsMeasured(pt) this.locIsControl(pt)&&!this.locIsMeasured(pt)&&this.gateAtLocIsDisabledReason(pt)===undefined
284 126 args.customStats||Matrix.zero(n,n).times(NaN) args.customStats||Matrix.zero(1<<n,1<<n).times(NaN)
285 28 obj===THROW_IF_EMPTY alternative===THROW_IF_EMPTY
286 87 current!==null&&current.id===id current!==null&&current.id===id&&current.client
287 24 ""+$scope.torrent.getPercentStr() ""+scope.torrent.getPercentStr()
288 77 status===409 response.status===409
289 77 status===409 response.status===409
290 2 Number.isInteger(queue)&&queue>=0 Number.isInteger(queue)&&queue>0
291 340 torrents.all&&torrents.all.length>0 torrents.all&&torrents.all.length>=0
292 352 torrents.deleted&&torrents.deleted.length>=0 torrents.deleted&&torrents.deleted.length>0
293 340 torrents.all&&torrents.all.length>0 torrents.all&&torrents.all.length>=0
294 352 torrents.deleted&&torrents.deleted.length>=0 torrents.deleted&&torrents.deleted.length>0
295 352 torrents.deleted&&torrents.deleted.length>0 torrents.deleted&&torrents.deleted.length>=0
296 352 torrents.deleted&&torrents.deleted.length>0 torrents.deleted&&torrents.deleted.length>=0
297 17 sortMode.name===queryParams.sort_mode sortMode.name.replace('','+')===queryParams.sort_mode
298 382 (blob.size/1024).toFixed(4)>=limitKb (blob.file.size/1024).toFixed(4)>=limitKb
299 382 blob.size/1024 blob.file.size/1024
300 44351 (HEAP32[((src)>>2)])|0 (HEAP32[src>>2])|0
301 44351 (HEAP32[((src)>>2)])|0 (HEAP32[src>>2])|0
302 1458 textarea.selectionStart||textarea.selectionStart==='0' textarea.selectionStart||textarea.selectionStart===0
303 1458 textarea.selectionStart==='0' textarea.selectionStart===0
304 334 this.view.scrollPosition+delta-this.view.this.view.$el.scrollTop(newScrollPosition) this.view.scrollPosition+delta-this.view.outerHeight
305 469 this.isExpiring()&&!this.expireTimer this.isExpiring()&&!this.expirationTimeout
306 37720 senderinstanceofMessageSender senderinstanceoftextsecure.MessageSender
307 10 senderinstanceofMessageSender senderinstanceoftextsecure.MessageSender
308 17022 message.group&&message.group.id message.group&&message.group.id&&message.group.type!=textsecure.protobuf.PushMessageContent.GroupContext.Type.QUIT
309 181 message.group&&message.group.id message.group&&message.group.id&&message.group.type!=textsecure.protobuf.PushMessageContent.GroupContext.Type.QUIT
310 650 decrypted.group.type!=textsecure.protos.PushMessageContentProtobuf.GroupContext.UPDATE decrypted.group.type!=textsecure.protos.PushMessageContentProtobuf.GroupContext.Type.UPDATE
311 101 typeofthing=="string"||typeofthing=="number"||(thing===Object(thing)&&(thing.__proto__==StaticArrayBufferProto||thing.__proto__==StaticUint8ArrayProto||thing.__proto__==StaticByteBufferProto||thing.__proto__==StaticWordArrayProto)) typeofthing=="string"||typeofthing=="number"||typeofthing=="boolean"||(thing===Object(thing)&&(thing.__proto__==StaticArrayBufferProto||thing.__proto__==StaticUint8ArrayProto||thing.__proto__==StaticByteBufferProto||thing.__proto__==StaticWordArrayProto))
312 101 typeofthing=="number"||(thing===Object(thing)&&(thing.__proto__==StaticArrayBufferProto||thing.__proto__==StaticUint8ArrayProto||thing.__proto__==StaticByteBufferProto||thing.__proto__==StaticWordArrayProto)) typeofthing=="number"||typeofthing=="boolean"||(thing===Object(thing)&&(thing.__proto__==StaticArrayBufferProto||thing.__proto__==StaticUint8ArrayProto||thing.__proto__==StaticByteBufferProto||thing.__proto__==StaticWordArrayProto))
313 12 valueinstanceofFunction valueinstanceofDate
314 70 this.body_.conversation.type===this.ConversationStages.NEW&&this.sessionStarted_&&typeofthis.sessionStarted_==='function' this.body_.conversation.type===this.ConversationTypes.NEW&&this.sessionStarted_&&typeofthis.sessionStarted_==='function'
315 70 this.body_.conversation.type===this.ConversationStages.NEW this.body_.conversation.type===this.ConversationTypes.NEW
316 1605 argument.extension.userDecision===this.Transactions.DeliveryAddressDecision.ACCEPTED argument.extension.userDecision===this.Transactions.DeliveryAddressUserDecision.ACCEPTED
317 40 (this.app&&this.app.options.sassOptions)||{} (this.app&&this.app.options&&this.app.options.sassOptions)||{}
318 40 this.app&&this.app.options.sassOptions this.app&&this.app.options&&this.app.options.sassOptions
319 6 16!==t 91!==t
320 6 91!==t 16!==t
321 6 i.uiOptions?(G=e.$eval("["+i.uiOptions+"]"),G=angular.isObject(G[0])?function(e,n){
for(vartine)
Object.prototype.hasOwnProperty.call(e,t)&&(void0===n[t]?n[t]=angular.copy(e[t]):angular.isObject(n[t])&&!angular.isArray(n[t])&&(n[t]=angular.extend({},e[t],n[t])));
returnn;
}(t,G[0]):t):G=t,i.$observe("uiMask",u),angular.isDefined(i.uiMaskPlaceholder)?i.$observe("uiMaskPlaceholder",o):i.$observe("placeholder",o),angular.isDefined(i.uiMaskPlaceholderChar)&&i.$observe("uiMaskPlaceholderChar",l),a.$formatters.push(c),a.$parsers.push(s) i.uiOptions?(G=e.$eval("["+i.uiOptions+"]"),G=angular.isObject(G[0])?function(e,n){
for(vartine)
Object.prototype.hasOwnProperty.call(e,t)&&(void0===n[t]?n[t]=angular.copy(e[t]):angular.isObject(n[t])&&!angular.isArray(n[t])&&(n[t]=angular.extend({},e[t],n[t])));
returnn;
}(t,G[0]):t):G=t,i.$observe("uiMask",u),angular.isDefined(i.uiMaskPlaceholder)?i.$observe("uiMaskPlaceholder",o):i.$observe("placeholder",o),angular.isDefined(i.uiMaskPlaceholderChar)&&i.$observe("uiMaskPlaceholderChar",l),a.$formatters.push(c),a.$parsers.unshift(s)
322 6 r!==-(1/0) r!==1/0
323 55 viewport.height()*Math.max(.2,+$attr.padding||.5) viewport.height()*Math.max(0.2,+$attr.padding||0.5)
324 55 +$attr.padding||.5 +$attr.padding||0.5
325 34 agular.isObject(expression)&&angular.isFunction(expression.then) angular.isObject(expression)&&angular.isFunction(expression.then)
326 18 top+attrs.uiScrollfix.substr(1) top+parseFloat(attrs.uiScrollfix.substr(1))
327 51 Munckin.sKey+email Munchkin.sKey+email
328 10 _czc||[] window._czc||[]
329 10 _czc||[] window._czc||[]
330 51 Munckin.sKey+email Munchkin.sKey+email
331 81 properties.page||window.location.hash.substring(1) properties.page||window.location.hash.substring(1)||window.location.pathname
332 5 b.waitForVendorCount=0,b.waitForVendorApi=function(a,c,d,e,f){
f||b.waitForVendorCount++,e||(e=d,d=void0),!Object.prototype.hasOwnProperty.call(window,a)||void0!==d&&void0===window[a][d]?setTimeout(function(){
b.waitForVendorApi(a,c,d,e,!0);
},c):(b.waitForVendorCount--,e(window[a]));
},a.module("angulartics",[]).provider("$analytics",function(){
varc={
pageTracking:{
autoTrackFirstPage:!0,
autoTrackVirtualPages:!0,
trackRelativePath:!1,
autoBasePath:!1,
basePath:""},
eventTracking:{},
bufferFlushDelay:1e3},d=["pageTrack","eventTrack","setUsername","setUserProperties","setUserPropertiesOnce","setSuperProperties","setSuperPropertiesOnce"],e={},f={},g=function(a){
returnfunction(){
b.waitForVendorCount&&(e[a]||(e[a]=[]),e[a].push(arguments));
};
},h=function(b,c){
returnf[b]||(f[b]=[]),f[b].push(c),function(){
varc=arguments;
a.forEach(f[b],function(a){
a.apply(this,c);
},this);
};
},i={
settings:c},j=function(a,b){
b?setTimeout(a,b):a();
},k={
$get:function(){
returni;
},
api:i,
settings:c,
virtualPageviews:function(a){
this.settings.pageTracking.autoTrackVirtualPages=a;
},
firstPageview:function(a){
this.settings.pageTracking.autoTrackFirstPage=a;
},
withBase:function(b){
this.settings.pageTracking.basePath=b?a.element("base").attr("href").slice(0,-1):"";
},
withAutoBase:function(a){
this.settings.pageTracking.autoBasePath=a;
}},l=function(b,d){
i[b]=h(b,d);
varf=c[b],g=f?f.bufferFlushDelay:null,k=null!==g?g:c.bufferFlushDelay;
a.forEach(e[b],function(a,b){
j(function(){
d.apply(this,a);
},b*k);
});
},m=function(a){
returna.replace(/^./,function(a){
returna.toUpperCase();
});
},n=function(a){
varb="register"+m(a);
k[b]=function(b){
l(a,b);
},i[a]=h(a,g(a));
};
returna.forEach(d,n),k;
}).run(["$rootScope","$location","$window","$analytics","$injector",function(a,b,c,d,e){
if(d.settings.pageTracking.autoTrackFirstPage){
varf=!0;
if(e.has("$route")){
varg=e.get("$route");
for(varhing.routes){
f=!1;
break;
}
}elseif(e.has("$state")){
vari=e.get("$state");
for(varjini.states){
f=!1;
break;
}
}else
f=!1;
if(f)
if(d.settings.pageTracking.autoBasePath&&(d.settings.pageTracking.basePath=c.location.pathname),d.settings.trackRelativePath){
vark=d.settings.pageTracking.basePath+b.url();
d.pageTrack(k);
}else
d.pageTrack(b.absUrl());
}
d.settings.pageTracking.autoTrackVirtualPages&&(d.settings.pageTracking.autoBasePath&&(d.settings.pageTracking.basePath=c.location.pathname+"#"),e.has("$route")&&a.$on("$routeChangeSuccess",function(a,c){
if(!c||!(c.$$route||c).redirectTo){
vare=d.settings.pageTracking.basePath+b.url();
d.pageTrack(e);
}
}),e.has("$state")&&a.$on("$stateChangeSuccess",function(){
vara=d.settings.pageTracking.basePath+b.url();
d.pageTrack(a);
}));
}]).directive("analyticsOn",["$analytics","$timeout",function(b){
functionc(a){
return["a:","button:","button:button","button:submit","input:button","input:submit"].indexOf(a.tagName.toLowerCase()+":"+(a.type||""))>=0;
}
functiond(a){
returnc(a)?"click":"click";
}
functione(a){
returnc(a)?a.innerText||a.value:a.id||a.name||a.tagName;
}
functionf(a){
return"analytics"===a.substr(0,9)&&-1===["On","Event","If","Properties","EventType"].indexOf(a.substr(9));
}
functiong(a){
varb=a.slice(9);
return"undefined"!=typeofb&&null!==b&&b.length>0?b.substring(0,1).toLowerCase()+b.substring(1):b;
}
return{
restrict:"A",
scope:!0,
link:function(c,h,i){
varj=i.analyticsOn||d(h[0]);
c.$analytics={},a.forEach(i.$attr,function(a,b){
f(b)&&i.$observe(b,function(a){
c.$analytics[g(b)]=a;
});
}),a.element(h[0]).bind(j,function(d){
varf=i.analyticsEvent||e(h[0]);
c.$analytics.eventType=d.type,(!i.analyticsIf||c.$eval(i.analyticsIf))&&(i.analyticsProperties&&a.extend(c.$analytics,c.$eval(i.analyticsProperties)),b.eventTrack(f,c.$analytics));
});
}};
}]) b.waitForVendorCount=0,b.waitForVendorApi=function(a,c,d,e,f){
f||b.waitForVendorCount++,e||(e=d,d=void0),!Object.prototype.hasOwnProperty.call(window,a)||void0!==d&&void0===window[a][d]?setTimeout(function(){
b.waitForVendorApi(a,c,d,e,!0);
},c):(b.waitForVendorCount--,e(window[a]));
},a.module("angulartics",[]).provider("$analytics",function(){
varc={
pageTracking:{
autoTrackFirstPage:!0,
autoTrackVirtualPages:!0,
trackRelativePath:!1,
autoBasePath:!1,
basePath:""},
eventTracking:{},
bufferFlushDelay:1e3},d=["pageTrack","eventTrack","setUsername","setUserProperties","setUserPropertiesOnce","setSuperProperties","setSuperPropertiesOnce"],e={},f={},g=function(a){
returnfunction(){
b.waitForVendorCount&&(e[a]||(e[a]=[]),e[a].push(arguments));
};
},h=function(b,c){
returnf[b]||(f[b]=[]),f[b].push(c),function(){
varc=arguments;
a.forEach(f[b],function(a){
a.apply(this,c);
},this);
};
},i={
settings:c},j=function(a,b){
b?setTimeout(a,b):a();
},k={
$get:function(){
returni;
},
api:i,
settings:c,
virtualPageviews:function(a){
this.settings.pageTracking.autoTrackVirtualPages=a;
},
firstPageview:function(a){
this.settings.pageTracking.autoTrackFirstPage=a;
},
withBase:function(b){
this.settings.pageTracking.basePath=b?a.element("base").attr("href").slice(0,-1):"";
},
withAutoBase:function(a){
this.settings.pageTracking.autoBasePath=a;
}},l=function(b,d){
i[b]=h(b,d);
varf=c[b],g=f?f.bufferFlushDelay:null,k=null!==g?g:c.bufferFlushDelay;
a.forEach(e[b],function(a,b){
j(function(){
d.apply(this,a);
},b*k);
});
},m=function(a){
returna.replace(/^./,function(a){
returna.toUpperCase();
});
},n=function(a){
varb="register"+m(a);
k[b]=function(b){
l(a,b);
},i[a]=h(a,g(a));
};
returna.forEach(d,n),k;
}).run(["$rootScope","$location","$window","$analytics","$injector",function(a,b,c,d,e){
if(d.settings.pageTracking.autoTrackFirstPage){
varf=!0;
if(e.has("$route")){
varg=e.get("$route");
for(varhing.routes){
f=!1;
break;
}
}elseif(e.has("$state")){
vari=e.get("$state");
for(varjini.get()){
f=!1;
break;
}
}else
f=!1;
if(f)
if(d.settings.pageTracking.autoBasePath&&(d.settings.pageTracking.basePath=c.location.pathname),d.settings.trackRelativePath){
vark=d.settings.pageTracking.basePath+b.url();
d.pageTrack(k);
}else
d.pageTrack(b.absUrl());
}
d.settings.pageTracking.autoTrackVirtualPages&&(d.settings.pageTracking.autoBasePath&&(d.settings.pageTracking.basePath=c.location.pathname+"#"),e.has("$route")&&a.$on("$routeChangeSuccess",function(a,c){
if(!c||!(c.$$route||c).redirectTo){
vare=d.settings.pageTracking.basePath+b.url();
d.pageTrack(e);
}
}),e.has("$state")&&a.$on("$stateChangeSuccess",function(){
vara=d.settings.pageTracking.basePath+b.url();
d.pageTrack(a);
}));
}]).directive("analyticsOn",["$analytics","$timeout",function(b){
functionc(a){
return["a:","button:","button:button","button:submit","input:button","input:submit"].indexOf(a.tagName.toLowerCase()+":"+(a.type||""))>=0;
}
functiond(a){
returnc(a)?"click":"click";
}
functione(a){
returnc(a)?a.innerText||a.value:a.id||a.name||a.tagName;
}
functionf(a){
return"analytics"===a.substr(0,9)&&-1===["On","Event","If","Properties","EventType"].indexOf(a.substr(9));
}
functiong(a){
varb=a.slice(9);
return"undefined"!=typeofb&&null!==b&&b.length>0?b.substring(0,1).toLowerCase()+b.substring(1):b;
}
return{
restrict:"A",
scope:!0,
link:function(c,h,i){
varj=i.analyticsOn||d(h[0]);
c.$analytics={},a.forEach(i.$attr,function(a,b){
f(b)&&i.$observe(b,function(a){
c.$analytics[g(b)]=a;
});
}),a.element(h[0]).bind(j,function(d){
varf=i.analyticsEvent||e(h[0]);
c.$analytics.eventType=d.type,(!i.analyticsIf||c.$eval(i.analyticsIf))&&(i.analyticsProperties&&a.extend(c.$analytics,c.$eval(i.analyticsProperties)),b.eventTrack(f,c.$analytics));
});
}};
}])
333 5 b.waitForVendorCount=0,b.waitForVendorApi=function(a,c,d,e,f){
f||b.waitForVendorCount++,e||(e=d,d=void0),!Object.prototype.hasOwnProperty.call(window,a)||void0!==d&&void0===window[a][d]?setTimeout(function(){
b.waitForVendorApi(a,c,d,e,!0);
},c):(b.waitForVendorCount--,e(window[a]));
},a.module("angulartics",[]).provider("$analytics",function(){
varc={
pageTracking:{
autoTrackFirstPage:!0,
autoTrackVirtualPages:!0,
trackRelativePath:!1,
autoBasePath:!1,
basePath:""},
eventTracking:{},
bufferFlushDelay:1e3},d=["pageTrack","eventTrack","setUsername","setUserProperties","setUserPropertiesOnce","setSuperProperties","setSuperPropertiesOnce"],e={},f={},g=function(a){
returnfunction(){
b.waitForVendorCount&&(e[a]||(e[a]=[]),e[a].push(arguments));
};
},h=function(b,c){
returnf[b]||(f[b]=[]),f[b].push(c),function(){
varc=arguments;
a.forEach(f[b],function(a){
a.apply(this,c);
},this);
};
},i={
settings:c},j=function(a,b){
b?setTimeout(a,b):a();
},k={
$get:function(){
returni;
},
api:i,
settings:c,
virtualPageviews:function(a){
this.settings.pageTracking.autoTrackVirtualPages=a;
},
firstPageview:function(a){
this.settings.pageTracking.autoTrackFirstPage=a;
},
withBase:function(b){
this.settings.pageTracking.basePath=b?a.element("base").attr("href").slice(0,-1):"";
},
withAutoBase:function(a){
this.settings.pageTracking.autoBasePath=a;
}},l=function(b,d){
i[b]=h(b,d);
varf=c[b],g=f?f.bufferFlushDelay:null,k=null!==g?g:c.bufferFlushDelay;
a.forEach(e[b],function(a,b){
j(function(){
d.apply(this,a);
},b*k);
});
},m=function(a){
returna.replace(/^./,function(a){
returna.toUpperCase();
});
},n=function(a){
varb="register"+m(a);
k[b]=function(b){
l(a,b);
},i[a]=h(a,g(a));
};
returna.forEach(d,n),k;
}).run(["$rootScope","$location","$window","$analytics","$injector",function(a,b,c,d,e){
if(d.settings.pageTracking.autoTrackFirstPage){
varf=!0;
if(e.has("$route")){
varg=e.get("$route");
for(varhing.routes){
f=!1;
break;
}
}elseif(e.has("$state")){
vari=e.get("$state");
for(varjini.states){
f=!1;
break;
}
}else
f=!1;
if(f)
if(d.settings.pageTracking.autoBasePath&&(d.settings.pageTracking.basePath=c.location.pathname),d.settings.trackRelativePath){
vark=d.settings.pageTracking.basePath+b.url();
d.pageTrack(k);
}else
d.pageTrack(b.absUrl());
}
d.settings.pageTracking.autoTrackVirtualPages&&(d.settings.pageTracking.autoBasePath&&(d.settings.pageTracking.basePath=c.location.pathname+"#"),e.has("$route")&&a.$on("$routeChangeSuccess",function(a,c){
if(!c||!(c.$$route||c).redirectTo){
vare=d.settings.pageTracking.basePath+b.url();
d.pageTrack(e);
}
}),e.has("$state")&&a.$on("$stateChangeSuccess",function(){
vara=d.settings.pageTracking.basePath+b.url();
d.pageTrack(a);
}));
}]).directive("analyticsOn",["$analytics","$timeout",function(b){
functionc(a){
return["a:","button:","button:button","button:submit","input:button","input:submit"].indexOf(a.tagName.toLowerCase()+":"+(a.type||""))>=0;
}
functiond(a){
returnc(a)?"click":"click";
}
functione(a){
returnc(a)?a.innerText||a.value:a.id||a.name||a.tagName;
}
functionf(a){
return"analytics"===a.substr(0,9)&&-1===["On","Event","If","Properties","EventType"].indexOf(a.substr(9));
}
functiong(a){
varb=a.slice(9);
return"undefined"!=typeofb&&null!==b&&b.length>0?b.substring(0,1).toLowerCase()+b.substring(1):b;
}
return{
restrict:"A",
scope:!0,
link:function(c,h,i){
varj=i.analyticsOn||d(h[0]);
c.$analytics={},a.forEach(i.$attr,function(a,b){
f(b)&&i.$observe(b,function(a){
c.$analytics[g(b)]=a;
});
}),a.element(h[0]).bind(j,function(d){
varf=i.analyticsEvent||e(h[0]);
c.$analytics.eventtype=d.type,(!i.analyticsIf||c.$eval(i.analyticsIf))&&(i.analyticsProperties&&a.extend(c.$analytics,c.$eval(i.analyticsProperties)),b.eventTrack(f,c.$analytics));
});
}};
}]) b.waitForVendorCount=0,b.waitForVendorApi=function(a,c,d,e,f){
f||b.waitForVendorCount++,e||(e=d,d=void0),!Object.prototype.hasOwnProperty.call(window,a)||void0!==d&&void0===window[a][d]?setTimeout(function(){
b.waitForVendorApi(a,c,d,e,!0);
},c):(b.waitForVendorCount--,e(window[a]));
},a.module("angulartics",[]).provider("$analytics",function(){
varc={
pageTracking:{
autoTrackFirstPage:!0,
autoTrackVirtualPages:!0,
trackRelativePath:!1,
autoBasePath:!1,
basePath:""},
eventTracking:{},
bufferFlushDelay:1e3},d=["pageTrack","eventTrack","setUsername","setUserProperties","setUserPropertiesOnce","setSuperProperties","setSuperPropertiesOnce"],e={},f={},g=function(a){
returnfunction(){
b.waitForVendorCount&&(e[a]||(e[a]=[]),e[a].push(arguments));
};
},h=function(b,c){
returnf[b]||(f[b]=[]),f[b].push(c),function(){
varc=arguments;
a.forEach(f[b],function(a){
a.apply(this,c);
},this);
};
},i={
settings:c},j=function(a,b){
b?setTimeout(a,b):a();
},k={
$get:function(){
returni;
},
api:i,
settings:c,
virtualPageviews:function(a){
this.settings.pageTracking.autoTrackVirtualPages=a;
},
firstPageview:function(a){
this.settings.pageTracking.autoTrackFirstPage=a;
},
withBase:function(b){
this.settings.pageTracking.basePath=b?a.element("base").attr("href").slice(0,-1):"";
},
withAutoBase:function(a){
this.settings.pageTracking.autoBasePath=a;
}},l=function(b,d){
i[b]=h(b,d);
varf=c[b],g=f?f.bufferFlushDelay:null,k=null!==g?g:c.bufferFlushDelay;
a.forEach(e[b],function(a,b){
j(function(){
d.apply(this,a);
},b*k);
});
},m=function(a){
returna.replace(/^./,function(a){
returna.toUpperCase();
});
},n=function(a){
varb="register"+m(a);
k[b]=function(b){
l(a,b);
},i[a]=h(a,g(a));
};
returna.forEach(d,n),k;
}).run(["$rootScope","$location","$window","$analytics","$injector",function(a,b,c,d,e){
if(d.settings.pageTracking.autoTrackFirstPage){
varf=!0;
if(e.has("$route")){
varg=e.get("$route");
for(varhing.routes){
f=!1;
break;
}
}elseif(e.has("$state")){
vari=e.get("$state");
for(varjini.states){
f=!1;
break;
}
}else
f=!1;
if(f)
if(d.settings.pageTracking.autoBasePath&&(d.settings.pageTracking.basePath=c.location.pathname),d.settings.trackRelativePath){
vark=d.settings.pageTracking.basePath+b.url();
d.pageTrack(k);
}else
d.pageTrack(b.absUrl());
}
d.settings.pageTracking.autoTrackVirtualPages&&(d.settings.pageTracking.autoBasePath&&(d.settings.pageTracking.basePath=c.location.pathname+"#"),e.has("$route")&&a.$on("$routeChangeSuccess",function(a,c){
if(!c||!(c.$$route||c).redirectTo){
vare=d.settings.pageTracking.basePath+b.url();
d.pageTrack(e);
}
}),e.has("$state")&&a.$on("$stateChangeSuccess",function(){
vara=d.settings.pageTracking.basePath+b.url();
d.pageTrack(a);
}));
}]).directive("analyticsOn",["$analytics","$timeout",function(b){
functionc(a){
return["a:","button:","button:button","button:submit","input:button","input:submit"].indexOf(a.tagName.toLowerCase()+":"+(a.type||""))>=0;
}
functiond(a){
returnc(a)?"click":"click";
}
functione(a){
returnc(a)?a.innerText||a.value:a.id||a.name||a.tagName;
}
functionf(a){
return"analytics"===a.substr(0,9)&&-1===["On","Event","If","Properties","EventType"].indexOf(a.substr(9));
}
functiong(a){
varb=a.slice(9);
return"undefined"!=typeofb&&null!==b&&b.length>0?b.substring(0,1).toLowerCase()+b.substring(1):b;
}
return{
restrict:"A",
scope:!0,
link:function(c,h,i){
varj=i.analyticsOn||d(h[0]);
c.$analytics={},a.forEach(i.$attr,function(a,b){
f(b)&&i.$observe(b,function(a){
c.$analytics[g(b)]=a;
});
}),a.element(h[0]).bind(j,function(d){
varf=i.analyticsEvent||e(h[0]);
c.$analytics.eventType=d.type,(!i.analyticsIf||c.$eval(i.analyticsIf))&&(i.analyticsProperties&&a.extend(c.$analytics,c.$eval(i.analyticsProperties)),b.eventTrack(f,c.$analytics));
});
}};
}])
334 5 c.$analytics={},a.forEach(i.$attr,function(a,b){
f(b)&&i.$observe(b,function(a){
c.$analytics[g(b)]=a;
});
}),a.element(h[0]).bind(j,function(d){
varf=i.analyticsEvent||e(h[0]);
c.$analytics.eventtype=d.type,(!i.analyticsIf||c.$eval(i.analyticsIf))&&(i.analyticsProperties&&a.extend(c.$analytics,c.$eval(i.analyticsProperties)),b.eventTrack(f,c.$analytics));
}) c.$analytics={},a.forEach(i.$attr,function(a,b){
f(b)&&i.$observe(b,function(a){
c.$analytics[g(b)]=a;
});
}),a.element(h[0]).bind(j,function(d){
varf=i.analyticsEvent||e(h[0]);
c.$analytics.eventType=d.type,(!i.analyticsIf||c.$eval(i.analyticsIf))&&(i.analyticsProperties&&a.extend(c.$analytics,c.$eval(i.analyticsProperties)),b.eventTrack(f,c.$analytics));
})
335 5 c.$analytics.eventtype=d.type,(!i.analyticsIf||c.$eval(i.analyticsIf))&&(i.analyticsProperties&&a.extend(c.$analytics,c.$eval(i.analyticsProperties)),b.eventTrack(f,c.$analytics)) c.$analytics.eventType=d.type,(!i.analyticsIf||c.$eval(i.analyticsIf))&&(i.analyticsProperties&&a.extend(c.$analytics,c.$eval(i.analyticsProperties)),b.eventTrack(f,c.$analytics))
336 830 url.iO('#')&&(url.iO('#')<url.length-1)&&!$.rq("m") url.iO('#')&&(url.iO('#')<url.length-1)
337 596 canURL&&canURL!=url&&!url.iO('#') canURL&&canURL!=url&&!url.iO('#')&&!url.iO('?')
338 596 canURL!=url&&!url.iO('#') canURL!=url&&!url.iO('#')&&!url.iO('?')
339 13 slideshow==="object" typeofslideshow==="object"
340 371 "ProvisionedThroughputExceededonadditionof"+s3info.prefix+"topendingbatch"+thisBatchId+".Tryingagainin"+waitFor+"ms" "ProvisionedThroughputExceededonadditionof"+s3Info.prefix+"topendingbatch"+thisBatchId+".Tryingagainin"+waitFor+"ms"
341 371 "ProvisionedThroughputExceededonadditionof"+s3info.prefix+"topendingbatch"+thisBatchId+".Tryingagainin"+waitFor "ProvisionedThroughputExceededonadditionof"+s3Info.prefix+"topendingbatch"+thisBatchId+".Tryingagainin"+waitFor
342 371 "ProvisionedThroughputExceededonadditionof"+s3info.prefix+"topendingbatch"+thisBatchId+".Tryingagainin" "ProvisionedThroughputExceededonadditionof"+s3Info.prefix+"topendingbatch"+thisBatchId+".Tryingagainin"
343 371 "ProvisionedThroughputExceededonadditionof"+s3info.prefix+"topendingbatch"+thisBatchId "ProvisionedThroughputExceededonadditionof"+s3Info.prefix+"topendingbatch"+thisBatchId
344 371 "ProvisionedThroughputExceededonadditionof"+s3info.prefix+"topendingbatch" "ProvisionedThroughputExceededonadditionof"+s3Info.prefix+"topendingbatch"
345 371 "ProvisionedThroughputExceededonadditionof"+s3info.prefix "ProvisionedThroughputExceededonadditionof"+s3Info.prefix
346 515 prefix+"/*" prefix+"/"
347 600 "Currentbatchageof"+(common.now()-batchCreateDate)+"secondsbelowbatchtimeoutof" "Currentbatchageof"+(common.now()-batchCreateDate)+"secondsbelowbatchtimeout:"
348 89 "UnabletofindConfigurationwithS3Prefix"+prefix+"inRegion"+setRegion "UnabletofindConfigurationwithS3Prefix"+prefix+"inRegion"+_setRegion
349 301 context||this._hostContext context||this._workContext
350 215 Math.abs(difference)>24 Math.abs(difference)>(daysNumber+1)*24
351 16 value!=undefined&&other===undefined value!==undefined&&other===undefined
352 334 root.__coverage__||root[lodashStable.findKey(root,function(value,key){
return/^(?:\$\$cov_\d+\$\$)$/.test(key);
})] root.__coverage__||root[lodashStable.find(lodashStable.keys(root),function(key){
return/^(?:\$\$cov_\d+\$\$)$/.test(key);
})]
353 314 root._||(root._=(_=interopRequire(filePath),(_.runInContext?_.runInContext(root):_))) root._||(root._=interopRequire(filePath))
354 4882 Set&&(1/setToArray(newSet([-0]))[0])==INFINITY Set&&(1/setToArray(newSet([,-0]))[1])==INFINITY
355 4882 (1/setToArray(newSet([-0]))[0])==INFINITY (1/setToArray(newSet([,-0]))[1])==INFINITY
356 4882 1/setToArray(newSet([-0]))[0] 1/setToArray(newSet([,-0]))[1]
357 5251 (DataView&&getTag(newDataView(newArrayBuffer()))!=dataViewTag)||(Map&&getTag(newMap())!=mapTag)||(Promise&&getTag(Promise.resolve())!=promiseTag)||(Set&&getTag(newSet())!=setTag)||(WeakMap&&getTag(newWeakMap())!=weakMapTag) (DataView&&getTag(newDataView(newArrayBuffer(1)))!=dataViewTag)||(Map&&getTag(newMap())!=mapTag)||(Promise&&getTag(Promise.resolve())!=promiseTag)||(Set&&getTag(newSet())!=setTag)||(WeakMap&&getTag(newWeakMap())!=weakMapTag)
358 5251 DataView&&getTag(newDataView(newArrayBuffer()))!=dataViewTag DataView&&getTag(newDataView(newArrayBuffer(1)))!=dataViewTag
359 5251 getTag(newDataView(newArrayBuffer()))!=dataViewTag getTag(newDataView(newArrayBuffer(1)))!=dataViewTag
360 2349 !isNpm&&WeakMap&&_.support.funcNames !isNpm&&WeakMap&&WeakMap.name
361 2349 WeakMap&&_.support.funcNames WeakMap&&WeakMap.name
362 778 isNative(Object.preventExtensions=Object.preventExtensions)&&preventExtensions isNative(preventExtensions=Object.preventExtensions)&&preventExtensions
363 2523 isLength(srcValue)&&(isArray(srcValue)||isTypedArray(srcValue)) isLength(srcValue.length)&&(isArray(srcValue)||isTypedArray(srcValue))
364 35 null==n&&null==r&&(r=1),n|=0,null==r?(r=n,n=0):r|=0,n+Dr(Yr()*(r-n+1)) null==n&&null==r&&(r=1),n=+n||0,null==r?(r=n,n=0):r=+r||0,n+Dr(Yr()*(r-n+1))
365 35 null==n&&null==r&&(r=1),n|=0 null==n&&null==r&&(r=1),n=+n||0
366 35 null==n null==r
367 35 null==r null==n
368 21 e--&&(u=r[e],u=Ur.call(t,u)&&y(t[u],n[u],null,true)) e--&&(u=r[e],u=Ur.call(t,u)&&t[u]===n[u])
369 21 u=r[e],u=Ur.call(t,u)&&y(t[u],n[u],null,true) u=r[e],u=Ur.call(t,u)&&t[u]===n[u]
370 21 Ur.call(t,u)&&y(t[u],n[u],null,true) Ur.call(t,u)&&t[u]===n[u]
371 1321 createCache&&indexOf===baseIndexOf&&length>=LARGE_ARRAY_SIZE createCache&&values&&indexOf===baseIndexOf&&values.length>=LARGE_ARRAY_SIZE
372 11 e&k e&O
373 11 e&O e&k
374 11 e&O e&E
375 11 e&E e&O
376 11 e&E e&S
377 11 e&S e&E
378 11 ae&&o===t&&a>=N&&(o=r,e=ae(e)) ae&&e&&o===t&&e.length>=N&&(o=r,e=ae(e))
379 11 o===t&&a>=N&&(o=r,e=ae(e)) o===t&&e.length>=N&&(o=r,e=ae(e))
380 11 a>=N&&(o=r,e=ae(e)) e.length>=N&&(o=r,e=ae(e))
381 11 a>=N e.length>=N
382 1099 createCache&&indexOf===baseIndexOf&&length>=LARGE_ARRAY_SIZE createCache&&values&&indexOf===baseIndexOf&&values.length>=LARGE_ARRAY_SIZE
383 12 re&&o===t&&i>=N&&(o=r,e=re(e)) re&&e&&o===t&&e.length>=N&&(o=r,e=re(e))
384 12 o===t&&i>=N&&(o=r,e=re(e)) o===t&&e.length>=N&&(o=r,e=re(e))
385 12 i>=N&&(o=r,e=re(e)) e.length>=N&&(o=r,e=re(e))
386 12 i>=N e.length>=N
387 1335 createCache&&indexOf===baseIndexOf&&length>=LARGE_ARRAY_SIZE createCache&&values&&indexOf===baseIndexOf&&values.length>=LARGE_ARRAY_SIZE
388 23 u&&(e=n[++o]) u&&i&&(e=n[++o])
389 16 u&&(r=n[++o]) u&&i&&(r=n[++o])
390 31 !function(){
functionn(){
this.x=1;
}
vart={
0:1,
length:1},r=[];
n.prototype={
valueOf:1};
for(varuinnewn())
r.push(u);
for(uinarguments)
;
qe.argsClass=ve.call(arguments)==$,qe.argsObject=arguments.constructor==ae&&!(argumentsinstanceofne),qe.enumErrorProps=ke.call(pe,"message")||ke.call(pe,"name"),qe.enumPrototypes=ke.call(n,"prototype"),qe.funcDecomp=!ye.test(e.p)&&B.test(g),qe.funcNames=typeofre.name=="string",qe.nonEnumArgs=0!=u,qe.nonEnumShadows=!/valueOf/.test(r),qe.ownLast="x"!=r[0],qe.spliceObjects=(ce.splice.call(t,0,1),!t[0]),qe.unindexedChars="xx"!="x"[0]+ae("x")[0];
try{
qe.nodeClass=!(ve.call(document)==G&&!({
toString:0}+""));
}catch(o){
qe.nodeClass=!0;
}
}(1),v.templateSettings={
escape:/<%-([\s\S]+?)%>/g,
evaluate:/<%([\s\S]+?)%>/g,
interpolate:A,
variable:"",
imports:{
_:v}},Ae||(nt=function(){
functionn(){
}
returnfunction(t){
if(xt(t)){
n.prototype=t;
varr=newn();
n.prototype=null;
}
returnr||e.Object();
};
}()) !function(){
functionn(){
this.x=1;
}
vart={
0:1,
length:1},r=[];
n.prototype={
valueOf:1,
y:1};
for(varuinnewn())
r.push(u);
for(uinarguments)
;
qe.argsClass=ve.call(arguments)==$,qe.argsObject=arguments.constructor==ae&&!(argumentsinstanceofne),qe.enumErrorProps=ke.call(pe,"message")||ke.call(pe,"name"),qe.enumPrototypes=ke.call(n,"prototype"),qe.funcDecomp=!ye.test(e.p)&&B.test(g),qe.funcNames=typeofre.name=="string",qe.nonEnumArgs=0!=u,qe.nonEnumShadows=!/valueOf/.test(r),qe.ownLast="x"!=r[0],qe.spliceObjects=(ce.splice.call(t,0,1),!t[0]),qe.unindexedChars="xx"!="x"[0]+ae("x")[0];
try{
qe.nodeClass=!(ve.call(document)==G&&!({
toString:0}+""));
}catch(o){
qe.nodeClass=!0;
}
}(1),v.templateSettings={
escape:/<%-([\s\S]+?)%>/g,
evaluate:/<%([\s\S]+?)%>/g,
interpolate:A,
variable:"",
imports:{
_:v}},Ae||(nt=function(){
functionn(){
}
returnfunction(t){
if(xt(t)){
n.prototype=t;
varr=newn();
n.prototype=null;
}
returnr||e.Object();
};
}())
391 31 !function(){
functionn(){
this.x=1;
}
vart={
0:1,
length:1},r=[];
n.prototype={
valueOf:1};
for(varuinnewn())
r.push(u);
for(uinarguments)
;
qe.argsClass=ve.call(arguments)==$,qe.argsObject=arguments.constructor==ae&&!(argumentsinstanceofne),qe.enumErrorProps=ke.call(pe,"message")||ke.call(pe,"name"),qe.enumPrototypes=ke.call(n,"prototype"),qe.funcDecomp=!ye.test(e.p)&&B.test(g),qe.funcNames=typeofre.name=="string",qe.nonEnumArgs=0!=u,qe.nonEnumShadows=!/valueOf/.test(r),qe.ownLast="x"!=r[0],qe.spliceObjects=(ce.splice.call(t,0,1),!t[0]),qe.unindexedChars="xx"!="x"[0]+ae("x")[0];
try{
qe.nodeClass=!(ve.call(document)==G&&!({
toString:0}+""));
}catch(o){
qe.nodeClass=!0;
}
}(1),v.templateSettings={
escape:/<%-([\s\S]+?)%>/g,
evaluate:/<%([\s\S]+?)%>/g,
interpolate:A,
variable:"",
imports:{
_:v}} !function(){
functionn(){
this.x=1;
}
vart={
0:1,
length:1},r=[];
n.prototype={
valueOf:1,
y:1};
for(varuinnewn())
r.push(u);
for(uinarguments)
;
qe.argsClass=ve.call(arguments)==$,qe.argsObject=arguments.constructor==ae&&!(argumentsinstanceofne),qe.enumErrorProps=ke.call(pe,"message")||ke.call(pe,"name"),qe.enumPrototypes=ke.call(n,"prototype"),qe.funcDecomp=!ye.test(e.p)&&B.test(g),qe.funcNames=typeofre.name=="string",qe.nonEnumArgs=0!=u,qe.nonEnumShadows=!/valueOf/.test(r),qe.ownLast="x"!=r[0],qe.spliceObjects=(ce.splice.call(t,0,1),!t[0]),qe.unindexedChars="xx"!="x"[0]+ae("x")[0];
try{
qe.nodeClass=!(ve.call(document)==G&&!({
toString:0}+""));
}catch(o){
qe.nodeClass=!0;
}
}(1),v.templateSettings={
escape:/<%-([\s\S]+?)%>/g,
evaluate:/<%([\s\S]+?)%>/g,
interpolate:A,
variable:"",
imports:{
_:v}}
392 1522 stackA[length]==b stackB[length]==b
393 2987 arrayLikeClasses[className]||(noArgsClass&&isArguments(value)) arrayLikeClasses[className]||(noArgsClass&&isArguments(a))
394 2987 noArgsClass&&isArguments(value) noArgsClass&&isArguments(a)
395 14 kt[o]||St&&L(value) kt[o]||St&&L(e)
396 14 St&&L(value) St&&L(e)
397 29 t==r&&(t=e||0,e=0) t==r&&(t=e,e=0)
398 29 t=e||0,e=0 t=e,e=0
399 734 hasOwnProperty.call(b,key)&&!size-- hasOwnProperty.call(b,key)&&!(size--)
400 743 hasOwnProperty.call(b,key)&&!size-- hasOwnProperty.call(b,key)&&!(size--)
401 34 "ZZZZZZZZZZZZZZZZZZWeatherinfo"+x "Weatherinfo"+x
402 53 j<10000 j<100000
403 59 String(end-start)+"msin10,000tests" String(end-start)+"msin100,000tests"
404 57 i1-i0+1 j1-j0+1
405 10403 trackermap[name]==undefined trackerMap[name]==undefined
406 416 trackermap[name]==undefined trackerMap[name]==undefined
407 108 i!=json.length i!=json.length-1
408 162 (Date.now()-10000)/1000-availabilityStartTime (Date.now())/1000-availabilityStartTime
409 162 (Date.now()-10000)/1000 (Date.now())/1000
410 64 BASE_URL+"QualityLevels300000/Fragmentsvideo=90000000" BASE_URL+"QualityLevels300000/Fragmentsvideo=60000000"
411 83 BASE_URL+"QualityLevels750000/Fragmentsvideo=90000000" BASE_URL+"QualityLevels750000/Fragmentsvideo=60000000"
412 102 BASE_URL+"QualityLevels1100000/Fragmentsvideo=90000000" BASE_URL+"QualityLevels1100000/Fragmentsvideo=60000000"
413 121 BASE_URL+"QualityLevels1500000/Fragmentsvideo=90000000" BASE_URL+"QualityLevels1500000/Fragmentsvideo=60000000"
414 140 BASE_URL+"QualityLevels2100000/Fragmentsvideo=90000000" BASE_URL+"QualityLevels2100000/Fragmentsvideo=60000000"
415 159 BASE_URL+"QualityLevels3400000/Fragmentsvideo=90000000" BASE_URL+"QualityLevels3400000/Fragmentsvideo=60000000"
416 178 BASE_URL+"QualityLevels4000000/Fragmentsvideo=90000000" BASE_URL+"QualityLevels4000000/Fragmentsvideo=60000000"
417 197 BASE_URL+"QualityLevels5000000/Fragmentsvideo=90000000" BASE_URL+"QualityLevels5000000/Fragmentsvideo=60000000"
418 43 !url===""||url==null url===""||url==null
419 43 !url==="" url===""
420 11 75.0079999+9 75+9
421 13 75.0079999+9 75+9
422 39 state===state wantedState===state
423 45 numberOfHours%60 numberOfMinutes%60
424 131 isTimeInRange(range1,range2.end)||isTimeInRange(range2,range1.start) range1.start<range2.end&&range2.end<range1.end||isTimeInRange(range2,range1.start)
425 193 url,responseType,sentTime,receivedTime,size _url,responseType,sentTime,receivedTime,size
426 193 url,responseType,sentTime,receivedTime _url,responseType,sentTime,receivedTime
427 193 url,responseType,sentTime _url,responseType,sentTime
428 193 url,responseType _url,responseType
429 47 this.isVTT&&!isVTTSupported() this.isVTT&&isVTTSupported()
430 22 fromEvent,fromPromise,merge fromPromise,merge
431 13 arguments.length>1&&Object.prototype.toString.call(value)!=="[objectObject]" arguments.length>1&&(Object.prototype.toString.call(value)==="[objectString]"||value===null||value===undefined)
432 1078 this.natural({
max:255})+'.'+this.natural({
max:255})+'.'+this.natural({
max:255})+'.' this.natural({
min:1,
max:254})+'.'+this.natural({
max:255})+'.'+this.natural({
max:255})+'.'
433 1078 this.natural({
max:255})+'.'+this.natural({
max:255})+'.'+this.natural({
max:255})+'.' this.natural({
min:1,
max:254})+'.'+this.natural({
max:255})+'.'
434 1078 this.natural({
max:255})+'.'+this.natural({
max:255})+'.'+this.natural({
max:255})+'.' this.natural({
min:1,
max:254})+'.'
435 1078 this.natural({
max:255})+'.'+this.natural({
max:255})+'.'+this.natural({
max:255}) this.natural({
min:1,
max:254})+'.'+this.natural({
max:255})+'.'+this.natural({
max:255})
436 1078 this.natural({
max:255})+'.'+this.natural({
max:255})+'.'+this.natural({
max:255}) this.natural({
min:1,
max:254})+'.'+this.natural({
max:255})
437 1078 this.natural({
max:255})+'.'+this.natural({
max:255})+'.' this.natural({
min:1,
max:254})+'.'+this.natural({
max:255})+'.'+this.natural({
max:255})+'.'
438 1078 this.natural({
max:255})+'.'+this.natural({
max:255})+'.' this.natural({
min:1,
max:254})+'.'+this.natural({
max:255})+'.'
439 1078 this.natural({
max:255})+'.'+this.natural({
max:255})+'.' this.natural({
min:1,
max:254})+'.'
440 1078 this.natural({
max:255})+'.'+this.natural({
max:255}) this.natural({
min:1,
max:254})+'.'+this.natural({
max:255})+'.'+this.natural({
max:255})
441 1078 this.natural({
max:255})+'.'+this.natural({
max:255}) this.natural({
min:1,
max:254})+'.'+this.natural({
max:255})
442 1078 this.natural({
max:255})+'.' this.natural({
min:1,
max:254})+'.'+this.natural({
max:255})+'.'+this.natural({
max:255})+'.'
443 1078 this.natural({
max:255})+'.' this.natural({
min:1,
max:254})+'.'+this.natural({
max:255})+'.'
444 1078 this.natural({
max:255})+'.' this.natural({
min:1,
max:254})+'.'
445 1466 exp.year===(newDate().getFullYear()) exp.year===(newDate().getFullYear()).toString()
446 50 Ship<Effect,Commit,State,State>{
const:functionstate(){
;
any=yield{
type:'Command',
command:{
type:'GetState',
selector:}};
returnstate;
}} Ship<Effect,Commit,State,A>{
const:functionstate(){
;
any=yield{
type:'Command',
command:{
type:'GetState',
selector:}};
returnstate;
}}
447 50 State>{
const:functionstate(){
;
any=yield{
type:'Command',
command:{
type:'GetState',
selector:}};
returnstate;
}} A>{
const:functionstate(){
;
any=yield{
type:'Command',
command:{
type:'GetState',
selector:}};
returnstate;
}}
448 574 options.root.wrapOptions.width||options.root.width options.root.wrapOptions.width||options.root.width-options.root.wrapOptions.x+1
449 694 attr&FG_DEFAULT_COLOR attr[BPOS_MISC]&FG_DEFAULT_COLOR
450 206 attr[BPOS_A]===255&&attr[BPOS_BG_A]===255&&blendFn===ScreenBufferHD.blendFn.normal attr[BPOS_A]===255&&attr[BPOS_BG_A]===255&&opacity===1&&blendFn===ScreenBufferHD.blendFn.normal
451 982 (attr>>8)&255 (attr>>>8)&255
452 1051 (attr>>8)&255 (attr>>>8)&255
453 1081 (attr>>8)&255 (attr>>>8)&255
454 75 options.width||this.width options.width||this.width-1
455 560 g+232 g+231
456 196 document.getElementById("ScrapBookToolbox")&&!document.getElementById("ScrapBookToolbox").hidden document.getElementById("ScrapBookToolbox")&&!document.getElementById("ScrapBookToolbox").hidden&&document.getElementById("ScrapBookEditor")&&!document.getElementById("ScrapBookEditor").hidden
457 196 document.getElementById("ScrapBookToolbox")&&!document.getElementById("ScrapBookToolbox").hidden document.getElementById("ScrapBookToolbox")&&!document.getElementById("ScrapBookToolbox").hidden&&document.getElementById("ScrapBookEditor")&&!document.getElementById("ScrapBookEditor").hidden
458 490 that.option["internalize"]&&this.isInternalized(m2) that.option["internalize"]&&that.isInternalized(m2)
459 536 that.option["internalize"]&&this.isInternalized(m2) that.option["internalize"]&&that.isInternalized(m2)
460 70 Math.round(this.index/this.count*100)+"%" Math.round(this.index/this.count*100)+"%"
461 350 !mime||mime!="text/html" !mime||["text/html","application/xhtml+xml"].indexOf(mime)<0
462 38 i<=10 i<=9
463 775 indent+this.inspectCSSText(cssRule.cssText,aCSS.href) indent+this.inspectCSSText(cssRule.cssText,aCSS.href,"font")
464 263 sbCommonUtils.getBaseHref(sbDataSource.data.URI)+"data/"+id+"/"+encodeURI(this.CURRENT_TREEITEM[4]) sbCommonUtils.getBaseHref(sbDataSource.data.URI)+"data/"+id+"/"+encodeURIComponent(this.CURRENT_TREEITEM[4])
465 965 "?q="+this.query+"&re="+this.optionRE.toString()+"&cs="+this.optionCS.toString() "?q="+encodeURIComponent(this.query)+"&re="+this.optionRE.toString()+"&cs="+this.optionCS.toString()
466 965 "?q="+this.query+"&re="+this.optionRE.toString()+"&cs=" "?q="+encodeURIComponent(this.query)+"&re="+this.optionRE.toString()+"&cs="
467 965 "?q="+this.query+"&re="+this.optionRE.toString() "?q="+encodeURIComponent(this.query)+"&re="+this.optionRE.toString()
468 965 "?q="+this.query+"&re=" "?q="+encodeURIComponent(this.query)+"&re="
469 965 "?q="+this.query "?q="+encodeURIComponent(this.query)
470 241 "("+pattern+".*)" "("+sbCommonUtils.escapeRegExp(pattern)+".*)"
471 241 "("+pattern "("+sbCommonUtils.escapeRegExp(pattern)
472 417 this.resList[this.index].Value+"#"+aSubPath this.resList[this.index].ValueUTF8+"#"+aSubPath
473 417 this.resList[this.index].Value+"#" this.resList[this.index].ValueUTF8+"#"
474 132 !file||!file.isFile() !file||!file.exists()||!file.isFile()
475 1037 !dataU2N.exists()||dataXml.lastModifiedTime<dataU2N.lastModifiedTime !dataU2N.exists()||dataXml.lastModifiedTime<=dataU2N.lastModifiedTime
476 479 !sbCommonUtils._fxVer3_5&&(sbTreeDNDHandler.currentDataTransfer.mozTypesAt(0).item(0)=="application/x-moz-tabbrowser-tab"||sbTreeDNDHandler.currentDataTransfer.mozTypesAt(0).item(0)=="sb/tradeitem") sbCommonUtils._fxVer3_5&&(sbTreeDNDHandler.currentDataTransfer.mozTypesAt(0).item(0)=="application/x-moz-tabbrowser-tab"||sbTreeDNDHandler.currentDataTransfer.mozTypesAt(0).item(0)=="sb/tradeitem")
477 753 this.baseURL+this.nameList[this.index]+".html" this.baseURL+encodeURI(this.nameList[this.index])+".html"
478 753 this.baseURL+this.nameList[this.index] this.baseURL+encodeURI(this.nameList[this.index])
479 52 str.red.bold+'' str.red+''
480 66 str.orange+'' str.yellow+''
481 125 ref&&ref.includesOf(key) ref&&ref.includes(key)
482 27 process.env.PORT||8080 process.env.PORT||3000
483 29 process.env.TRAVIS_PULL_REQUEST_SLUG||process.env.TRAVIS_REPO_SLUG process.env.TRAVIS_PULL_REQUEST_SLUG||process.env.TRAVIS_REPO_SLUG||"donejs/donejs"
484 42 process.env.TRAVIS_PULL_REQUEST_SLUG||process.env.TRAVIS_REPO_SLUG process.env.TRAVIS_PULL_REQUEST_SLUG||process.env.TRAVIS_REPO_SLUG||"donejs/donejs"
485 29 process.env.TRAVIS_PULL_REQUEST_SLUG||process.env.TRAVIS_REPO_SLUG process.env.TRAVIS_PULL_REQUEST_SLUG||process.env.TRAVIS_REPO_SLUG||"donejs/donejs"
486 42 process.env.TRAVIS_PULL_REQUEST_SLUG||process.env.TRAVIS_REPO_SLUG process.env.TRAVIS_PULL_REQUEST_SLUG||process.env.TRAVIS_REPO_SLUG||"donejs/donejs"
487 51 this.props.grecaptcha&&this.state.widgetId===undefined this.props.grecaptcha&&this.props.grecaptcha.render&&this.state.widgetId===undefined
488 69 node.type+"mustbesuccededby1blankline" node.type+"mustbesucceededby1blankline"
489 124 "'"+node.callee.name+"':Thelastargumentmustnotbesuccededbyanywhitespaceorcomments(only')')." "'"+node.callee.name+"':Thelastargumentmustnotbesucceededbyanywhitespaceorcomments(only')')."
490 130 emitted.exit||node.start===node.end emitted.exit||(sourceCode.getLine(node)===sourceCode.getEndingLine(node))
491 164 config.sidebar||config.nav config.sidebar||config.nav||[]
492 310 this.props.series._collection._type===_pondjs.TimeEvent nextProps.series._collection._type===_pondjs.TimeEvent
493 349 dispose&7 this.dispose&7
494 23 HOST_URI&&!USES_CUSTOM_SCHEME&&/^(.*\.)?(expo\.io|exp\.host|exp\.direct|expo\.test)(:.*)?(\/.*)?$/.test(HOST_URI) HOST_URI&&/^(.*\.)?(expo\.io|exp\.host|exp\.direct|expo\.test)(:.*)?(\/.*)?$/.test(HOST_URI)
495 211 false,instanceStartDate=null false,instanceStartDate
496 1507 useKeys||type===ITERATE_VALUES useKeys||type===ITERATE_VALUES||step.done
497 1513 useKeys||type===ITERATE_VALUES useKeys||type===ITERATE_VALUES||step.done
498 10 n||e===Ve n||e===Ve||t.done
499 481 useKeys||type===ITERATE_VALUES useKeys||type===ITERATE_VALUES||step.done
500 310 type.types.reduce(t=>typeLength(info,t))+(type.types.length-1)*3 type.types.reduce((s,t)=>s+typeLength(info,t),0)+(type.types.length-1)*3
501 35 e=Math.max(0|e,0),0===r||2===r&&!e e=Math.max(e||0,0),0===r||2===r&&!e
502 726 value&&value.constructor===Object value&&(value.constructor===Object||value.constructor===undefined)
503 9 t&&t.constructor===Object t&&(t.constructor===Object||void0===t.constructor)
504 38 value&&value.constructor===Object value&&(value.constructor===Object||value.constructor===undefined)
505 21 0|t 0|e
506 21 0|e 0|t
507 21 r*n (t>>>16)*n
508 21 (t>>>16)*n r*n
509 21 Object.defineProperty({},"x",{}),!0 Object.defineProperty({},"@",{}),!0
510 23 Sr.createClass(qn,{
toString:function(){
returnthis.__toString("Map{","}");
},
get:function(t,e){
returnthis._root?this._root.get(0,void0,t,e):e;
},
set:function(t,e){
returnhe(this,t,e);
},
setIn:function(t,e){
returnthis.updateIn(t,function(){
returne;
});
},
remove:function(t){
returnhe(this,t,Mr);
},
removeIn:function(t){
returnthis.updateIn(t,function(){
returnMr;
});
},
update:function(t,e,r){
return1===arguments.length?t(this):this.updateIn([t],e,r);
},
updateIn:function(t,e,r){
r||(r=e,e=void0);
varn=ge(this,D(t)||D(Nr(t)),e,r);
returnn===Mr?void0:n;
},
clear:function(){
return0===this.size?this:this.__ownerID?(this.size=0,this._root=null,this.__hash=void0,this.__altered=!0,this):ae();
},
merge:function(){
returnde(this,void0,arguments);
},
mergeWith:function(t){
for(vare=[],r=1;arguments.length>r;r++)
e[r-1]=arguments[r];
returnde(this,t,e);
},
mergeIn:function(t){
for(vare=[],r=1;arguments.length>r;r++)
e[r-1]=arguments[r];
returnthis.updateIn(t,ae(),function(t){
returnt.merge.apply(t,e);
});
},
mergeDeep:function(){
returnde(this,ye(void0),arguments);
},
mergeDeepWith:function(t){
for(vare=[],r=1;arguments.length>r;r++)
e[r-1]=arguments[r];
returnde(this,ye(t),e);
},
mergeDeepIn:function(t){
for(vare=[],r=1;arguments.length>r;r++)
e[r-1]=arguments[r];
returnthis.updateIn(t,ae(),function(t){
returnt.mergeDeep.apply(t,e);
});
},
sort:function(t){
returnti(Le(this,t));
},
sortBy:function(t,e){
returnti(Le(this,e,t));
},
withMutations:function(t){
vare=this.asMutable();
returnt(e),e.wasAltered()?e.__ensureOwner(this.__ownerID):this;
},
asMutable:function(){
returnthis.__ownerID?this:this.__ensureOwner(newo());
},
asImmutable:function(){
returnthis.__ensureOwner();
},
wasAltered:function(){
returnthis.__altered;
},
__iterator:function(t,e){
returnnewLn(this,t,e);
},
__iterate:function(t,e){
varr=this,n=0;
returnthis._root&&this._root.iterate(function(e){
returnn++,t(e[1],e[0],r);
},e),n;
},
__ensureOwner:function(t){
returnt===this.__ownerID?this:t?oe(this.size,this._root,t,this.__hash):(this.__ownerID=t,this.__altered=!1,this);
}},{},gn),qn.isMap=ie Sr.createClass(qn,{
toString:function(){
returnthis.__toString("Map{","}");
},
get:function(t,e){
returnthis._root?this._root.get(0,void0,t,e):e;
},
set:function(t,e){
returnhe(this,t,e);
},
setIn:function(t,e){
returnthis.updateIn(t,Mr,function(){
returne;
});
},
remove:function(t){
returnhe(this,t,Mr);
},
removeIn:function(t){
returnthis.updateIn(t,function(){
returnMr;
});
},
update:function(t,e,r){
return1===arguments.length?t(this):this.updateIn([t],e,r);
},
updateIn:function(t,e,r){
r||(r=e,e=void0);
varn=ge(this,D(t)||D(Nr(t)),e,r);
returnn===Mr?void0:n;
},
clear:function(){
return0===this.size?this:this.__ownerID?(this.size=0,this._root=null,this.__hash=void0,this.__altered=!0,this):ae();
},
merge:function(){
returnde(this,void0,arguments);
},
mergeWith:function(t){
for(vare=[],r=1;arguments.length>r;r++)
e[r-1]=arguments[r];
returnde(this,t,e);
},
mergeIn:function(t){
for(vare=[],r=1;arguments.length>r;r++)
e[r-1]=arguments[r];
returnthis.updateIn(t,ae(),function(t){
returnt.merge.apply(t,e);
});
},
mergeDeep:function(){
returnde(this,ye(void0),arguments);
},
mergeDeepWith:function(t){
for(vare=[],r=1;arguments.length>r;r++)
e[r-1]=arguments[r];
returnde(this,ye(t),e);
},
mergeDeepIn:function(t){
for(vare=[],r=1;arguments.length>r;r++)
e[r-1]=arguments[r];
returnthis.updateIn(t,ae(),function(t){
returnt.mergeDeep.apply(t,e);
});
},
sort:function(t){
returnti(Le(this,t));
},
sortBy:function(t,e){
returnti(Le(this,e,t));
},
withMutations:function(t){
vare=this.asMutable();
returnt(e),e.wasAltered()?e.__ensureOwner(this.__ownerID):this;
},
asMutable:function(){
returnthis.__ownerID?this:this.__ensureOwner(newo());
},
asImmutable:function(){
returnthis.__ensureOwner();
},
wasAltered:function(){
returnthis.__altered;
},
__iterator:function(t,e){
returnnewLn(this,t,e);
},
__iterate:function(t,e){
varr=this,n=0;
returnthis._root&&this._root.iterate(function(e){
returnn++,t(e[1],e[0],r);
},e),n;
},
__ensureOwner:function(t){
returnt===this.__ownerID?this:t?oe(this.size,this._root,t,this.__hash):(this.__ownerID=t,this.__altered=!1,this);
}},{},gn),qn.isMap=ie
511 93 ensureSize(iter)+index ensureSize(iter)+(+index)
512 8 0!==t 0!==e
513 8 0!==e 0!==t
514 8 1/t 1/e
515 8 1/e 1/t
516 8 c(t)+e c(t)++e
517 73 ensureSize(iter)+index ensureSize(iter)+(+index)
518 29 void0===t null===t
519 29 ur.createClass(Pn,{
toString:function(){
returnthis.__toString("OrderedMap{","}");
},
get:function(t,e){
varr=this._map.get(t);
returnvoid0!==r?this._list.get(r)[1]:e;
},
clear:function(){
return0===this.size?this:this.__ownerID?(this.size=0,this._map.clear(),this._list.clear(),this):er();
},
set:function(t,e){
returnrr(this,t,e);
},
remove:function(t){
returnrr(this,t,cr);
},
wasAltered:function(){
returnthis._map.wasAltered()||this._list.wasAltered();
},
__iterate:function(t,e){
varr=this;
returnthis._list.__iterate(function(e){
returnt(e[1],e[0],r);
},e);
},
__iterator:function(t,e){
returnthis._list.fromEntrySeq().__iterator(t,e);
},
__ensureOwner:function(t){
if(t===this.__ownerID)
returnthis;
vare=this._map.__ensureOwner(t),r=this._list.__ensureOwner(t);
returnt?tr(e,r,t,this.__hash):(this.__ownerID=t,this._map=e,this._list=r,this);
}},{
of:function(){
returnthis(arguments);
}},on),Pn.isOrderedMap=$e ur.createClass(Pn,{
toString:function(){
returnthis.__toString("OrderedMap{","}");
},
get:function(t,e){
varr=this._map.get(t);
returnvoid0!==r?this._list.get(r)[1]:e;
},
clear:function(){
return0===this.size?this:this.__ownerID?(this.size=0,this._map.clear(),this._list.clear(),this):er();
},
set:function(t,e){
returnrr(this,t,e);
},
remove:function(t){
returnrr(this,t,cr);
},
wasAltered:function(){
returnthis._map.wasAltered()||this._list.wasAltered();
},
__iterate:function(t,e){
varr=this;
returnthis._list.__iterate(function(e){
returne&&t(e[1],e[0],r);
},e);
},
__iterator:function(t,e){
returnthis._list.fromEntrySeq().__iterator(t,e);
},
__ensureOwner:function(t){
if(t===this.__ownerID)
returnthis;
vare=this._map.__ensureOwner(t),r=this._list.__ensureOwner(t);
returnt?tr(e,r,t,this.__hash):(this.__ownerID=t,this._map=e,this._list=r,this);
}},{
of:function(){
returnthis(arguments);
}},on),Pn.isOrderedMap=$e
520 17 e.fromEntries=function(){
returnt;
},e e.fromEntrySeq=function(){
returnt;
},e
521 18 r!==this&&(r.get=function(r,n){
returne.get(r-t,n);
}),r r!==this&&(r.get=function(r,n){
returne.get(r+t,n);
}),r
522 18 r!==this&&(r.get=function(r,n){
returne.get(r-t,n);
}) r!==this&&(r.get=function(r,n){
returne.get(r+t,n);
})
523 18 r!==this&&(r.get=function(r,n){
returne.get(r-t,n);
}),r r!==this&&(r.get=function(r,n){
returne.get(r+t,n);
}),r
524 18 r!==this&&(r.get=function(r,n){
returne.get(r-t,n);
}) r!==this&&(r.get=function(r,n){
returne.get(r+t,n);
})
525 21 s-e r-e
526 21 r-e s-e
527 21 t.rawIndex++,{
value:[e,r],
done:!0} t.rawIndex++,{
value:[e,r],
done:!1}
528 24 $traceurRuntime.createClass(we,{
toString:function(){
return0===this.length?"Range[]":"Range["+this._start+"..."+this._end+(this._step>1?"by"+this._step:"")+"]";
},
has:function(t){
returnC(t>=0,"Indexoutofbounds"),this.length>t;
},
get:function(t,e){
returnC(t>=0,"Indexoutofbounds"),1/0===this.length||this.length>t?this._start+t*this._step:e;
},
contains:function(t){
vare=(t-this._start)/this._step;
returne>=0&&this.length>e&&e===Math.floor(e);
},
slice:function(t,e,r){
returnr?$traceurRuntime.superCall(this,Ie.prototype,"slice",[t,e,r]):(t=0>t?Math.max(0,this.length+t):Math.min(this.length,t),e=null==e?this.length:e>0?Math.min(this.length,e):Math.max(0,this.length+e),newIe(this.get(t),e===this.length?this._end:this.get(e),this._step));
},
__deepEquals:function(t){
returnthis._start===t._start&&this._end===t._end&&this._step===t._step;
},
indexOf:function(t){
vare=t-this._start;
if(e%this._step===0){
varr=e/this._step;
if(r>=0&&this.length>r)
returnr;
}
return-1;
},
lastIndexOf:function(t){
returnthis.indexOf(t);
},
take:function(t){
returnthis.slice(0,t);
},
skip:function(t,e){
returne?$traceurRuntime.superCall(this,Ie.prototype,"skip",[t]):this.slice(t);
},
__iterate:function(t,e,r){
for(varn=e^r,i=this.length-1,s=this._step,u=e?this._start+i*s:this._start,o=0;i>=o&&t(u,n?i-o:o,this)!==!1;o++)
u+=e?-s:s;
returnn?this.length:o;
}},{},B),we.prototype.__toJS=we.prototype.toArray,we.prototype.first=se.prototype.first,we.prototype.last=se.prototype.last $traceurRuntime.createClass(we,{
toString:function(){
return0===this.length?"Range[]":"Range["+this._start+"..."+this._end+(this._step>1?"by"+this._step:"")+"]";
},
has:function(t){
returnC(t>=0,"Indexoutofbounds"),this.length>t;
},
get:function(t,e){
returnC(t>=0,"Indexoutofbounds"),1/0===this.length||this.length>t?this._start+t*this._step:e;
},
contains:function(t){
vare=(t-this._start)/this._step;
returne>=0&&this.length>e&&e===Math.floor(e);
},
slice:function(t,e,r){
returnr?$traceurRuntime.superCall(this,Ie.prototype,"slice",[t,e,r]):(t=0>t?Math.max(0,this.length+t):Math.min(this.length,t),e=null==e?this.length:e>0?Math.min(this.length,e):Math.max(0,this.length+e),newIe(this.get(t,this._end),this.get(e,this._end),this._step));
},
__deepEquals:function(t){
returnthis._start===t._start&&this._end===t._end&&this._step===t._step;
},
indexOf:function(t){
vare=t-this._start;
if(e%this._step===0){
varr=e/this._step;
if(r>=0&&this.length>r)
returnr;
}
return-1;
},
lastIndexOf:function(t){
returnthis.indexOf(t);
},
take:function(t){
returnthis.slice(0,t);
},
skip:function(t,e){
returne?$traceurRuntime.superCall(this,Ie.prototype,"skip",[t]):this.slice(t);
},
__iterate:function(t,e,r){
for(varn=e^r,i=this.length-1,s=this._step,u=e?this._start+i*s:this._start,o=0;i>=o&&t(u,n?i-o:o,this)!==!1;o++)
u+=e?-s:s;
returnn?this.length:o;
}},{},B),we.prototype.__toJS=we.prototype.toArray,we.prototype.first=se.prototype.first,we.prototype.last=se.prototype.last
529 24 $traceurRuntime.createClass(we,{
toString:function(){
return0===this.length?"Range[]":"Range["+this._start+"..."+this._end+(this._step>1?"by"+this._step:"")+"]";
},
has:function(t){
returnC(t>=0,"Indexoutofbounds"),this.length>t;
},
get:function(t,e){
returnC(t>=0,"Indexoutofbounds"),1/0===this.length||this.length>t?this._start+t*this._step:e;
},
contains:function(t){
vare=(t-this._start)/this._step;
returne>=0&&this.length>e&&e===Math.floor(e);
},
slice:function(t,e,r){
returnr?$traceurRuntime.superCall(this,Ie.prototype,"slice",[t,e,r]):(t=0>t?Math.max(0,this.length+t):Math.min(this.length,t),e=null==e?this.length:e>0?Math.min(this.length,e):Math.max(0,this.length+e),newIe(this.get(t),e===this.length?this._end:this.get(e),this._step));
},
__deepEquals:function(t){
returnthis._start===t._start&&this._end===t._end&&this._step===t._step;
},
indexOf:function(t){
vare=t-this._start;
if(e%this._step===0){
varr=e/this._step;
if(r>=0&&this.length>r)
returnr;
}
return-1;
},
lastIndexOf:function(t){
returnthis.indexOf(t);
},
take:function(t){
returnthis.slice(0,t);
},
skip:function(t,e){
returne?$traceurRuntime.superCall(this,Ie.prototype,"skip",[t]):this.slice(t);
},
__iterate:function(t,e,r){
for(varn=e^r,i=this.length-1,s=this._step,u=e?this._start+i*s:this._start,o=0;i>=o&&t(u,n?i-o:o,this)!==!1;o++)
u+=e?-s:s;
returnn?this.length:o;
}},{},B),we.prototype.__toJS=we.prototype.toArray,we.prototype.first=se.prototype.first $traceurRuntime.createClass(we,{
toString:function(){
return0===this.length?"Range[]":"Range["+this._start+"..."+this._end+(this._step>1?"by"+this._step:"")+"]";
},
has:function(t){
returnC(t>=0,"Indexoutofbounds"),this.length>t;
},
get:function(t,e){
returnC(t>=0,"Indexoutofbounds"),1/0===this.length||this.length>t?this._start+t*this._step:e;
},
contains:function(t){
vare=(t-this._start)/this._step;
returne>=0&&this.length>e&&e===Math.floor(e);
},
slice:function(t,e,r){
returnr?$traceurRuntime.superCall(this,Ie.prototype,"slice",[t,e,r]):(t=0>t?Math.max(0,this.length+t):Math.min(this.length,t),e=null==e?this.length:e>0?Math.min(this.length,e):Math.max(0,this.length+e),newIe(this.get(t,this._end),this.get(e,this._end),this._step));
},
__deepEquals:function(t){
returnthis._start===t._start&&this._end===t._end&&this._step===t._step;
},
indexOf:function(t){
vare=t-this._start;
if(e%this._step===0){
varr=e/this._step;
if(r>=0&&this.length>r)
returnr;
}
return-1;
},
lastIndexOf:function(t){
returnthis.indexOf(t);
},
take:function(t){
returnthis.slice(0,t);
},
skip:function(t,e){
returne?$traceurRuntime.superCall(this,Ie.prototype,"skip",[t]):this.slice(t);
},
__iterate:function(t,e,r){
for(varn=e^r,i=this.length-1,s=this._step,u=e?this._start+i*s:this._start,o=0;i>=o&&t(u,n?i-o:o,this)!==!1;o++)
u+=e?-s:s;
returnn?this.length:o;
}},{},B),we.prototype.__toJS=we.prototype.toArray,we.prototype.first=se.prototype.first
530 24 $traceurRuntime.createClass(we,{
toString:function(){
return0===this.length?"Range[]":"Range["+this._start+"..."+this._end+(this._step>1?"by"+this._step:"")+"]";
},
has:function(t){
returnC(t>=0,"Indexoutofbounds"),this.length>t;
},
get:function(t,e){
returnC(t>=0,"Indexoutofbounds"),1/0===this.length||this.length>t?this._start+t*this._step:e;
},
contains:function(t){
vare=(t-this._start)/this._step;
returne>=0&&this.length>e&&e===Math.floor(e);
},
slice:function(t,e,r){
returnr?$traceurRuntime.superCall(this,Ie.prototype,"slice",[t,e,r]):(t=0>t?Math.max(0,this.length+t):Math.min(this.length,t),e=null==e?this.length:e>0?Math.min(this.length,e):Math.max(0,this.length+e),newIe(this.get(t),e===this.length?this._end:this.get(e),this._step));
},
__deepEquals:function(t){
returnthis._start===t._start&&this._end===t._end&&this._step===t._step;
},
indexOf:function(t){
vare=t-this._start;
if(e%this._step===0){
varr=e/this._step;
if(r>=0&&this.length>r)
returnr;
}
return-1;
},
lastIndexOf:function(t){
returnthis.indexOf(t);
},
take:function(t){
returnthis.slice(0,t);
},
skip:function(t,e){
returne?$traceurRuntime.superCall(this,Ie.prototype,"skip",[t]):this.slice(t);
},
__iterate:function(t,e,r){
for(varn=e^r,i=this.length-1,s=this._step,u=e?this._start+i*s:this._start,o=0;i>=o&&t(u,n?i-o:o,this)!==!1;o++)
u+=e?-s:s;
returnn?this.length:o;
}},{},B),we.prototype.__toJS=we.prototype.toArray $traceurRuntime.createClass(we,{
toString:function(){
return0===this.length?"Range[]":"Range["+this._start+"..."+this._end+(this._step>1?"by"+this._step:"")+"]";
},
has:function(t){
returnC(t>=0,"Indexoutofbounds"),this.length>t;
},
get:function(t,e){
returnC(t>=0,"Indexoutofbounds"),1/0===this.length||this.length>t?this._start+t*this._step:e;
},
contains:function(t){
vare=(t-this._start)/this._step;
returne>=0&&this.length>e&&e===Math.floor(e);
},
slice:function(t,e,r){
returnr?$traceurRuntime.superCall(this,Ie.prototype,"slice",[t,e,r]):(t=0>t?Math.max(0,this.length+t):Math.min(this.length,t),e=null==e?this.length:e>0?Math.min(this.length,e):Math.max(0,this.length+e),newIe(this.get(t,this._end),this.get(e,this._end),this._step));
},
__deepEquals:function(t){
returnthis._start===t._start&&this._end===t._end&&this._step===t._step;
},
indexOf:function(t){
vare=t-this._start;
if(e%this._step===0){
varr=e/this._step;
if(r>=0&&this.length>r)
returnr;
}
return-1;
},
lastIndexOf:function(t){
returnthis.indexOf(t);
},
take:function(t){
returnthis.slice(0,t);
},
skip:function(t,e){
returne?$traceurRuntime.superCall(this,Ie.prototype,"skip",[t]):this.slice(t);
},
__iterate:function(t,e,r){
for(varn=e^r,i=this.length-1,s=this._step,u=e?this._start+i*s:this._start,o=0;i>=o&&t(u,n?i-o:o,this)!==!1;o++)
u+=e?-s:s;
returnn?this.length:o;
}},{},B),we.prototype.__toJS=we.prototype.toArray
531 24 t=0>t?Math.max(0,this.length+t):Math.min(this.length,t),e=null==e?this.length:e>0?Math.min(this.length,e):Math.max(0,this.length+e),newIe(this.get(t),e===this.length?this._end:this.get(e),this._step) t=0>t?Math.max(0,this.length+t):Math.min(this.length,t),e=null==e?this.length:e>0?Math.min(this.length,e):Math.max(0,this.length+e),newIe(this.get(t,this._end),this.get(e,this._end),this._step)
532 318 Math.round(100*fileProg.numPiecesPresent/fileProg.numPieces)+'%' Math.floor(100*fileProg.numPiecesPresent/fileProg.numPieces)+'%'
533 737 total%3600/60 total/60
534 133 l2Distance<4000&&rms<100 l2Distance<5000&&rms<100
535 133 l2Distance<4000 l2Distance<5000
536 257 torrentSummary.progress&&torrentSummary.progress.files torrentSummary.progress&&torrentSummary.progress.files&&torrentSummary.progress.files[index]
537 257 torrentSummary.progress&&torrentSummary.progress.files torrentSummary.progress&&torrentSummary.progress.files&&torrentSummary.progress.files[index]
538 514 !torrentSummary||!torrent.files !torrentSummary||!torrent.ready
539 302 intersectBox&&area(intersectBox)>0.5*Math.min(area(sourceBox),area(targetBox)) intersectBox&&area(intersectBox)>0.5*Math.min(area(sourceBox),area(targetBox),1e4)
540 302 area(intersectBox)>0.5*Math.min(area(sourceBox),area(targetBox)) area(intersectBox)>0.5*Math.min(area(sourceBox),area(targetBox),1e4)
541 302 0.5*Math.min(area(sourceBox),area(targetBox)) 0.5*Math.min(area(sourceBox),area(targetBox),1e4)
542 138 !keymap.direction[keyCode]&&!orgEvt.shiftKey&&!orgEvt.metaKey&&orgEvt.ctrlKey !keymap.direction[keyCode]&&!orgEvt.shiftKey&&!orgEvt.metaKey&&!orgEvt.ctrlKey
543 138 !orgEvt.shiftKey&&!orgEvt.metaKey&&orgEvt.ctrlKey !orgEvt.shiftKey&&!orgEvt.metaKey&&!orgEvt.ctrlKey
544 138 !orgEvt.metaKey&&orgEvt.ctrlKey !orgEvt.metaKey&&!orgEvt.ctrlKey
545 77 policy||EXAPND_POLICY.KEEP_STATE policy||EXPAND_POLICY.KEEP_STATE
546 87 policy||EXAPND_POLICY.KEEP_STATE policy||EXPAND_POLICY.KEEP_STATE
547 32 options.maxRedirects||5 this.options.maxRedirects||5
548 32 this.options.maxRedirects||5 options.maxRedirects||5
549 33 ((k1>>>16)*c2)&0xffff k1&0xffff
550 33 (k1>>>16)*c2 (k1&0xffff)*c2
551 37 ((h1>>>16)*5)&0xffff h1&0xffff
552 37 (h1>>>16)*5 (h1&0xffff)*5
553 49 (k1<<16)|(k1>>>26) (k1<<16)|(k1>>>16)
554 49 k1>>>26 k1>>>16
555 37 (h1b&0xffff)+0x52dce729 (h1b&0xffff)+0xe729
556 37 (((h1b>>>16)+0x52dce729)&0xffff)<<16 (((h1b>>>16)+0x52dc)&0xffff)<<16
557 37 ((h1b>>>16)+0x52dce729)&0xffff ((h1b>>>16)+0x52dc)&0xffff
558 37 (h1b>>>16)+0x52dce729 (h1b>>>16)+0x52dc
559 40 (c1b&0xffff)+0x7b7d159c (c1b&0xffff)+0x159c
560 58 h1b&0xffff ((h1b>>>16)+0x52dc)&0xffff
561 64 h1&0xffff ((h1>>>16)*0x85eb)&0xffff
562 1107 "InavlidnumberofargumentspassedtodrawImage:"+arguments.length "InvalidnumberofargumentspassedtodrawImage:"+arguments.length
563 1107 "InavlidnumberofargumentspassedtodrawImage:"+arguments.length "InvalidnumberofargumentspassedtodrawImage:"+arguments.length
564 2225 localStorage.getItem(VIEWER_KEY)||DEFAULT_VIEWER window.localStorage&&localStorage.getItem(VIEWER_KEY)||DEFAULT_VIEWER
565 77 string,getRootDir string,+getRootDir
566 33 relativeGestureDistance<-0.5||(relativeGestureDistance<0&&vx<=0.5) relativeGestureDistance<-0.5||(relativeGestureDistance<0&&vx<=-0.5)
567 33 relativeGestureDistance<0&&vx<=0.5 relativeGestureDistance<0&&vx<=-0.5
568 33 vx<=0.5 vx<=-0.5
569 33 relativeGestureDistance<-0.5||(relativeGestureDistance<0&&vx<=0.5) relativeGestureDistance<-0.5||(relativeGestureDistance<0&&vx<=-0.5)
570 33 relativeGestureDistance<0&&vx<=0.5 relativeGestureDistance<0&&vx<=-0.5
571 33 vx<=0.5 vx<=-0.5
572 99 this.options.services.indexOf(serviceName)>0 this.options.services.indexOf(serviceName)>-1
573 10 typeofshariff.options.twitterVia!==null shariff.options.twitterVia!==null
574 175 exportOptions.allowFileResource&&exportOptions.callback&&exportOptions.callback.indexOf('{')<0 exportOptions.allowFileResources&&exportOptions.callback&&exportOptions.callback.indexOf('{')<0
575 255 exportOptions.infile||exportOptions.options||exportOptions.data exportOptions.instr||exportOptions.options||exportOptions.data
576 124 newImg.width/element.height()<=minZoom newImg.height/element.height()<=minZoom
577 124 newImg.width/element.height() newImg.height/element.height()
578 124 newImg.width/element.height()<=minZoom newImg.height/element.height()<=minZoom
579 124 newImg.width/element.height() newImg.height/element.height()
580 124 newImg.width/element.height()<=minZoom newImg.height/element.height()<=minZoom
581 124 newImg.width/element.height() newImg.height/element.height()
582 631 self.nzWidth<self.options.zoomWindowWidth self.nzWidth<self.options.zoomWindowHeight/self.heightRatio
583 628 self.options.zoomWindowWidth<self.options.zoomWindowWidth self.nzWidth<self.options.zoomWindowWidth
584 178 self.nzHeight<self.options.zoomWindowWidth/self.widthRatio self.nzHeight<self.options.zoomWindowHeight/self.heightRatio
585 1422 self.nzHeight<self.options.zoomWindowWidth/self.widthRatio self.nzHeight<self.options.zoomWindowHeight/self.heightRatio
586 38 (this.muteUnfurlPromptsUntil>moment.unix())||this.muteUnfurlPromptsIndefinitely (this.muteUnfurlPromptsUntil>moment().unix())||this.muteUnfurlPromptsIndefinitely
587 38 this.muteUnfurlPromptsUntil>moment.unix() this.muteUnfurlPromptsUntil>moment().unix()
588 38 this.muteUnfurlPromptsUntil||this.muteUnfurlPromptsIndefinitely (this.muteUnfurlPromptsUntil>moment.unix())||this.muteUnfurlPromptsIndefinitely
589 15 defaults.promptAgainForEachNewVersion||true defaults.promptForNewVersion||true
590 22 defaults.windows8URL||null defaults.windowsURL||null
591 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.statusbar",[]).factory("$cordovaStatusbar",[function(){
return{
overlaysWebView:function(){
returnStatusBar.overlaysWebView(!0);
},
style:function(n){
switch(n){
case0:
returnStatusBar.styleDefault();
case1:
returnStatusBar.styleLightContent();
case2:
returnStatusBar.styleBlackTranslucent();
case3:
returnStatusBar.styleBlackOpaque();
default:
returnStatusBar.styleDefault();
}
},
styleColor:function(n){
returnStatusBar.backgroundColorByName(n);
},
styleHex:function(n){
returnStatusBar.backgroundColorByHexString(n);
},
hide:function(){
returnStatusBar.hide();
},
show:function(){
returnStatusBar.show();
},
isVisible:function(){
returnStatusBar.isVisible();
}};
}]),angular.module("ngCordova.plugins.toast",[]).factory("$cordovaToast",["$q",function(n){
return{
showShortTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
show:function(e,r,o){
vart=n.defer();
returnwindow.plugins.toast.show(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.vibration",[]).factory("$cordovaVibration",[function(){
return{
vibrate:function(n){
returnnavigator.notification.vibrate(n);
},
vibrateWithPattern:function(n,e){
returnnavigator.notification.vibrateWithPattern(n,e);
},
cancelVibration:function(){
returnnavigator.notification.cancelVibration();
}};
}]),angular.module("ngCordova.plugins.zip",[]).factory("$cordovaZip",["$q","$window",function(n,e){
return{
unzip:function(r,o){
vart=n.defer();
returne.zip.unzip(r,o,function(n){
0===n?t.resolve():t.reject();
},function(n){
t.notify(n);
}),t.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.statusbar",[]).factory("$cordovaStatusbar",[function(){
return{
overlaysWebView:function(){
returnStatusBar.overlaysWebView(!0);
},
style:function(n){
switch(n){
case0:
returnStatusBar.styleDefault();
case1:
returnStatusBar.styleLightContent();
case2:
returnStatusBar.styleBlackTranslucent();
case3:
returnStatusBar.styleBlackOpaque();
default:
returnStatusBar.styleDefault();
}
},
styleColor:function(n){
returnStatusBar.backgroundColorByName(n);
},
styleHex:function(n){
returnStatusBar.backgroundColorByHexString(n);
},
hide:function(){
returnStatusBar.hide();
},
show:function(){
returnStatusBar.show();
},
isVisible:function(){
returnStatusBar.isVisible();
}};
}]),angular.module("ngCordova.plugins.toast",[]).factory("$cordovaToast",["$q",function(n){
return{
showShortTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
show:function(e,r,o){
vart=n.defer();
returnwindow.plugins.toast.show(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.vibration",[]).factory("$cordovaVibration",[function(){
return{
vibrate:function(n){
returnnavigator.notification.vibrate(n);
},
vibrateWithPattern:function(n,e){
returnnavigator.notification.vibrateWithPattern(n,e);
},
cancelVibration:function(){
returnnavigator.notification.cancelVibration();
}};
}]),angular.module("ngCordova.plugins.zip",[]).factory("$cordovaZip",["$q","$window",function(n,e){
return{
unzip:function(r,o){
vart=n.defer();
returne.zip.unzip(r,o,function(n){
0===n?t.resolve():t.reject();
},function(n){
t.notify(n);
}),t.promise;
}};
}])
592 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.statusbar",[]).factory("$cordovaStatusbar",[function(){
return{
overlaysWebView:function(){
returnStatusBar.overlaysWebView(!0);
},
style:function(n){
switch(n){
case0:
returnStatusBar.styleDefault();
case1:
returnStatusBar.styleLightContent();
case2:
returnStatusBar.styleBlackTranslucent();
case3:
returnStatusBar.styleBlackOpaque();
default:
returnStatusBar.styleDefault();
}
},
styleColor:function(n){
returnStatusBar.backgroundColorByName(n);
},
styleHex:function(n){
returnStatusBar.backgroundColorByHexString(n);
},
hide:function(){
returnStatusBar.hide();
},
show:function(){
returnStatusBar.show();
},
isVisible:function(){
returnStatusBar.isVisible();
}};
}]),angular.module("ngCordova.plugins.toast",[]).factory("$cordovaToast",["$q",function(n){
return{
showShortTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
show:function(e,r,o){
vart=n.defer();
returnwindow.plugins.toast.show(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.vibration",[]).factory("$cordovaVibration",[function(){
return{
vibrate:function(n){
returnnavigator.notification.vibrate(n);
},
vibrateWithPattern:function(n,e){
returnnavigator.notification.vibrateWithPattern(n,e);
},
cancelVibration:function(){
returnnavigator.notification.cancelVibration();
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.statusbar",[]).factory("$cordovaStatusbar",[function(){
return{
overlaysWebView:function(){
returnStatusBar.overlaysWebView(!0);
},
style:function(n){
switch(n){
case0:
returnStatusBar.styleDefault();
case1:
returnStatusBar.styleLightContent();
case2:
returnStatusBar.styleBlackTranslucent();
case3:
returnStatusBar.styleBlackOpaque();
default:
returnStatusBar.styleDefault();
}
},
styleColor:function(n){
returnStatusBar.backgroundColorByName(n);
},
styleHex:function(n){
returnStatusBar.backgroundColorByHexString(n);
},
hide:function(){
returnStatusBar.hide();
},
show:function(){
returnStatusBar.show();
},
isVisible:function(){
returnStatusBar.isVisible();
}};
}]),angular.module("ngCordova.plugins.toast",[]).factory("$cordovaToast",["$q",function(n){
return{
showShortTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
show:function(e,r,o){
vart=n.defer();
returnwindow.plugins.toast.show(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.vibration",[]).factory("$cordovaVibration",[function(){
return{
vibrate:function(n){
returnnavigator.notification.vibrate(n);
},
vibrateWithPattern:function(n,e){
returnnavigator.notification.vibrateWithPattern(n,e);
},
cancelVibration:function(){
returnnavigator.notification.cancelVibration();
}};
}])
593 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.statusbar",[]).factory("$cordovaStatusbar",[function(){
return{
overlaysWebView:function(){
returnStatusBar.overlaysWebView(!0);
},
style:function(n){
switch(n){
case0:
returnStatusBar.styleDefault();
case1:
returnStatusBar.styleLightContent();
case2:
returnStatusBar.styleBlackTranslucent();
case3:
returnStatusBar.styleBlackOpaque();
default:
returnStatusBar.styleDefault();
}
},
styleColor:function(n){
returnStatusBar.backgroundColorByName(n);
},
styleHex:function(n){
returnStatusBar.backgroundColorByHexString(n);
},
hide:function(){
returnStatusBar.hide();
},
show:function(){
returnStatusBar.show();
},
isVisible:function(){
returnStatusBar.isVisible();
}};
}]),angular.module("ngCordova.plugins.toast",[]).factory("$cordovaToast",["$q",function(n){
return{
showShortTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
show:function(e,r,o){
vart=n.defer();
returnwindow.plugins.toast.show(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.statusbar",[]).factory("$cordovaStatusbar",[function(){
return{
overlaysWebView:function(){
returnStatusBar.overlaysWebView(!0);
},
style:function(n){
switch(n){
case0:
returnStatusBar.styleDefault();
case1:
returnStatusBar.styleLightContent();
case2:
returnStatusBar.styleBlackTranslucent();
case3:
returnStatusBar.styleBlackOpaque();
default:
returnStatusBar.styleDefault();
}
},
styleColor:function(n){
returnStatusBar.backgroundColorByName(n);
},
styleHex:function(n){
returnStatusBar.backgroundColorByHexString(n);
},
hide:function(){
returnStatusBar.hide();
},
show:function(){
returnStatusBar.show();
},
isVisible:function(){
returnStatusBar.isVisible();
}};
}]),angular.module("ngCordova.plugins.toast",[]).factory("$cordovaToast",["$q",function(n){
return{
showShortTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
show:function(e,r,o){
vart=n.defer();
returnwindow.plugins.toast.show(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}])
594 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.statusbar",[]).factory("$cordovaStatusbar",[function(){
return{
overlaysWebView:function(){
returnStatusBar.overlaysWebView(!0);
},
style:function(n){
switch(n){
case0:
returnStatusBar.styleDefault();
case1:
returnStatusBar.styleLightContent();
case2:
returnStatusBar.styleBlackTranslucent();
case3:
returnStatusBar.styleBlackOpaque();
default:
returnStatusBar.styleDefault();
}
},
styleColor:function(n){
returnStatusBar.backgroundColorByName(n);
},
styleHex:function(n){
returnStatusBar.backgroundColorByHexString(n);
},
hide:function(){
returnStatusBar.hide();
},
show:function(){
returnStatusBar.show();
},
isVisible:function(){
returnStatusBar.isVisible();
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.statusbar",[]).factory("$cordovaStatusbar",[function(){
return{
overlaysWebView:function(){
returnStatusBar.overlaysWebView(!0);
},
style:function(n){
switch(n){
case0:
returnStatusBar.styleDefault();
case1:
returnStatusBar.styleLightContent();
case2:
returnStatusBar.styleBlackTranslucent();
case3:
returnStatusBar.styleBlackOpaque();
default:
returnStatusBar.styleDefault();
}
},
styleColor:function(n){
returnStatusBar.backgroundColorByName(n);
},
styleHex:function(n){
returnStatusBar.backgroundColorByHexString(n);
},
hide:function(){
returnStatusBar.hide();
},
show:function(){
returnStatusBar.show();
},
isVisible:function(){
returnStatusBar.isVisible();
}};
}])
595 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}])
596 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}])
597 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}])
598 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}])
599 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}])
600 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}])
601 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}])
602 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}])
603 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}])
604 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}])
605 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}])
606 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}])
607 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"])
608 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}])
609 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}])
610 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}])
611 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}])
612 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}])
613 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}])
614 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}])
615 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}])
616 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}])
617 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}])
618 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}])
619 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}])
620 0 navigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise navigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise
621 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.statusbar",[]).factory("$cordovaStatusbar",[function(){
return{
overlaysWebView:function(){
returnStatusBar.overlaysWebView(!0);
},
style:function(n){
switch(n){
case0:
returnStatusBar.styleDefault();
case1:
returnStatusBar.styleLightContent();
case2:
returnStatusBar.styleBlackTranslucent();
case3:
returnStatusBar.styleBlackOpaque();
default:
returnStatusBar.styleDefault();
}
},
styleColor:function(n){
returnStatusBar.backgroundColorByName(n);
},
styleHex:function(n){
returnStatusBar.backgroundColorByHexString(n);
},
hide:function(){
returnStatusBar.hide();
},
show:function(){
returnStatusBar.show();
},
isVisible:function(){
returnStatusBar.isVisible();
}};
}]),angular.module("ngCordova.plugins.toast",[]).factory("$cordovaToast",["$q",function(n){
return{
showShortTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
show:function(e,r,o){
vart=n.defer();
returnwindow.plugins.toast.show(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.vibration",[]).factory("$cordovaVibration",[function(){
return{
vibrate:function(n){
returnnavigator.notification.vibrate(n);
},
vibrateWithPattern:function(n,e){
returnnavigator.notification.vibrateWithPattern(n,e);
},
cancelVibration:function(){
returnnavigator.notification.cancelVibration();
}};
}]),angular.module("ngCordova.plugins.zip",[]).factory("$cordovaZip",["$q","$window",function(n,e){
return{
unzip:function(r,o){
vart=n.defer();
returne.zip.unzip(r,o,function(n){
0===n?t.resolve():t.reject();
},function(n){
t.notify(n);
}),t.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.statusbar",[]).factory("$cordovaStatusbar",[function(){
return{
overlaysWebView:function(){
returnStatusBar.overlaysWebView(!0);
},
style:function(n){
switch(n){
case0:
returnStatusBar.styleDefault();
case1:
returnStatusBar.styleLightContent();
case2:
returnStatusBar.styleBlackTranslucent();
case3:
returnStatusBar.styleBlackOpaque();
default:
returnStatusBar.styleDefault();
}
},
styleColor:function(n){
returnStatusBar.backgroundColorByName(n);
},
styleHex:function(n){
returnStatusBar.backgroundColorByHexString(n);
},
hide:function(){
returnStatusBar.hide();
},
show:function(){
returnStatusBar.show();
},
isVisible:function(){
returnStatusBar.isVisible();
}};
}]),angular.module("ngCordova.plugins.toast",[]).factory("$cordovaToast",["$q",function(n){
return{
showShortTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
show:function(e,r,o){
vart=n.defer();
returnwindow.plugins.toast.show(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.vibration",[]).factory("$cordovaVibration",[function(){
return{
vibrate:function(n){
returnnavigator.notification.vibrate(n);
},
vibrateWithPattern:function(n,e){
returnnavigator.notification.vibrateWithPattern(n,e);
},
cancelVibration:function(){
returnnavigator.notification.cancelVibration();
}};
}]),angular.module("ngCordova.plugins.zip",[]).factory("$cordovaZip",["$q","$window",function(n,e){
return{
unzip:function(r,o){
vart=n.defer();
returne.zip.unzip(r,o,function(n){
0===n?t.resolve():t.reject();
},function(n){
t.notify(n);
}),t.promise;
}};
}])
622 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.statusbar",[]).factory("$cordovaStatusbar",[function(){
return{
overlaysWebView:function(){
returnStatusBar.overlaysWebView(!0);
},
style:function(n){
switch(n){
case0:
returnStatusBar.styleDefault();
case1:
returnStatusBar.styleLightContent();
case2:
returnStatusBar.styleBlackTranslucent();
case3:
returnStatusBar.styleBlackOpaque();
default:
returnStatusBar.styleDefault();
}
},
styleColor:function(n){
returnStatusBar.backgroundColorByName(n);
},
styleHex:function(n){
returnStatusBar.backgroundColorByHexString(n);
},
hide:function(){
returnStatusBar.hide();
},
show:function(){
returnStatusBar.show();
},
isVisible:function(){
returnStatusBar.isVisible();
}};
}]),angular.module("ngCordova.plugins.toast",[]).factory("$cordovaToast",["$q",function(n){
return{
showShortTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
show:function(e,r,o){
vart=n.defer();
returnwindow.plugins.toast.show(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.vibration",[]).factory("$cordovaVibration",[function(){
return{
vibrate:function(n){
returnnavigator.notification.vibrate(n);
},
vibrateWithPattern:function(n,e){
returnnavigator.notification.vibrateWithPattern(n,e);
},
cancelVibration:function(){
returnnavigator.notification.cancelVibration();
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.statusbar",[]).factory("$cordovaStatusbar",[function(){
return{
overlaysWebView:function(){
returnStatusBar.overlaysWebView(!0);
},
style:function(n){
switch(n){
case0:
returnStatusBar.styleDefault();
case1:
returnStatusBar.styleLightContent();
case2:
returnStatusBar.styleBlackTranslucent();
case3:
returnStatusBar.styleBlackOpaque();
default:
returnStatusBar.styleDefault();
}
},
styleColor:function(n){
returnStatusBar.backgroundColorByName(n);
},
styleHex:function(n){
returnStatusBar.backgroundColorByHexString(n);
},
hide:function(){
returnStatusBar.hide();
},
show:function(){
returnStatusBar.show();
},
isVisible:function(){
returnStatusBar.isVisible();
}};
}]),angular.module("ngCordova.plugins.toast",[]).factory("$cordovaToast",["$q",function(n){
return{
showShortTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
show:function(e,r,o){
vart=n.defer();
returnwindow.plugins.toast.show(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.vibration",[]).factory("$cordovaVibration",[function(){
return{
vibrate:function(n){
returnnavigator.notification.vibrate(n);
},
vibrateWithPattern:function(n,e){
returnnavigator.notification.vibrateWithPattern(n,e);
},
cancelVibration:function(){
returnnavigator.notification.cancelVibration();
}};
}])
623 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.statusbar",[]).factory("$cordovaStatusbar",[function(){
return{
overlaysWebView:function(){
returnStatusBar.overlaysWebView(!0);
},
style:function(n){
switch(n){
case0:
returnStatusBar.styleDefault();
case1:
returnStatusBar.styleLightContent();
case2:
returnStatusBar.styleBlackTranslucent();
case3:
returnStatusBar.styleBlackOpaque();
default:
returnStatusBar.styleDefault();
}
},
styleColor:function(n){
returnStatusBar.backgroundColorByName(n);
},
styleHex:function(n){
returnStatusBar.backgroundColorByHexString(n);
},
hide:function(){
returnStatusBar.hide();
},
show:function(){
returnStatusBar.show();
},
isVisible:function(){
returnStatusBar.isVisible();
}};
}]),angular.module("ngCordova.plugins.toast",[]).factory("$cordovaToast",["$q",function(n){
return{
showShortTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
show:function(e,r,o){
vart=n.defer();
returnwindow.plugins.toast.show(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.statusbar",[]).factory("$cordovaStatusbar",[function(){
return{
overlaysWebView:function(){
returnStatusBar.overlaysWebView(!0);
},
style:function(n){
switch(n){
case0:
returnStatusBar.styleDefault();
case1:
returnStatusBar.styleLightContent();
case2:
returnStatusBar.styleBlackTranslucent();
case3:
returnStatusBar.styleBlackOpaque();
default:
returnStatusBar.styleDefault();
}
},
styleColor:function(n){
returnStatusBar.backgroundColorByName(n);
},
styleHex:function(n){
returnStatusBar.backgroundColorByHexString(n);
},
hide:function(){
returnStatusBar.hide();
},
show:function(){
returnStatusBar.show();
},
isVisible:function(){
returnStatusBar.isVisible();
}};
}]),angular.module("ngCordova.plugins.toast",[]).factory("$cordovaToast",["$q",function(n){
return{
showShortTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showShortBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showShortBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongTop:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongTop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongCenter:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongCenter(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
showLongBottom:function(e){
varr=n.defer();
returnwindow.plugins.toast.showLongBottom(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
show:function(e,r,o){
vart=n.defer();
returnwindow.plugins.toast.show(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}])
624 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.statusbar",[]).factory("$cordovaStatusbar",[function(){
return{
overlaysWebView:function(){
returnStatusBar.overlaysWebView(!0);
},
style:function(n){
switch(n){
case0:
returnStatusBar.styleDefault();
case1:
returnStatusBar.styleLightContent();
case2:
returnStatusBar.styleBlackTranslucent();
case3:
returnStatusBar.styleBlackOpaque();
default:
returnStatusBar.styleDefault();
}
},
styleColor:function(n){
returnStatusBar.backgroundColorByName(n);
},
styleHex:function(n){
returnStatusBar.backgroundColorByHexString(n);
},
hide:function(){
returnStatusBar.hide();
},
show:function(){
returnStatusBar.show();
},
isVisible:function(){
returnStatusBar.isVisible();
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.statusbar",[]).factory("$cordovaStatusbar",[function(){
return{
overlaysWebView:function(){
returnStatusBar.overlaysWebView(!0);
},
style:function(n){
switch(n){
case0:
returnStatusBar.styleDefault();
case1:
returnStatusBar.styleLightContent();
case2:
returnStatusBar.styleBlackTranslucent();
case3:
returnStatusBar.styleBlackOpaque();
default:
returnStatusBar.styleDefault();
}
},
styleColor:function(n){
returnStatusBar.backgroundColorByName(n);
},
styleHex:function(n){
returnStatusBar.backgroundColorByHexString(n);
},
hide:function(){
returnStatusBar.hide();
},
show:function(){
returnStatusBar.show();
},
isVisible:function(){
returnStatusBar.isVisible();
}};
}])
625 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]),angular.module("ngCordova.plugins.sqlite",[]).factory("$cordovaSQLite",["$q",function(n){
return{
openDB:function(n,e){
return"undefined"==typeofe&&(e=0),window.sqlitePlugin.openDatabase({
name:n,
bgType:e});
},
execute:function(e,r,o){
vart=n.defer();
returne.transaction(function(n){
n.executeSql(r,o,function(n,e){
t.resolve(e);
},function(n,e){
t.reject(e);
});
}),t.promise;
},
nestedExecute:function(e,r,o,t,i){
vara=n.defer();
returne.transaction(function(n){
n.executeSql(r,t,function(n,e){
a.resolve(e),n.executeSql(o,i,function(n,e){
a.resolve(e);
});
});
},function(n,e){
a.reject(e);
}),a.promise;
},
deleteDB:function(e){
varr=n.defer();
returnwindow.sqlitePlugin.deleteDatabase(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}])
626 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]),angular.module("ngCordova.plugins.splashscreen",[]).factory("$cordovaSplashscreen",[function(){
return{
hide:function(){
returnnavigator.splashscreen.hide();
},
show:function(){
returnnavigator.splashscreen.show();
}};
}])
627 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]),angular.module("ngCordova.plugins.spinnerDialog",[]).factory("$cordovaSpinnerDialog",[function(){
return{
show:function(n,e){
returnwindow.plugins.spinnerDialog.show(n,e);
},
hide:function(){
returnwindow.plugins.spinnerDialog.hide();
}};
}])
628 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]),angular.module("ngCordova.plugins.socialSharing",[]).factory("$cordovaSocialSharing",["$q",function(n){
return{
share:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.socialsharing.share(e,r,o,t,function(){
i.resolve(!0);
},function(){
i.reject(!1);
}),i.promise;
},
shareViaTwitter:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaTwitter(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaWhatsApp:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaWhatsApp(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaFacebook:function(e,r,o){
vart=n.defer();
returnwindow.plugins.socialsharing.shareViaFacebook(e,r,o,function(){
t.resolve(!0);
},function(){
t.reject(!1);
}),t.promise;
},
shareViaSMS:function(e,r){
varo=n.defer();
returnwindow.plugins.socialsharing.shareViaSMS(e,r,function(){
o.resolve(!0);
},function(){
o.reject(!1);
}),o.promise;
},
shareViaEmail:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.socialsharing.shareViaEmail(e,r,o,t,i,a,function(){
u.resolve(!0);
},function(){
u.reject(!1);
}),u.promise;
},
canShareViaEmail:function(){
vare=n.defer();
returnwindow.plugins.socialsharing.canShareViaEmail(function(){
e.resolve(!0);
},function(){
e.reject(!1);
}),e.promise;
},
canShareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.canShareVia(e,r,o,t,i,function(n){
a.resolve(n);
},function(n){
a.reject(n);
}),a.promise;
},
shareVia:function(e,r,o,t,i){
vara=n.defer();
returnwindow.plugins.socialsharing.shareVia(e,r,o,t,i,function(){
a.resolve(!0);
},function(){
a.reject(!1);
}),a.promise;
}};
}])
629 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.sms",[]).factory("$cordovaSms",["$q",function(n){
return{
send:function(e,r,o){
vart=n.defer();
returnsms.send(e,r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
}};
}])
630 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]),angular.module("ngCordova.plugins.push",[]).factory("$cordovaPush",["$q",function(n){
return{
register:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.register(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
unregister:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.unregister(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
setBadgeNumber:function(e){
varr=n.defer();
returnwindow.plugins.pushNotification.setApplicationIconBadgeNumber(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}])
631 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]),angular.module("ngCordova.plugins.progressIndicator",[]).factory("$cordovaProgressIndicator",["$q",function(){
return{
showSimple:function(n){
vare=n||!1;
returnProgressIndicator.showSimple(e);
},
showSimpleWithLabel:function(n,e){
varr=n||!1,o=e||"Loading...";
returnProgressIndicator.showSimpleWithLabel(r,o);
},
showSimpleWithLabelDetail:function(n,e,r){
varo=n||!1,t=e||"Loading...",i=r||"Pleasewait";
returnProgressIndicator.showSimpleWithLabelDetail(o,t,i);
},
showDeterminate:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showDeterminate(r,o);
},
showDeterminateWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showDeterminateWithLabel(o,t,i);
},
showAnnular:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showAnnular(r,o);
},
showAnnularWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showAnnularWithLabel(o,t,i);
},
showBar:function(n,e){
varr=n||!1,o=e||5e4;
returnProgressIndicator.showBar(r,o);
},
showBarWithLabel:function(n,e,r){
varo=n||!1,t=e||5e4,i=r||"Loading...";
returnProgressIndicator.showBarWithLabel(o,t,i);
},
showSuccess:function(n){
vare=n||!1;
returnProgressIndicator.showSuccess(e);
},
showText:function(n,e,r){
varo=n||!1,t=e||"Warning",i=r||"center";
returnProgressIndicator.showText(o,t,i);
},
hide:function(){
returnProgressIndicator.hide();
}};
}])
632 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.printer",[]).factory("$cordovaPrinter",["$q",function(n){
return{
isAvailable:function(){
vare=n.defer();
returnwindow.plugin.printer.isServiceAvailable(function(n){
e.resolve(n);
}),e.promise;
},
print:function(n){
window.plugin.printer.print(n);
}};
}])
633 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]),angular.module("ngCordova.plugins.prefs",[]).factory("$cordovaPreferences",["$window","$q",function(n,e){
return{
set:function(r,o){
vart=e.defer();
returnn.applicationPreferences.set(r,o,function(n){
t.resolve(n);
},function(n){
t.reject(n);
}),t.promise;
},
get:function(r){
varo=e.defer();
returnn.applicationPreferences.get(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}])
634 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]),angular.module("ngCordova.plugins.pinDialog",[]).factory("$cordovaPinDialog",[function(){
return{
prompt:function(){
returnwindow.plugins.pinDialog.prompt.apply(navigator.notification,arguments);
}};
}])
635 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.network",[]).factory("$cordovaNetwork",[function(){
return{
getNetwork:function(){
returnnavigator.connection.type;
},
isOnline:function(){
varn=navigator.connection.type;
returnn!==Connection.UNKNOWN&&n!==Connection.NONE;
},
isOffline:function(){
varn=navigator.connection.type;
returnn===Connection.UNKNOWN||n===Connection.NONE;
}};
}])
636 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]),angular.module("ngCordova.plugins.nativeAudio",[]).factory("$cordovaNativeAudio",["$q",function(n){
return{
preloadSimple:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.preloadSimple(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
preloadComplex:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.NativeAudio.preloadComplex(e,r,o,t,function(n){
i.resolve(n);
},function(n){
i.reject(n);
}),i.promise;
},
play:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.play(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
stop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.stop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
loop:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.loop(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
unload:function(e){
varr=n.defer();
returnwindow.plugins.NativeAudio.unload(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
setVolumeForComplexAsset:function(e,r){
varo=n.defer();
returnwindow.plugins.NativeAudio.setVolumeForComplexAsset(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}])
637 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]),angular.module("ngCordova.plugins",["ngCordova.plugins.deviceMotion","ngCordova.plugins.camera","ngCordova.plugins.geolocation","ngCordova.plugins.deviceOrientation","ngCordova.plugins.dialogs","ngCordova.plugins.vibration","ngCordova.plugins.network","ngCordova.plugins.device","ngCordova.plugins.barcodeScanner","ngCordova.plugins.splashscreen","ngCordova.plugins.keyboard","ngCordova.plugins.contacts","ngCordova.plugins.statusbar","ngCordova.plugins.file","ngCordova.plugins.socialSharing","ngCordova.plugins.globalization","ngCordova.plugins.sqlite","ngCordova.plugins.ga","ngCordova.plugins.push","ngCordova.plugins.spinnerDialog","ngCordova.plugins.sms","ngCordova.plugins.pinDialog","ngCordova.plugins.localNotification","ngCordova.plugins.toast","ngCordova.plugins.flashlight","ngCordova.plugins.capture","ngCordova.plugins.appAvailability","ngCordova.plugins.prefs","ngCordova.plugins.printer","ngCordova.plugins.bluetoothSerial","ngCordova.plugins.backgroundGeolocation","ngCordova.plugins.facebookConnect","ngCordova.plugins.adMob","ngCordova.plugins.googleMap","ngCordova.plugins.clipboard","ngCordova.plugins.nativeAudio","ngCordova.plugins.media","ngCordova.plugins.battery-status","ngCordova.plugins.keychain","ngCordova.plugins.progressIndicator","ngCordova.plugins.datePicker"])
638 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]),angular.module("ngCordova.plugins.media",[]).factory("$cordovaMedia",["$q",function(n){
return{
newMedia:function(e){
varr=n.defer(),o=null,t=newMedia(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},function(n){
o=n;
});
return{
media:t,
mediaStatus:o,
promise:r.promise};
},
getCurrentPosition:function(e){
varr=n.defer();
returne.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
getDuration:function(n){
returnn.getDuration();
},
play:function(n){
returnn.play();
},
pause:function(n){
returnn.pause();
},
release:function(n){
returnn.release();
},
seekTo:function(n,e){
returnn.seekTo(e);
},
setVolume:function(n,e){
returnn.setVolume(e);
},
startRecord:function(n){
returnn.startRecord();
},
stopRecord:function(n){
returnn.stopRecord();
},
stop:function(n){
returnn.stop();
}};
}])
639 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]),angular.module("ngCordova.plugins.localNotification",[]).factory("$cordovaLocalNotification",["$q",function(n){
return{
add:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.add(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancel:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.cancel(e,function(n){
o.resolve(n);
},r),o.promise;
},
cancelAll:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.cancelAll(function(n){
r.resolve(n);
},e),r.promise;
},
isScheduled:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isScheduled(e,function(n){
o.resolve(n);
},r),o.promise;
},
getScheduledIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getScheduledIds(function(n){
r.resolve(n);
},e),r.promise;
},
isTriggered:function(e,r){
varo=n.defer();
returnwindow.plugin.notification.local.isTriggered(e,function(n){
o.resolve(n);
},r),o.promise;
},
getTriggeredIds:function(e){
varr=n.defer();
returnwindow.plugin.notification.local.getTriggeredIds(function(n){
r.resolve(n);
},e),r.promise;
},
getDefaults:function(){
returnwindow.plugin.notification.local.getDefaults();
},
setDefaults:function(n){
window.plugin.notification.local.setDefaults(n);
},
onadd:function(){
returnwindow.plugin.notification.local.onadd;
},
ontrigger:function(){
returnwindow.plugin.notification.local.ontrigger;
},
onclick:function(){
returnwindow.plugin.notification.local.onclick;
},
oncancel:function(){
returnwindow.plugin.notification.local.oncancel;
}};
}])
640 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]),angular.module("ngCordova.plugins.keychain",[]).factory("$cordovaKeychain",["$q",function(n){
vare=newKeychain();
return{
getForKey:function(r,o){
vart=n.defer();
returne.getForKey(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},r,o),t.promise;
},
setForKey:function(r,o,t){
vari=n.defer();
returne.setForKey(function(){
i.resolve();
},function(n){
i.reject(n);
},r,o,t),i.promise;
},
removeForKey:function(r,o){
vart=n.defer();
returne.removeForKey(function(){
t.resolve();
},function(n){
t.reject(n);
},key,o),t.promise;
}};
}])
641 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]),angular.module("ngCordova.plugins.keyboard",[]).factory("$cordovaKeyboard",[function(){
return{
hideAccessoryBar:function(n){
returncordova.plugins.Keyboard.hideKeyboardAccessoryBar(n);
},
close:function(){
returncordova.plugins.Keyboard.close();
},
disableScroll:function(n){
returncordova.plugins.Keyboard.disableScroll(n);
},
isVisible:function(){
returncordova.plugins.Keyboard.isVisible;
}};
}])
642 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.googleMap",[]).factory("$cordovaGoogleMap",["$q",function(n){
vare=null;
return{
getMap:function(r){
varo=n.defer();
if(window.plugin.google.maps){
vart=document.getElementById("map_canvas");
e=window.plugin.google.maps.Map.getMap(r),e.setDiv(t),o.resolve(e);
}else
o.reject(null);
returno.promise;
},
isMapLoaded:function(){
return!!e;
},
addMarker:function(r){
varo=n.defer();
returne.addMarker(r,function(n){
o.resolve(n);
}),o.promise;
},
getMapTypeIds:function(){
returnwindow.plugin.google.maps.mapTypeId;
},
setVisible:function(r){
varo=n.defer();
returne.setVisible(r),o.promise;
},
cleanup:function(){
e=null;
}};
}])
643 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.globalization",[]).factory("$cordovaGlobalization",["$q",function(n){
return{
getPreferredLanguage:function(){
vare=n.defer();
returnnavigator.globalization.getPreferredLanguage(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLocaleName:function(){
vare=n.defer();
returnnavigator.globalization.getLocaleName(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getFirstDayOfWeek:function(){
vare=n.defer();
returnnavigator.globalization.getFirstDayOfWeek(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
dateToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.dateToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToDate:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToDate(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getDatePattern:function(e){
varr=n.defer();
returnnavigator.globalization.getDatePattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getDateNames:function(e){
varr=n.defer();
returnnavigator.globalization.getDateNames(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
isDayLightSavingsTime:function(e){
varr=n.defer();
returnnavigator.globalization.isDayLightSavingsTime(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
numberToString:function(e,r){
varo=n.defer();
returnnavigator.globalization.numberToString(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
stringToNumber:function(e,r){
varo=n.defer();
returnnavigator.globalization.stringToNumber(e,function(n){
o.resolve(n);
},function(n){
o.reject(n);
},r),o.promise;
},
getNumberPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getNumberPattern(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
getCurrencyPattern:function(e){
varr=n.defer();
returnnavigator.globalization.getCurrencyPattern(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}])
644 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.geolocation",[]).factory("$cordovaGeolocation",["$q",function(n){
return{
getCurrentPosition:function(e){
varr=n.defer();
returnnavigator.geolocation.getCurrentPosition(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
},
watchPosition:function(e){
varr=n.defer(),o=navigator.geolocation.watchPosition(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.geolocation.clearWatch(n);
}};
}])
645 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.ga",[]).factory("$cordovaGA",["$q",function(n){
return{
init:function(e,r){
varo=n.defer();
returnr=r>=0?r:10,window.plugins.gaPlugin.init(function(n){
o.resolve(n);
},function(n){
o.reject(n);
},e,r),o.promise;
},
trackEvent:function(e,r,o,t,i,a){
varu=n.defer();
returnwindow.plugins.gaPlugin.trackEvent(function(n){
u.resolve(n);
},function(n){
u.reject(n);
},o,t,i,a),u.promise;
},
trackPage:function(e,r,o){
vart=n.defer();
returnwindow.plugins.gaPlugin.trackPage(function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
},
setVariable:function(e,r,o,t){
vari=n.defer();
returnwindow.plugins.gaPlugin.setVariable(function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
exit:function(){
vare=n.defer();
returnwindow.plugins.gaPlugin.exit(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}])
646 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]),angular.module("ngCordova.plugins.flashlight",[]).factory("$cordovaFlashlight",["$q",function(n){
return{
available:function(){
vare=n.defer();
returnwindow.plugins.flashlight.available(function(n){
e.resolve(n);
}),e.promise;
},
switchOn:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOn(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
switchOff:function(){
vare=n.defer();
returnwindow.plugins.flashlight.switchOff(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}])
647 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.file",[]).factory("$cordovaFile",["$q",function(n){
functione(){
vare=n.defer();
returnwindow.requestFileSystem(LocalFileSystem.PERSISTENT,1048576,function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}
return{
checkDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createDir:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
listDir:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getDirectory(r,{
create:!1},function(n){
vare=n.createReader();
e.readEntries(function(n){
o.resolve(n);
},function(){
o.reject("DIR_READ_ERROR:"+r);
});
},function(){
o.reject("DIR_NOT_FOUND:"+r);
});
}),o.promise;
},
checkFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
o.resolve(n);
},function(n){
o.reject(n);
});
}),o.promise;
},
createFile:function(r,o){
vart=n.defer();
return3==arguments.length&&(r="/"+r+"/"+arguments[1],o=arguments[2]),e().then(function(n){
n.root.getFile(r,{
create:!0,
exclusive:o},function(n){
t.resolve(n);
},function(n){
t.reject(n);
});
}),t.promise;
},
removeFile:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.remove(function(){
o.resolve();
});
});
}),o.promise;
},
writeFile:function(r,o){
vart=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!0},function(n){
n.createWriter(function(n){
n.onwriteend=function(n){
t.resolve(n);
},n.write(o);
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
});
},function(n){
t.reject(n);
}),t.promise;
},
readFile:function(r){
varo=n.defer();
returnconsole.log("readFileisnowdeprecatedasofv0.1.4-alpha,usereadAsTextinstead"),2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsText:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsText(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsDataURL:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsDataURL(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsBinaryString:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsBinaryString(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readAsArrayBuffer:function(r){
varo=n.defer();
return2==arguments.length&&(r="/"+r+"/"+arguments[1]),e().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
vare=newFileReader();
e.onloadend=function(){
o.resolve(this.result);
},e.readAsArrayBuffer(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileMetadata:function(r){
varo=n.defer();
returne().then(function(n){
n.root.getFile(r,{
create:!1},function(n){
n.file(function(n){
o.resolve(n);
});
},function(n){
o.reject(n);
});
}),o.promise;
},
readFileAbsolute:function(){
vare=n.defer();
window.resolveLocalFileSystemURI(filePath,function(n){
n.file(function(n){
varr=newFileReader();
r.onloadend=function(){
e.resolve(this.result);
},r.readAsText(n);
});
},function(n){
e.reject(n);
});
},
readFileMetadataAbsolute:function(e){
varr=n.defer();
returnwindow.resolveLocalFileSystemURI(e,function(n){
n.file(function(n){
r.resolve(n);
});
},function(n){
r.reject(n);
}),r.promise;
},
downloadFile:function(e,r,o,t){
vari=n.defer(),a=newFileTransfer(),u=encodeURI(e);
returna.onprogress=function(n){
i.notify(n);
},a.download(u,r,function(n){
i.resolve(n);
},function(n){
i.reject(n);
},o,t),i.promise;
},
uploadFile:function(e,r,o){
vart=n.defer(),i=newFileTransfer(),a=encodeURI(e);
returni.onprogress=function(n){
t.notify(n);
},i.upload(r,a,function(n){
t.resolve(n);
},function(n){
t.reject(n);
},o),t.promise;
}};
}])
648 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]),angular.module("ngCordova.plugins.facebookConnect",[]).provider("$cordova",[function(){
this.FacebookAppId=void0,this.setFacebookAppId=function(n){
this.FacebookAppId=n;
},this.$get=[function(){
varn=this.FacebookAppId;
return{
getFacebookAppId:function(){
returnn;
}};
}];
}]).factory("$cordovaFacebookConnect",["$q","$cordova",function(n,e){
return{
init:function(n){
window.cordova||facebookConnectPlugin.browserInit(n);
},
login:function(r){
this.init(e.getFacebookAppId());
varo=n.defer();
returnfacebookConnectPlugin.login(r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
showDialog:function(e){
varr=n.defer();
returnfacebookConnectPlugin.showDialog(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
api:function(e,r){
varo=n.defer();
returnfacebookConnectPlugin.api(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
},
getAccessToken:function(){
vare=n.defer();
returnfacebookConnectPlugin.getAccessToken(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
getLoginStatus:function(){
vare=n.defer();
returnfacebookConnectPlugin.getLoginStatus(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
logout:function(){
vare=n.defer();
returnfacebookConnectPlugin.logout(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}])
649 0 angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}]) angular.module("ngCordova",["ngCordova.plugins"]),angular.module("ngCordova.plugins.adMob",[]).factory("$cordovaAdMob",[function(){
return{
createBannerView:function(n,e,r){
returnwindow.plugins.AdMob.createBannerView(n,e,r);
},
createInterstitialView:function(n,e,r){
returnwindow.plugins.AdMob.createInterstitialView(n,e,r);
},
requestAd:function(n,e,r){
returnwindow.plugins.AdMob.requestAd(n,e,r);
},
showAd:function(n,e,r){
returnwindow.plugins.AdMob.showAd(n,e,r);
},
requestInterstitialAd:function(n,e,r){
returnwindow.plugins.AdMob.requestInterstitialAd(n,e,r);
}};
}]),angular.module("ngCordova.plugins.appAvailability",[]).factory("$cordovaAppAvailability",["$q",function(n){
return{
check:function(e){
varr=n.defer();
returnappAvailability.check(e,function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
}};
}]),angular.module("ngCordova.plugins.backgroundGeolocation",[]).factory("$cordovaBackgroundGeolocation",["$q",function(n){
return{
init:function(){
window.navigator.geolocation.getCurrentPosition(function(n){
returnn;
});
},
configure:function(e){
this.init();
varr=n.defer();
returnwindow.plugins.backgroundGeoLocation.configure(function(n){
r.resolve(n),window.plugins.backgroundGeoLocation.finish();
},function(n){
r.reject(n);
},e),this.start(),r.promise;
},
start:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.start(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
stop:function(){
vare=n.defer();
returnwindow.plugins.backgroundGeoLocation.stop(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.barcodeScanner",[]).factory("$cordovaBarcodeScanner",["$q",function(n){
return{
scan:function(){
vare=n.defer();
returncordova.plugins.barcodeScanner.scan(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
encode:function(e,r){
varo=n.defer();
returncordova.plugins.barcodeScanner.encode(e,r,function(n){
o.resolve(n);
},function(n){
o.reject(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.battery-status",[]).factory("$cordovaBatteryStatus",[function(){
return{
onBatteryStatus:function(n){
window.addEventListener("batterystatus",n,!1);
},
onBatteryCritical:function(n){
window.addEventListener("batterycritical",n,!1);
},
onBatteryLow:function(n){
window.addEventListener("batterylow",n,!1);
}};
}]),angular.module("ngCordova.plugins.bluetoothSerial",[]).factory("$cordovaBluetoothSerial",["$q",function(n){
vare=function(){
vare=n.defer(),r=function(n){
e.resolve(n);
},o=function(n){
e.reject(n);
},t=arguments[0],i=Array.prototype.slice.call(arguments,1,arguments.length);
returni.push(r),i.push(o),window.bluetoothSerial[t].apply(this,i),e.promise;
};
return{
connect:function(n){
returne("connect",n);
},
connectInsecure:function(n){
returne("connectInsecure",n);
},
disconnect:function(){
returne("disconnect");
},
list:function(){
returne("list");
},
isEnabled:function(){
returne("isEnabled");
},
isConnected:function(){
returne("isConnected");
},
available:function(){
returne("available");
},
read:function(){
returne("read");
},
readUntil:function(n){
returne("readUntil",n);
},
write:function(n){
returne("write",n);
},
subscribe:function(n){
returne("subscribe",n);
},
unsubscribe:function(){
returne("unsubscribe");
},
clear:function(){
returne("clear");
},
readRSSI:function(){
returne("readRSSI");
}};
}]),angular.module("ngCordova.plugins.camera",[]).factory("$cordovaCamera",["$q",function(n){
return{
getPicture:function(e){
varr=n.defer();
returnnavigator.camera?(navigator.camera.getPicture(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
cleanup:function(){
vare=n.defer();
returnnavigator.camera.cleanup(function(){
e.resolve(arguments);
},function(n){
e.reject(n);
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.capture",[]).factory("$cordovaCapture",["$q",function(n){
return{
captureAudio:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureAudio(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureImage:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureImage(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
},
captureVideo:function(e){
varr=n.defer();
returnnavigator.device.capture?(navigator.device.capture.captureVideo(function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise):(r.resolve(null),r.promise);
}};
}]),angular.module("ngCordova.plugins.clipboard",[]).factory("$cordovaClipboard",["$q",function(n){
return{
copy:function(e){
varr=n.defer();
returnwindow.cordova.plugins.clipboard.copy(e,function(){
r.resolve();
},function(){
r.reject();
}),r.promise;
},
paste:function(){
vare=n.defer();
returnwindow.cordova.plugins.clipboard.paste(function(n){
e.resolve(n);
},function(){
e.reject();
}),e.promise;
}};
}]),angular.module("ngCordova.plugins.contacts",[]).factory("$cordovaContacts",["$q",function(n){
return{
save:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.save(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
remove:function(e){
varr=n.defer(),o=navigator.contacts.create(e);
returno.remove(function(n){
r.resolve(n);
},function(n){
r.reject(n);
}),r.promise;
},
clone:function(n){
vare=navigator.contacts.create(n);
returne.clone(n);
},
find:function(e){
varr=n.defer(),o=e.fields||["id","displayName"];
returndeletee.fields,navigator.contacts.find(o,function(n){
r.resolve(n);
},function(n){
r.reject(n);
},e),r.promise;
}};
}]),angular.module("ngCordova.plugins.datePicker",[]).factory("$cordovaDatePicker",["$window","$q",function(n,e){
return{
show:function(r){
varo=e.defer();
returnn.datePicker.show(r,function(n){
o.resolve(n);
}),o.promise;
}};
}]),angular.module("ngCordova.plugins.device",[]).factory("$cordovaDevice",[function(){
return{
getDevice:function(){
returndevice;
},
getCordova:function(){
returndevice.cordova;
},
getModel:function(){
returndevice.model;
},
getName:function(){
returndevice.name;
},
getPlatform:function(){
returndevice.platform;
},
getUUID:function(){
returndevice.uuid;
},
getVersion:function(){
returndevice.version;
}};
}]),angular.module("ngCordova.plugins.deviceMotion",[]).factory("$cordovaDeviceMotion",["$q",function(n){
return{
getCurrentAcceleration:function(){
vare=n.defer();
returnnavigator.accelerometer.getCurrentAcceleration(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchAcceleration:function(e){
varr=n.defer(),o=navigator.accelerometer.watchAcceleration(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
returnnavigator.accelerometer.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.deviceOrientation",[]).factory("$cordovaDeviceOrientation",["$q",function(n){
return{
getCurrentHeading:function(){
vare=n.defer();
returnnavigator.compass.getCurrentHeading(function(n){
e.resolve(n);
},function(n){
e.reject(n);
}),e.promise;
},
watchHeading:function(e){
varr=n.defer(),o=navigator.compass.watchHeading(function(n){
r.notify(n);
},function(n){
r.reject(n);
},e);
return{
watchId:o,
promise:r.promise};
},
clearWatch:function(n){
navigator.compass.clearWatch(n);
}};
}]),angular.module("ngCordova.plugins.dialogs",[]).factory("$cordovaDialogs",["$q",function(n){
return{
alert:function(e,r,o){
vart=n.defer();
returnnavigator.notification.alert(e,function(){
t.resolve();
},r,o),t.promise;
},
confirm:function(e,r,o){
vart=n.defer();
returnnavigator.notification.confirm(e,function(){
t.resolve();
},r,o),t.promise;
},
prompt:function(e,r,o,t){
vari=n.defer();
returnnavigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise;
},
beep:function(n){
returnnavigator.notification.beep(n);
}};
}])
650 0 navigator.notification.confirm(e,function(){
i.resolve();
},r,o,t),i.promise navigator.notification.prompt(e,function(){
i.resolve();
},r,o,t),i.promise
651 17 networkSate===Connection.UNKNOWN||networkState===Connection.NONE networkState===Connection.UNKNOWN||networkState===Connection.NONE
652 17 networkSate===Connection.UNKNOWN networkState===Connection.UNKNOWN
653 425 theCode==39||theCode==40 theCode==39||theCode==40&&e.which===0
654 0 Behave||function(h){
if(typeofString.prototype.repeat!=="function"){
String.prototype.repeat=function(m){
if(m<1){
return"";
}
if(m%2){
returnthis.repeat(m-1)+this;
}
varl=this.repeat(m/2);
returnl+l;
};
}
if(typeofArray.prototype.filter!=="function"){
Array.prototype.filter=function(q){
if(this===null){
thrownewTypeError();
}
varp=Object(this),l=p.length>>>0;
if(typeofq!="function"){
thrownewTypeError();
}
varo=[],n=arguments[1];
for(varm=0;m<l;m++){
if(minp){
varr=p[m];
if(q.call(n,r,m,p)){
o.push(r);
}
}
}
returno;
};
}
varc={
textarea:null,
replaceTab:true,
softTabs:true,
tabSize:4,
autoOpen:true,
overwrite:true,
autoStrip:true,
autoIndent:true,
fence:false},a,f,g={
keyMap:[{
open:'"',
close:'"',
canBreak:false},{
open:"'",
close:"'",
canBreak:false},{
open:"(",
close:")",
canBreak:false},{
open:"[",
close:"]",
canBreak:true},{
open:"{",
close:"}",
canBreak:true}]},i={
defineNewLine:function(){
varl=document.createElement("textarea");
l.value="\n";
if(l.value.length==2){
f="\r\n";
}else{
f="\n";
}
},
cursor:{
get:function(){
if(typeofdocument.createElement("textarea").selectionStart==="number"){
returnc.textarea.selectionStart;
}else{
if(document.selection){
varm=0,l=c.textarea.createTextRange(),n=document.selection.createRange().duplicate(),o=n.getBookmark();
l.moveToBookmark(o);
while(l.moveStart("character",-1)!==0){
m++;
}
returnm;
}
}
},
set:function(n,l){
if(!l){
l=n;
}
if(c.textarea.setSelectionRange){
c.textarea.focus();
c.textarea.setSelectionRange(n,l);
}else{
if(c.textarea.createTextRange){
varm=c.textarea.createTextRange();
m.collapse(true);
m.moveEnd("character",l);
m.moveStart("character",n);
m.select();
}
}
},
selection:function(){
varp=c.textarea,s=0,n=0,r,o,m,l,q;
if(typeofp.selectionStart=="number"&&typeofp.selectionEnd=="number"){
s=p.selectionStart;
n=p.selectionEnd;
}else{
o=document.selection.createRange();
if(o&&o.parentElement()==p){
r=i.editor.get();
l=r.length;
m=p.createTextRange();
m.moveToBookmark(o.getBookmark());
q=p.createTextRange();
q.collapse(false);
if(m.compareEndPoints("StartToEnd",q)>-1){
s=n=l;
}else{
s=-m.moveStart("character",-l);
s+=r.slice(0,s).split(f).length-1;
if(m.compareEndPoints("EndToEnd",q)>-1){
n=l;
}else{
n=-m.moveEnd("character",-l);
n+=r.slice(0,n).split(f).length-1;
}
}
}
}
returns==n?false:{
start:s,
end:n};
}},
editor:{
get:function(){
returnc.textarea.value.replace(/\r/g,"");
},
set:function(l){
c.textarea.value=l;
}},
fenceRange:function(){
if(typeofc.fence=="string"){
varm=i.editor.get(),p=i.cursor.get(),o=0,l=m.indexOf(c.fence),n=0;
while(l>=0){
n++;
if(p<(l+o)){
break;
}
o+=l+c.fence.length;
m=m.substring(l+c.fence.length);
l=m.indexOf(c.fence);
}
if((o)<p&&((l+o)>p)&&n%2===0){
returntrue;
}
returnfalse;
}else{
returntrue;
}
},
isEven:function(m,l){
returnl%2;
},
levelsDeep:function(){
varr=i.cursor.get(),m=i.editor.get();
varn=m.substring(0,r),t=0,p,o;
for(p=0;p<n.length;p++){
for(o=0;o<g.keyMap.length;o++){
if(g.keyMap[o].canBreak){
if(g.keyMap[o].open==n.charAt(p)){
t++;
}
if(g.keyMap[o].close==n.charAt(p)){
t--;
}
}
}
}
varq=0,s=["'",'"'];
for(ping.keyMap){
if(g.keyMap[p].canBreak){
for(oins){
q+=n.split(s[o]).filter(i.isEven).join("").split(g.keyMap[p].open).length-1;
}
}
}
varl=t-q;
returnl>=0?l:0;
},
deepExtend:function(l,n){
for(varminn){
if(n[m]&&n[m].constructor&&n[m].constructor===Object){
l[m]=l[m]||{};
i.deepExtend(l[m],n[m]);
}else{
l[m]=n[m];
}
}
returnl;
},
addEvent:functiond(m,l,n){
if(m.addEventListener){
m.addEventListener(l,n,false);
}else{
if(m.attachEvent){
m.attachEvent("on"+l,n);
}
}
},
preventDefaultEvent:function(l){
if(l.preventDefault){
l.preventDefault();
}else{
l.returnValue=false;
}
}},j={
tabKey:function(p){
if(!i.fenceRange()){
return;
}
if(p.keyCode==9){
i.preventDefaultEvent(p);
vars=i.cursor.selection(),r=i.cursor.get(),l=i.editor.get();
if(s){
varn=s.start;
while(n--){
if(l.charAt(n)=="\n"){
s.start=n+1;
break;
}
}
varu=l.substring(s.start,s.end),v=u.split("\n"),o;
if(p.shiftKey){
for(o=0;o<v.length;o++){
if(v[o].substring(0,a.length)==a){
v[o]=v[o].substring(a.length);
}
}
u=v.join("\n");
i.editor.set(l.substring(0,s.start)+u+l.substring(s.end));
i.cursor.set(s.start,s.start+u.length);
}else{
for(oinv){
v[o]=a+v[o];
}
u=v.join("\n");
i.editor.set(l.substring(0,s.start)+u+l.substring(s.end));
i.cursor.set(s.start,s.start+u.length);
}
}else{
varm=l.substring(0,r),t=l.substring(r),q=m+a+t;
if(p.shiftKey){
if(l.substring(r-a.length,r)==a){
q=l.substring(0,r-a.length)+t;
i.editor.set(q);
i.cursor.set(r-a.length);
}
}else{
i.editor.set(q);
i.cursor.set(r+a.length);
returnfalse;
}
}
}
returntrue;
},
enterKey:function(r){
if(!i.fenceRange()){
return;
}
if(r.keyCode==13){
i.preventDefaultEvent(r);
varu=i.cursor.get(),n=i.editor.get(),o=n.substring(0,u),v=n.substring(u),x=o.charAt(o.length-1),t=v.charAt(0),p=i.levelsDeep(),m="",l="",w,q;
if(!p){
w=1;
}else{
while(p--){
m+=a;
}
m=m;
w=m.length+1;
for(qing.keyMap){
if(g.keyMap[q].open==x&&g.keyMap[q].close==t){
l=f;
}
}
}
vars=o+f+m+l+(m.substring(0,m.length-a.length))+v;
i.editor.set(s);
i.cursor.set(u+w);
}
},
deleteKey:function(o){
if(!i.fenceRange()){
return;
}
if(o.keyCode==8){
if(i.cursor.selection()===false){
varr=i.cursor.get(),l=i.editor.get(),m=l.substring(0,r),s=l.substring(r),t=m.charAt(m.length-1),q=s.charAt(0),n;
for(ning.keyMap){
if(g.keyMap[n].open==t&&g.keyMap[n].close==q){
i.preventDefaultEvent(o);
varp=l.substring(0,r-1)+l.substring(r+1);
i.editor.set(p);
i.cursor.set(r-1);
}
}
}
}
}},e={
openedChar:function(l,o){
i.preventDefaultEvent(o);
varr=i.cursor.get(),p=i.editor.get(),n=p.substring(0,r),m=p.substring(r),q=n+l.open+l.close+m;
c.textarea.value=q;
i.cursor.set(r+1);
},
closedChar:function(l,n){
varp=i.cursor.get(),o=i.editor.get(),m=o.substring(p,p+1);
if(m==l.close){
i.preventDefaultEvent(n);
i.cursor.set(i.cursor.get()+1);
returntrue;
}
returnfalse;
}},b={
filter:function(n){
if(!i.fenceRange()){
return;
}
varp=n.which||n.keyCode;
if(p==39||p==40){
return;
}
varl=String.fromCharCode(p),m;
for(ming.keyMap){
if(g.keyMap[m].close==l){
varo=c.overwrite&&e.closedChar(g.keyMap[m],n);
if(!o&&g.keyMap[m].open==l&&c.autoOpen){
e.openedChar(g.keyMap[m],n);
}
}else{
if(g.keyMap[m].open==l&&c.autoOpen){
e.openedChar(g.keyMap[m],n);
}
}
}
},
listen:function(){
if(c.replaceTab){
i.addEvent(c.textarea,"keydown",j.tabKey);
}
if(c.autoIndent){
i.addEvent(c.textarea,"keydown",j.enterKey);
}
if(c.autoStrip){
i.addEvent(c.textarea,"keydown",j.deleteKey);
}
i.addEvent(c.textarea,"keypress",b.filter);
}},k=function(l){
if(l.textarea){
i.deepExtend(c,l);
i.defineNewLine();
if(c.softTabs){
a="".repeat(c.tabSize);
}else{
a="\t";
c.textarea.style.tabSize=c.tabSize;
}
b.listen();
}
};
this.destroy=function(){
c.textarea.removeEventListener("keydown",j.tabKey);
c.textarea.removeEventListener("keydown",j.enterKey);
c.textarea.removeEventListener("keydown",j.deleteKey);
c.textarea.removeEventListener("keypress",b.filter);
};
k(h);
} Behave||function(h){
if(typeofString.prototype.repeat!=="function"){
String.prototype.repeat=function(m){
if(m<1){
return"";
}
if(m%2){
returnthis.repeat(m-1)+this;
}
varl=this.repeat(m/2);
returnl+l;
};
}
if(typeofArray.prototype.filter!=="function"){
Array.prototype.filter=function(q){
if(this===null){
thrownewTypeError();
}
varp=Object(this),l=p.length>>>0;
if(typeofq!="function"){
thrownewTypeError();
}
varo=[],n=arguments[1];
for(varm=0;m<l;m++){
if(minp){
varr=p[m];
if(q.call(n,r,m,p)){
o.push(r);
}
}
}
returno;
};
}
varc={
textarea:null,
replaceTab:true,
softTabs:true,
tabSize:4,
autoOpen:true,
overwrite:true,
autoStrip:true,
autoIndent:true,
fence:false},a,f,g={
keyMap:[{
open:'"',
close:'"',
canBreak:false},{
open:"'",
close:"'",
canBreak:false},{
open:"(",
close:")",
canBreak:false},{
open:"[",
close:"]",
canBreak:true},{
open:"{",
close:"}",
canBreak:true}]},i={
defineNewLine:function(){
varl=document.createElement("textarea");
l.value="\n";
if(l.value.length==2){
f="\r\n";
}else{
f="\n";
}
},
cursor:{
get:function(){
if(typeofdocument.createElement("textarea").selectionStart==="number"){
returnc.textarea.selectionStart;
}else{
if(document.selection){
varm=0,l=c.textarea.createTextRange(),n=document.selection.createRange().duplicate(),o=n.getBookmark();
l.moveToBookmark(o);
while(l.moveStart("character",-1)!==0){
m++;
}
returnm;
}
}
},
set:function(n,l){
if(!l){
l=n;
}
if(c.textarea.setSelectionRange){
c.textarea.focus();
c.textarea.setSelectionRange(n,l);
}else{
if(c.textarea.createTextRange){
varm=c.textarea.createTextRange();
m.collapse(true);
m.moveEnd("character",l);
m.moveStart("character",n);
m.select();
}
}
},
selection:function(){
varp=c.textarea,s=0,n=0,r,o,m,l,q;
if(typeofp.selectionStart=="number"&&typeofp.selectionEnd=="number"){
s=p.selectionStart;
n=p.selectionEnd;
}else{
o=document.selection.createRange();
if(o&&o.parentElement()==p){
r=i.editor.get();
l=r.length;
m=p.createTextRange();
m.moveToBookmark(o.getBookmark());
q=p.createTextRange();
q.collapse(false);
if(m.compareEndPoints("StartToEnd",q)>-1){
s=n=l;
}else{
s=-m.moveStart("character",-l);
s+=r.slice(0,s).split(f).length-1;
if(m.compareEndPoints("EndToEnd",q)>-1){
n=l;
}else{
n=-m.moveEnd("character",-l);
n+=r.slice(0,n).split(f).length-1;
}
}
}
}
returns==n?false:{
start:s,
end:n};
}},
editor:{
get:function(){
returnc.textarea.value.replace(/\r/g,"");
},
set:function(l){
c.textarea.value=l;
}},
fenceRange:function(){
if(typeofc.fence=="string"){
varm=i.editor.get(),p=i.cursor.get(),o=0,l=m.indexOf(c.fence),n=0;
while(l>=0){
n++;
if(p<(l+o)){
break;
}
o+=l+c.fence.length;
m=m.substring(l+c.fence.length);
l=m.indexOf(c.fence);
}
if((o)<p&&((l+o)>p)&&n%2===0){
returntrue;
}
returnfalse;
}else{
returntrue;
}
},
isEven:function(m,l){
returnl%2;
},
levelsDeep:function(){
varr=i.cursor.get(),m=i.editor.get();
varn=m.substring(0,r),t=0,p,o;
for(p=0;p<n.length;p++){
for(o=0;o<g.keyMap.length;o++){
if(g.keyMap[o].canBreak){
if(g.keyMap[o].open==n.charAt(p)){
t++;
}
if(g.keyMap[o].close==n.charAt(p)){
t--;
}
}
}
}
varq=0,s=["'",'"'];
for(ping.keyMap){
if(g.keyMap[p].canBreak){
for(oins){
q+=n.split(s[o]).filter(i.isEven).join("").split(g.keyMap[p].open).length-1;
}
}
}
varl=t-q;
returnl>=0?l:0;
},
deepExtend:function(l,n){
for(varminn){
if(n[m]&&n[m].constructor&&n[m].constructor===Object){
l[m]=l[m]||{};
i.deepExtend(l[m],n[m]);
}else{
l[m]=n[m];
}
}
returnl;
},
addEvent:functiond(m,l,n){
if(m.addEventListener){
m.addEventListener(l,n,false);
}else{
if(m.attachEvent){
m.attachEvent("on"+l,n);
}
}
},
preventDefaultEvent:function(l){
if(l.preventDefault){
l.preventDefault();
}else{
l.returnValue=false;
}
}},j={
tabKey:function(p){
if(!i.fenceRange()){
return;
}
if(p.keyCode==9){
i.preventDefaultEvent(p);
vars=i.cursor.selection(),r=i.cursor.get(),l=i.editor.get();
if(s){
varn=s.start;
while(n--){
if(l.charAt(n)=="\n"){
s.start=n+1;
break;
}
}
varu=l.substring(s.start,s.end),v=u.split("\n"),o;
if(p.shiftKey){
for(o=0;o<v.length;o++){
if(v[o].substring(0,a.length)==a){
v[o]=v[o].substring(a.length);
}
}
u=v.join("\n");
i.editor.set(l.substring(0,s.start)+u+l.substring(s.end));
i.cursor.set(s.start,s.start+u.length);
}else{
for(oinv){
v[o]=a+v[o];
}
u=v.join("\n");
i.editor.set(l.substring(0,s.start)+u+l.substring(s.end));
i.cursor.set(s.start,s.start+u.length);
}
}else{
varm=l.substring(0,r),t=l.substring(r),q=m+a+t;
if(p.shiftKey){
if(l.substring(r-a.length,r)==a){
q=l.substring(0,r-a.length)+t;
i.editor.set(q);
i.cursor.set(r-a.length);
}
}else{
i.editor.set(q);
i.cursor.set(r+a.length);
returnfalse;
}
}
}
returntrue;
},
enterKey:function(r){
if(!i.fenceRange()){
return;
}
if(r.keyCode==13){
i.preventDefaultEvent(r);
varu=i.cursor.get(),n=i.editor.get(),o=n.substring(0,u),v=n.substring(u),x=o.charAt(o.length-1),t=v.charAt(0),p=i.levelsDeep(),m="",l="",w,q;
if(!p){
w=1;
}else{
while(p--){
m+=a;
}
m=m;
w=m.length+1;
for(qing.keyMap){
if(g.keyMap[q].open==x&&g.keyMap[q].close==t){
l=f;
}
}
}
vars=o+f+m+l+(m.substring(0,m.length-a.length))+v;
i.editor.set(s);
i.cursor.set(u+w);
}
},
deleteKey:function(o){
if(!i.fenceRange()){
return;
}
if(o.keyCode==8){
if(i.cursor.selection()===false){
varr=i.cursor.get(),l=i.editor.get(),m=l.substring(0,r),s=l.substring(r),t=m.charAt(m.length-1),q=s.charAt(0),n;
for(ning.keyMap){
if(g.keyMap[n].open==t&&g.keyMap[n].close==q){
i.preventDefaultEvent(o);
varp=l.substring(0,r-1)+l.substring(r+1);
i.editor.set(p);
i.cursor.set(r-1);
}
}
}
}
}},e={
openedChar:function(l,o){
i.preventDefaultEvent(o);
varr=i.cursor.get(),p=i.editor.get(),n=p.substring(0,r),m=p.substring(r),q=n+l.open+l.close+m;
c.textarea.value=q;
i.cursor.set(r+1);
},
closedChar:function(l,n){
varp=i.cursor.get(),o=i.editor.get(),m=o.substring(p,p+1);
if(m==l.close){
i.preventDefaultEvent(n);
i.cursor.set(i.cursor.get()+1);
returntrue;
}
returnfalse;
}},b={
filter:function(n){
if(!i.fenceRange()){
return;
}
varp=n.which||n.keyCode;
if(p==39||p==40&&n.which===0){
return;
}
varl=String.fromCharCode(p),m;
for(ming.keyMap){
if(g.keyMap[m].close==l){
varo=c.overwrite&&e.closedChar(g.keyMap[m],n);
if(!o&&g.keyMap[m].open==l&&c.autoOpen){
e.openedChar(g.keyMap[m],n);
}
}else{
if(g.keyMap[m].open==l&&c.autoOpen){
e.openedChar(g.keyMap[m],n);
}
}
}
},
listen:function(){
if(c.replaceTab){
i.addEvent(c.textarea,"keydown",j.tabKey);
}
if(c.autoIndent){
i.addEvent(c.textarea,"keydown",j.enterKey);
}
if(c.autoStrip){
i.addEvent(c.textarea,"keydown",j.deleteKey);
}
i.addEvent(c.textarea,"keypress",b.filter);
}},k=function(l){
if(l.textarea){
i.deepExtend(c,l);
i.defineNewLine();
if(c.softTabs){
a="".repeat(c.tabSize);
}else{
a="\t";
c.textarea.style.tabSize=c.tabSize;
}
b.listen();
}
};
this.destroy=function(){
c.textarea.removeEventListener("keydown",j.tabKey);
c.textarea.removeEventListener("keydown",j.enterKey);
c.textarea.removeEventListener("keydown",j.deleteKey);
c.textarea.removeEventListener("keypress",b.filter);
};
k(h);
}
655 0 p==39||p==40 p==39||p==40&&n.which===0
656 0 p==40 p==39
657 121 isDeclared(k)&&k isDeclared(k)&&opts[k]
658 130 data.command==="message" data.type==="message"
659 27 data.command==="message" data.type==="message"
660 290 options.campatiable&&options.dtstart options.compatible&&options.dtstart
661 998 freq>=RRule.SECONDLY&&plb(bysecond)&&!contains(bysecond,minute) freq>=RRule.SECONDLY&&plb(bysecond)&&!contains(bysecond,second)
662 998 plb(bysecond)&&!contains(bysecond,minute) plb(bysecond)&&!contains(bysecond,second)
663 1001 freq>=RRule.SECONDLY&&plb(bysecond)&&!contains(bysecond,minute) freq>=RRule.SECONDLY&&plb(bysecond)&&!contains(bysecond,second)
664 1001 plb(bysecond)&&!contains(bysecond,minute) plb(bysecond)&&!contains(bysecond,second)
665 86 prediction!=null&&predictions.indexOf(prediction)!==-1 prediction!=null&&predictions.indexOf(prediction)===-1
666 88 options.enviroment||{} options.environment||{}
667 68 options.debug||true options.debug||false
668 238 this.defaultValue===undefined this.paramSpec.defaultValue===undefined
669 378 this.conversion.value&&!this.conversion.value.exec this.conversion.value&&this.conversion.value.exec
670 160 node.nodeType===Node.TEXT_NODE node.nodeType===3
671 116 aMinLen==undefined aMinLen==null
672 115 measureNode.offsetWidth/2000 measureNode.offsetWidth/20000
673 618 theme||"ace/theme/TextMate" theme||"ace/theme/textmate"
674 620 theme||"ace/theme/TextMate" theme||"ace/theme/textmate"
675 134 i<rows i<rows.length
676 126 "<divclass='line'style='height:"+this.lineHeight+"px;" "<divclass='line'style='height:"+this.$characterSize.height+"px;"
677 126 "<divclass='line'style='height:"+this.lineHeight "<divclass='line'style='height:"+this.$characterSize.height
678 66 "<divstyle='height:"+this.lineHeight+"px;" "<divclass='line'style='height:"+this.lineHeight+"px;"
679 66 "<divstyle='height:"+this.lineHeight "<divclass='line'style='height:"+this.lineHeight
680 181 componentinstanceofHTMLElement componentinstanceofwindow.HTMLElement
681 181 componentinstanceofHTMLElement componentinstanceofwindow.HTMLElement
682 58 mountPoint&&!(mountPointinstanceofHTMLElement) mountPoint&&!(mountPointinstanceofwindow.HTMLElement)
683 58 mountPointinstanceofHTMLElement mountPointinstanceofwindow.HTMLElement
684 58 mountPoint&&!(mountPointinstanceofHTMLElement) mountPoint&&!(mountPointinstanceofwindow.HTMLElement)
685 58 mountPointinstanceofHTMLElement mountPointinstanceofwindow.HTMLElement
686 15 this.logFeatureFlagMissEnabled&&!isEnabled this.logFeatureFlagMissEnabled()&&!isEnabled
687 15 this.logFeatureFlagMissEnabled&&!isEnabled this.logFeatureFlagMissEnabled()&&!isEnabled
688 181 event.target===$(selector)[0]||event.target===selectorOwner||selectorParent>0 event.target===$(selector)[0]||event.target===selectorOwner[0]||selectorParent>0
689 181 event.target===selectorOwner||selectorParent>0 event.target===selectorOwner[0]||selectorParent>0
690 181 event.target===selectorOwner event.target===selectorOwner[0]
691 57 Bro(bro).isThatEvenAthing()===Bro.TOTALLY Bro(bro).isThatEvenAThing()===Bro.TOTALLY
692 80 Bro(item).isThatEvenAthing()===Bro.NOWAY Bro(item).isThatEvenAThing()===Bro.NOWAY
693 123 Bro(exports).isThatEvenAthing()===Bro.TOTALLY Bro(exports).isThatEvenAThing()===Bro.TOTALLY
694 126 Bro(module).isThatEvenAthing()===Bro.TOTALLY Bro(module).isThatEvenAThing()===Bro.TOTALLY
695 129 Bro(require).isThatEvenAthing()===Bro.TOTALLY Bro(require).isThatEvenAThing()===Bro.TOTALLY
696 134 Bro(window).isThatEvenAthing()===Bro.TOTALLY Bro(window).isThatEvenAThing()===Bro.TOTALLY
697 53 !that.$element.parent()&&that.$element.appendTo(document.body) !that.$element.parent().length&&that.$element.appendTo(document.body)
698 407 relationEmbeddedId&&foreignAdapter===adapter relationEmbeddedId&&DS.LSAdapter.prototype.isPrototypeOf(adapter)
699 405 this.options.style[style.id]||{} this.options.styles[style.id]||{}
700 415 this.options.style[style.id]||{} this.options.styles[style.id]||{}
701 428 this.options.style[style.id]||{} this.options.styles[style.id]||{}
702 88 i<lastDatabases.length i<databases.length
703 5 window.innerHeight+document.body.scrollTop>=document.body.offsetHeight window.innerHeight+window.pageYOffset>=document.body.offsetHeight
704 5 window.innerHeight+document.body.scrollTop window.innerHeight+window.pageYOffset
705 5 window.innerHeight+document.body.scrollTop>=document.body.offsetHeight window.innerHeight+window.pageYOffset>=document.body.offsetHeight
706 5 window.innerHeight+document.body.scrollTop window.innerHeight+window.pageYOffset
707 384 !has_dot&&!has_x !has_dot&&!has_x&&!has_e
708 1493 "-0x"+num.toString(16).toLowerCase() "-0x"+(-num).toString(16).toLowerCase()
709 1164 p[0]=="binary"&&p[2]===self (p[0]=="binary"||p[0]=="assign")&&p[2]===self
710 898 e&&t[0]==e[0]&&(t[0]=="return"||t[0]=="throw") e&&t[0]==e[0]&&(t[0]=="return"||t[0]=="throw")&&t[1]&&e[1]
711 898 t[0]==e[0]&&(t[0]=="return"||t[0]=="throw") t[0]==e[0]&&(t[0]=="return"||t[0]=="throw")&&t[1]&&e[1]
712 967 ret[1]&&!scope.refs[ret[1]] ret[1]&&!HOP(scope.refs,ret[1])
713 991 ctor[0]=="name"&&ctor[1]=="Array" ctor[0]=="name"&&ctor[1]=="Array"&&args.length!=1
714 1110 m[2]+"e-"+(m[1].length+1) m[2]+"e-"+(m[1].length+m[2].length)
715 1110 m[1].length+1 m[1].length+m[2].length
716 294 type=="operator"||(type=="keyword"&&HOP(KEYWORDS_BEFORE_EXPRESSION,value))||(type=="punc"&&HOP(PUNC_BEFORE_EXPRESSION,value)) type=="operator"&&!HOP(UNARY_POSTFIX,value)||(type=="keyword"&&HOP(KEYWORDS_BEFORE_EXPRESSION,value))||(type=="punc"&&HOP(PUNC_BEFORE_EXPRESSION,value))
717 753 ctor[0]=="seq"||ctor[0]=="binary" ctor[0]=="seq"||ctor[0]=="binary"||ctor[0]=="conditional"
718 8 t.prototype.map||(t.prototype.map=function(t){
returnthis.bind(compose(this.of,t));
}) isFunction(t.prototype.map)||(t.prototype.map=function(t){
returnthis.bind(compose(this.of,t));
})
719 80 isNotGlobal&&require&&require.specified(di[i]) isNotGlobal&&require&&require.specified&&require.specified(di[i])
720 160 upperCamelCase+"hasalreadyregistered.so"+ns+"."+upperCamelCase "Thename'"+upperCamelCase
721 218 err.toString()==="Error:Samplehasalreadyregistered.soeg.Samplecan`tregisterforplugin." err.toString()==="Error:Thename'Sample'hasalreadybeenusedandregisteredasplugin.Trywithdifferentone."
722 160 upperCamelCase+"hasalreadyregistered.so"+ns+"."+upperCamelCase "Thename'"+upperCamelCase
723 218 err.toString()==="Error:Samplehasalreadyregistered.soeg.Samplecan`tregisterforplugin." err.toString()==="Error:Thename'Sample'hasalreadybeenusedandregisteredasplugin.Trywithdifferentone."
724 397 e.type==="tap"||(e.velocity===0&&!this._status.releaseOutside) e.type==="tap"||(e.velocity===0&&!releaseOutside)
725 397 e.velocity===0&&!this._status.releaseOutside e.velocity===0&&!releaseOutside
726 78 typeofstate!=="object"||stateinstanceofArray jQuery.type(state)!=="object"||stateinstanceofArray
727 78 typeofstate!=="object" jQuery.type(state)!=="object"
728 69 browserInfo.webview===true||osVersion>7 browserInfo.webview===true||osVersion<=7
729 188 this.isFitted||isAppend this._isFitted||isAppend
730 152 "<divclass='"+prefix+"-container'style='position:relative;"+temp+"'/>" "<divclass='"+prefix+"-container'style='position:relative;z-index:2000;"+temp+"'/>"
731 152 "<divclass='"+prefix+"-container'style='position:relative;"+temp "<divclass='"+prefix+"-container'style='position:relative;z-index:2000;"+temp
732 152 "<divclass='"+prefix+"-container'style='position:relative;" "<divclass='"+prefix+"-container'style='position:relative;z-index:2000;"
733 152 "<divclass='"+prefix+"-container'style='position:relative;"+temp+"'/>" "<divclass='"+prefix+"-container'style='position:relative;z-index:2000;"+temp+"'/>"
734 152 "<divclass='"+prefix+"-container'style='position:relative;"+temp "<divclass='"+prefix+"-container'style='position:relative;z-index:2000;"+temp
735 152 "<divclass='"+prefix+"-container'style='position:relative;" "<divclass='"+prefix+"-container'style='position:relative;z-index:2000;"
736 740 duration===0&&this._setPhaseValue("startend") !duration&&this._setPhaseValue("startend")
737 907 movable&&duration===0&&this._setPhaseValue("startend") movable&&!duration&&this._setPhaseValue("startend")
738 907 duration===0&&this._setPhaseValue("startend") !duration&&this._setPhaseValue("startend")
739 740 (duration===0||typeofduration!=="number")&&this._setPhaseValue("startend") !duration&&this._setPhaseValue("startend")
740 740 duration===0&&this._setPhaseValue("startend") (duration===0||typeofduration!=="number")&&this._setPhaseValue("startend")
741 2 !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f=("ms"===e?"Ms":e)+c;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
}),eg.module("persist",[jQuery,window,document],function(a,b,c){
functiond(c){
!e(c.originalEvent)&&f()?a(b).trigger("persist"):g();
}
functione(a){
return!!a.persisted;
}
functionf(){
vara=b.performance;
returna&&a.navigation&&a.navigation.type===a.navigation.TYPE_BACK_FORWARD;
}
functiong(){
i.replaceState(null,c.title,j.href);
}
functionh(b){
returnnull===b?null:a.extend(!0,{},b);
}
vari=b.history,j=b.location,k="replaceState"ini,l="state"ini;
returnk&&l?(a.persist=function(a){
returna&&i.replaceState(a,c.title,j.href),h(i.state);
},a.event.special.persist={
setup:function(){
a(b).on("pageshow",d);
},
teardown:function(){
a(b).off("pageshow",d);
},
trigger:function(a){
a.state=h(i.state);
}}):a.persist=function(){
},{
isPersisted:e,
isBackForwardNavigated:f,
onPageshow:d,
reset:g,
clone:h,
persist:a.persist};
}),eg.module("rotate",[window.jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara,b,e,f=m();
return"resize"===f?(a=d.documentElement.clientWidth,e=-1===h?a<d.documentElement.clientHeight:h>a?!0:a===h?i:!1,h=a):(b=c.orientation,0===b||180===b?e=!0:(90===b||-90===b)&&(e=!1)),e;
}
functionf(){
varb=e();
l&&i!==b&&(i=b,a(c).trigger("rotate"));
}
functiong(a){
varb,e,i=m();
if("resize"===i)
c.setTimeout(function(){
f();
},0);
else{
if(b=300,"android"===k.os.name){
if(e=d.documentElement.clientWidth,"orientationchange"===a.type&&e===h)
returnc.setTimeout(function(){
g(a);
},500),!1;
h=e;
}
c.clearTimeout(j),j=c.setTimeout(function(){
f();
},b);
}
}
varh=-1,i=null,j=null,k=b.agent(),l=/android|ios/.test(k.os.name),m=function(){
vara;
returna="android"===k.os.name&&"2.1"===k.os.version?"resize":"onorientationchange"inc?"orientationchange":"resize",m=function(){
returna;
},a;
};
returna.event.special.rotate={
setup:function(){
h=d.documentElement.clientWidth,a(c).on(m(),g);
},
teardown:function(){
a(c).off(m(),g);
},
trigger:function(a){
a.isVertical=i;
}},{
orientationChange:m,
isVertical:e,
triggerRotate:f,
handler:g};
}),eg.module("scrollEnd",[jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara=A,c=b.agent(),d=c.os,e=c.browser,f=parseInt(d.version,10);
return"android"===d.name?a="chrome"===e.name?x:f>=3?y:z:/^(?:window|ios)$/.test(d.name)&&f>=8&&(a=y),a;
}
functionf(){
varb=a(c).on("scroll",j);
B===z&&a(d).on({
touchstart:g,
touchmove:h,
touchend:i}),B===x&&b.on("orientationchange",function(){
w=!0;
});
}
functiong(){
q=!0,r=!1,u=v=0;
}
functionh(){
r=!0;
}
functioni(){
q=!1,r&&k();
}
functionj(){
switch(B){
caseA:
n();
break;
casez:
k();
break;
casey:
o();
break;
casex:
w?w=!1:n();
}
}
functionk(){
l(),s=setInterval(m,100);
}
functionl(){
s&&clearInterval(s),s=null;
}
functionm(){
q||u!==c.pageYOffset||v!==c.pageXOffset?(u=c.pageYOffset,v=c.pageXOffset):(l(),n());
}
functionn(){
a(c).trigger("scrollend",{
top:c.pageYOffset,
left:c.pageXOffset});
}
functiono(){
clearTimeout(t),t=setTimeout(function(){
n();
},350);
}
functionp(){
a(d).off({
touchstart:g,
touchmove:h,
touchend:i}),a(c).off("scroll",j);
}
varq,r,s,t,u=0,v=0,w=!1,x=3,y=2,z=1,A=0,B=e();
returna.event.special.scrollend={
setup:function(){
f();
},
teardown:function(){
p();
}},{
getDeviceType:e,
CHROME:x,
TIMERBASE:y,
TOUCHBASE:z,
SCROLLBASE:A};
}),eg.module("class",[eg],function(a){
a.Class=function(a){
varb=function(){
"function"==typeofa.construct&&a.construct.apply(this,arguments);
};
returnb.prototype=a,b.prototype.constructor=b,b;
},a.Class.extend=function(a,b){
varc=function(){
a.apply(this,arguments),"function"==typeofb.construct&&b.construct.apply(this,arguments);
},d=function(){
};
d.prototype=a.prototype;
vare=newd();
for(varfinb)
b.hasOwnProperty(f)&&(e[f]=b[f]);
returne.constructor=c,c.prototype=e,c;
};
}),eg.module("component",[eg],function(a){
a.Component=a.Class({
construct:function(){
this.eventHandler={};
},
trigger:function(a,b){
b=b||{};
varc=this.eventHandler[a]||[],d=c.length>0;
if(!d)
return!0;
c=c.concat(),b.eventType=a;
vare=!1;
b.stop=function(){
e=!0;
};
varf,g,h=[b];
(g=arguments.length)>2&&(h=h.concat(Array.prototype.slice.call(arguments,2,g)));
vari;
for(f=0;i=c[f];f++)
i.apply(this,h);
return!e;
},
hasOn:function(a){
return!!this.eventHandler[a];
},
on:function(a,b){
if("undefined"==typeofb){
varc,d=a;
for(cind)
this.on(c,d[c]);
returnthis;
}
vare=this.eventHandler[a];
return"undefined"==typeofe&&(e=this.eventHandler[a]=[]),e.push(b),this;
},
off:function(a,b){
if(0===arguments.length)
returnthis.eventHandler={},this;
if("undefined"==typeofb){
if("string"==typeofa)
returnthis.eventHandler[a]=null,this;
varc=a;
for(vardinc)
c.hasOwnProperty(d)&&this.off(d,c[d]);
returnthis;
}
vare=this.eventHandler[a];
if(e)
for(varf,g=0;f=e[g];g++)
if(f===b){
e=e.splice(g,1);
break;
}
returnthis;
}});
}),eg.module("movableCoord",[window.jQuery,eg,window.Hammer],function(a,b,c){
b.MovableCoord=b.Class.extend(b.Component,{
construct:function(b){
this.options={
min:[0,0],
max:[100,100],
bounce:[10,10,10,10],
margin:[0,0,0,0],
circular:[!1,!1,!1,!1],
easing:a.easing.easeOutQuint,
deceleration:6e-4},this._reviseOptions(b),this._status={
grabOutside:!1,
curHammer:null,
moveDistance:null,
animating:null,
interrupted:!1},this._hammers={},this._pos=[this.options.min[0],this.options.min[1]],this._subOptions={},this._raf=null,this._animationEnd=a.proxy(this._animationEnd,this);
},
bind:function(c,d){
vare=a(c),f=e.data(b.MovableCoord.KEY),g={
direction:b.DIRECTION_ALL,
scale:[1,1],
thresholdAngle:45,
maximumSpeed:1/0,
interruptable:!0};
returna.extend(g,d),f?this._hammers[f].get("pan").set({
direction:g.direction}):(f=Math.round(Math.random()*(newDate()).getTime()),this._hammers[f]=this._createHammer(e.get(0),g),e.data(b.MovableCoord.KEY,f)),this;
},
_createHammer:function(b,d){
vare=newc.Manager(b,{
recognizers:[[c.Pan,{
direction:d.direction,
threshold:0}]]});
returne.on("hammer.input",a.proxy(function(a){
a.isFirst&&(this._subOptions=d,this._status.curHammer=e,this._panstart(a));
},this)).on("panstartpanmove",a.proxy(this._panmove,this)).on("panend",a.proxy(this._panend,this)),e;
},
unbind:function(c){
vard=a(c),e=d.data(b.MovableCoord.KEY);
e&&(this._hammers[e].destroy(),deletethis._hammers[e],d.data(b.MovableCoord.KEY,null));
},
_grab:function(){
this._status.animating&&(this._pos=this._getCircularPos(this._pos),this._triggerChange(this._pos,!0),this._status.animating=null,this._raf&&b.cancelAnimationFrame(this._raf),this._raf=null);
},
_getCircularPos:function(a,b,c,d){
returnb=b||this.options.min,c=c||this.options.max,d=d||this.options.circular,d[0]&&a[1]<b[1]&&(a[1]=(a[1]-b[1])%(c[1]-b[1]+1)+c[1]),d[1]&&a[0]>c[0]&&(a[0]=(a[0]-b[0])%(c[0]-b[0]+1)+b[0]),d[2]&&a[1]>c[1]&&(a[1]=(a[1]-b[1])%(c[1]-b[1]+1)+b[1]),d[3]&&a[0]<b[0]&&(a[0]=(a[0]-b[0])%(c[0]-b[0]+1)+c[0]),a[0]=+a[0].toFixed(5),a[1]=+a[1].toFixed(5),a;
},
_isOutside:function(a,b,c){
returna[0]<b[0]||a[1]<b[1]||a[0]>c[0]||a[1]>c[1];
},
_isOutToOut:function(a,b,c,d){
return(a[0]<c[0]||a[0]>d[0]||a[1]<c[1]||a[1]>d[1])&&(b[0]<c[0]||b[0]>d[0]||b[1]<c[1]||b[1]>d[1]);
},
_panstart:function(a){
if(this._subOptions.interruptable||!this._status.interrupted){
!this._subOptions.interruptable&&(this._status.interrupted=!0);
varb=this._pos;
this._grab(),this.trigger("hold",{
pos:[b[0],b[1]],
hammerEvent:a}),this._status.moveDistance=[b[0],b[1]],this._status.grabOutside=this._isOutside(b,this.options.min,this.options.max);
}
},
_panmove:function(a){
if(this._isInterrupting()&&this._status.moveDistance){
varc,d,e,f=this._pos,g=this.options.min,h=this.options.max,i=this.options.bounce,j=this.options.margin,k=this.options.easing,l=this._subOptions.direction,m=this._subOptions.scale,n=this._getDirection(a.angle),o=[j[0]+i[0],j[1]+i[1],j[2]+i[2],j[3]+i[3]],p=!1,q=this._status.curHammer.session.prevInput;
if(q?(a.offsetX=a.deltaX-q.deltaX,a.offsetY=a.deltaY-q.deltaY):a.offsetX=a.offsetY=0,n&b.DIRECTION_HORIZONTAL&&l&b.DIRECTION_HORIZONTAL&&(this._status.moveDistance[0]+=a.offsetX*m[0],p=!0),n&b.DIRECTION_VERTICAL&&l&b.DIRECTION_VERTICAL&&(this._status.moveDistance[1]+=a.offsetY*m[1],p=!0),p&&(a.srcEvent.preventDefault(),a.srcEvent.stopPropagation()),a.preventSystemEvent=p,f[0]=this._status.moveDistance[0],f[1]=this._status.moveDistance[1],f=this._getCircularPos(f,g,h),this._status.grabOutside&&!this._isOutside(f,g,h)&&(this._status.grabOutside=!1),this._status.grabOutside)
d=g[0]-o[3],e=h[0]+o[1],c=f[0],f[0]=c>e?e:d>c?d:c,d=g[1]-o[0],e=h[1]+o[2],c=f[1],f[1]=c>e?e:d>c?d:c;
else{
varr=this._isInEasing?k(null,.9999,0,1,1)/.9999:k(null,1e-4,0,1,1)/1e-4;
f[1]<g[1]?(c=(g[1]-f[1])/(o[0]*r),f[1]=g[1]-k(null,c>1?1:c,0,1,1)*o[0]):f[1]>h[1]&&(c=(f[1]-h[1])/(o[2]*r),f[1]=h[1]+k(null,c>1?1:c,0,1,1)*o[2]),f[0]<g[0]?(c=(g[0]-f[0])/(o[3]*r),f[0]=g[0]-k(null,c>1?1:c,0,1,1)*o[3]):f[0]>h[0]&&(c=(f[0]-h[0])/(o[1]*r),f[0]=h[0]+k(null,c>1?1:c,0,1,1)*o[1]);
}
this._triggerChange(f,!0,a);
}
},
_panend:function(a){
if(this._isInterrupting()&&this._status.moveDistance){
varc=this._subOptions.direction,d=this._subOptions.scale,e=Math.abs(a.velocityX),f=Math.abs(a.velocityY);
!(c&b.DIRECTION_HORIZONTAL)&&(e=0),!(c&b.DIRECTION_VERTICAL)&&(f=0),this._animateBy(this._getNextOffsetPos([e*(a.deltaX<0?-1:1)*d[0],f*(a.deltaY<0?-1:1)*d[1]],this._subOptions.maximumSpeed),this._animationEnd,!1,this._subOptions.maximumSpeed,a),this._status.moveDistance=null;
}
},
_isInterrupting:function(){
returnthis._subOptions.interruptable||this._status.interrupted;
},
_getDirection:function(a){
varc=this._subOptions.thresholdAngle;
return0>c||c>90?b.DIRECTION_NONE:(a=Math.abs(a),a>c&&180-c>a?b.DIRECTION_VERTICAL:b.DIRECTION_HORIZONTAL);
},
_animationEnd:function(){
varb=this._pos,c=this.options.min,d=this.options.max;
this._animateTo([Math.min(d[0],Math.max(c[0],b[0])),Math.min(d[1],Math.max(c[1],b[1]))],a.proxy(this.trigger,this,"animationEnd"),!0);
},
_getNextOffsetPos:function(a,b){
varc=Math.min(b,1/0,Math.sqrt(a[0]*a[0]+a[1]*a[1])),d=Math.abs(c/-this.options.deceleration);
return[a[0]/2*d,a[1]/2*d];
},
_getDurationFromPos:function(a){
varb=Math.sqrt(a[0]*a[0]+a[1]*a[1]),c=Math.sqrt(b/this.options.deceleration*2);
return100>c?0:c;
},
_animateBy:function(a,b,c,d,e){
varf=this._pos;
returnthis._animateTo([f[0]+a[0],f[1]+a[1]],b,c,d,e);
},
_getPointOfIntersection:function(a,b){
varc,d,e=this.options.circular,f=this.options.bounce,g=this.options.min,h=this.options.max,i=[g[0]-f[3],g[1]-f[0]],j=[h[0]+f[1],h[1]+f[2]];
returnb=[b[0],b[1]],c=b[0]-a[0],d=b[1]-a[1],e[3]||(b[0]=Math.max(i[0],b[0])),e[1]||(b[0]=Math.min(j[0],b[0])),b[1]=c?a[1]+d/c*(b[0]-a[0]):b[1],e[0]||(b[1]=Math.max(i[1],b[1])),e[2]||(b[1]=Math.min(j[1],b[1])),b[0]=d?a[0]+c/d*(b[1]-a[1]):b[0],b;
},
_isCircular:function(a,b,c,d){
returna[0]&&b[1]<c[1]||a[1]&&b[0]>d[0]||a[2]&&b[1]>d[1]||a[3]&&b[0]<c[0];
},
_animateTo:function(a,b,c,d,e){
varf=this._pos,g=this._getPointOfIntersection(f,a),h={
depaPos:[f[0],f[1]],
destPos:g,
hammerEvent:e||{}};
!c&&e&&this.trigger("release",h),this._afterReleaseProcess(h,b,c,d);
},
_afterReleaseProcess:function(c,d,e,f){
varg,h,i=this._pos,j=this.options.min,k=this.options.max,l=this.options.circular,m=c.destPos,n=this._isCircular(l,m,j,k);
this._isOutToOut(i,m,j,k)&&(m=i),h=[Math.abs(m[0]-i[0]),Math.abs(m[1]-i[1])],f=Math.min(f,1/0,this._getDurationFromPos(h));
varo=a.proxy(function(a){
this._status.animating=null,i[0]=Math.round(m[0]),i[1]=Math.round(m[1]),i=this._getCircularPos(i,j,k,l),!a&&(this._status.interrupted=!1),d&&d();
},this);
if(0===h[0]&&0===h[1])
returno(!e);
g={
duration:f,
depaPos:[i[0],i[1]],
destPos:m,
isBounce:e,
isCircular:n,
done:o};
varp=this.trigger("animationStart",g);
if(n&&!p)
thrownewError("Youcan'tstopthe'animation'eventwhen'circular'istrue.");
if(g.depaPos=i,g.startTime=(newDate()).getTime(),this._status.animating=g,p)
if(f){
varq=this._status.animating,r=this;
!functions(){
returnr._raf=null,r._frame(q)>=1?o(!0):void(r._raf=b.requestAnimationFrame(s));
}();
}else
this._triggerChange(g.destPos,!1),o(!e);
},
_frame:function(a){
varb=newDate()-a.startTime,c=this.options.easing(null,b,0,1,a.duration),d=[a.depaPos[0],a.depaPos[1]];
c=c>=1?1:c;
for(vare=0;2>e;e++)
d[e]!==a.destPos[e]&&(d[e]+=(a.destPos[e]-d[e])*c);
returnd=this._getCircularPos(d),this._triggerChange(d,!1),c;
},
_reviseOptions:function(b){
varc;
a.each(["bounce","margin","circular"],function(d,e){
c=b[e],null!=c&&(b[e]=a.isArray(c)?2===c.length?[c[0],c[1],c[0],c[1]]:[c[0],c[1],c[2],c[3]]:/string|number|boolean/.test(typeofc)?[c,c,c,c]:null);
}),a.extend(this.options,b);
},
_triggerChange:function(a,b,c){
this.trigger("change",{
pos:[a[0],a[1]],
holding:b,
hammerEvent:c||{}});
},
get:function(){
return[this._pos[0],this._pos[1]];
},
setTo:function(a,b,c){
this._grab();
vard=[this._pos[0],this._pos[1]],e=this.options.circular,f=this.options.min,g=this.options.max;
returna===d[0]&&b===d[1]?this:(a!==d[0]&&(e[3]||(a=Math.max(f[0],a)),e[1]||(a=Math.min(g[0],a))),b!==d[1]&&(e[0]||(b=Math.max(f[1],b)),e[2]||(b=Math.min(g[1],b))),c?this._animateTo([a,b],this._animationEnd,!1,c):(this._pos=this._getCircularPos([a,b]),this._triggerChange(this._pos,!1)),this);
},
setBy:function(a,b,c){
returnthis.setTo(null!=a?this._pos[0]+a:this._pos[0],null!=b?this._pos[1]+b:this._pos[1],c);
},
_isInEasing:function(b){
for(varcina.easing)
if(a.easing[c]===b)
return!~c.indexOf("Out");
return!1;
},
destroy:function(){
this.off();
for(varainthis._hammers)
this._hammers.hasOwnProperty(a)&&(this._hammers[a].destroy(),this._hammers[a]=null);
}}),b.MovableCoord.KEY="__MOVABLECOORD__";
}),eg.module("flicking",[window.jQuery,eg,eg.MovableCoord],function(a,b,c){
b.Flicking=b.Class.extend(b.Component,{
construct:function(c,d){
this._wrapper=a(c),a.extend(this.options={
effect:a.easing.linear,
hwAccelerable:b.isHWAccelerable(),
prefix:"eg-flick",
deceleration:6e-4,
horizontal:!0,
circular:!1,
previewPadding:[0,0],
threshold:40,
duration:100,
panelEffect:a.easing.easeOutQuint,
defaultIndex:0},d);
vare=this.options.previewPadding,f=window.CSS&&window.CSS.supports&&window.CSS.supports("will-change","transform");
"number"==typeofe?e=this.options.previewPadding=[e,e]:e.constructor!==Array&&(e=this.options.previewPadding=[0,0]),this._conf={
panel:{
list:[],
index:0,
no:0,
size:0,
count:0,
origCount:0,
changed:!1,
animating:!1,
minCount:e[0]+e[1]>0?5:3},
touch:{
holdPos:[0,0],
destPos:[0,0],
distance:0,
direction:null},
customEvent:{},
clickBug:b._hasClickBug(),
useLayerHack:this.options.hwAccelerable&&!f,
useHint:this.options.hwAccelerable&&f,
dirData:[]},a([["LEFT","RIGHT"],["DOWN","UP"]][+!this.options.horizontal]).each(a.proxy(function(a,c){
this._conf.dirData.push(b["DIRECTION_"+c]);
},this)),this._build(),this._bindEvents(),this._arrangePanels();
},
_build:function(){
vara,d=this._conf.panel,e=this.options,f=d.list=this._wrapper.children(),g=e.previewPadding.concat(),h=e.prefix,i=e.horizontal,j=d.count=d.origCount=f.length,k=[d.size=this._wrapper[i?"width":"height"]()-(g[0]+g[1]),"100%"];
this._wrapper.css({
padding:(i?"0"+g.reverse().join("px0"):g.join("px0"))+"px",
overflow:"hidden"}),this._getDataByDirection(k),f.addClass(h+"-panel").css({
position:"absolute",
width:k[0],
height:k[1],
top:0,
left:0}),k[a=+!i]*=j,k[a]+="px",a="width:"+k[0]+";height:"+k[1]+(i?";":";top:"+g[0]+"px;"),this._container=f.wrapAll("<divclass='"+h+"-container'style='position:relative;"+a+"'/>").parent(),this._addClonePanels()&&(j=d.count=(d.list=this._container.children()).length),this._mcInst=newc({
min:[0,0],
max:this._getDataByDirection([d.size*(j-1),0]),
margin:0,
circular:!1,
easing:e.panelEffect,
deceleration:e.deceleration}).bind(this._wrapper,{
scale:this._getDataByDirection([-1,0]),
direction:b["DIRECTION_"+(i?"HORIZONTAL":"VERTICAL")],
maximumSpeed:e.duration,
interruptable:!1}),this._setDefaultPanel(e.defaultIndex);
},
_addClonePanels:function(){
vara,b=this._conf.panel,c=b.origCount,d=b.minCount-c,e=b.list;
if(this.options.circular&&c<b.minCount){
for(a=e.clone();a.length<d;)
a=a.add(e.clone());
returnthis._container.append(a);
}
},
_movePanelPosition:function(b,c){
vard,e=this._conf.panel,f=e.list;
d=f.splice(c?0:e.count-b,b),this._conf.panel.list=a(c?a.merge(f,d):a.merge(d,f));
},
_setDefaultPanel:function(a){
varb,c=this._conf.panel,d=c.count-1;
this.options.circular?(a>0&&d>=a&&this._movePanelPosition(a,!0),this._movePanelPosition(this._getBasePositionIndex(),!1),c.no=a):a>0&&d>=a&&(c.index=a,b=[-(c.size*a),0],this._setTranslate(b),this._mcInst.setTo(Math.abs(b[0]),Math.abs(b[1])));
},
_arrangePanels:function(c,d){
vare,f=this._conf.panel,g=this._conf.touch,h=this._conf.dirData,i=this._conf.useLayerHack;
this.options.circular&&(c&&("undefined"!=typeofd&&(g.direction=h[+!Boolean(d>0)]),this._arrangePanelPosition(g.direction,d)),f.index=this._getBasePositionIndex(),e=this._getDataByDirection([f.size*f.index,0]),this._mcInst.setTo(e[0],e[1])),f.list.each(a.proxy(function(c,d){
e=this._getDataByDirection([100*c+"%",0]),a(d).css("transform",b.translate(e[0],e[1],i));
},this));
},
_setHint:function(a){
if(this._conf.useHint){
varb=a?"transform":"";
this._container.css("willChange",b),this._conf.panel.list.css("willChange",b);
}
},
_getDataByDirection:function(a){
return!this.options.horizontal&&a.reverse(),a;
},
_arrangePanelPosition:function(a,b){
varc=a===this._conf.dirData[0];
this._movePanelPosition(Math.abs(b||1),c);
},
_getBasePositionIndex:function(){
vara=this._conf.panel;
returna.index=Math.floor(a.count/2-.1);
},
_bindEvents:function(){
this._mcInst.on({
hold:a.proxy(this._holdHandler,this),
change:a.proxy(this._changeHandler,this),
release:a.proxy(this._releaseHandler,this),
animationStart:a.proxy(this._animationStartHandler,this),
animationEnd:a.proxy(this._animationEndHandler,this)});
},
_holdHandler:function(a){
this._conf.touch.holdPos=a.pos,this._conf.panel.changed=!1,this._setHint(!0),this._triggerEvent("touchStart",{
pos:a.pos});
},
_changeHandler:function(a){
varb=a.pos;
this._setPointerEvents(a),this._triggerEvent(a.holding?"touchMove":"flick",{
pos:a.pos})&&this._setTranslate([-b[+!this.options.horizontal],0]);
},
_releaseHandler:function(a){
varb=this._conf.touch,c=a.destPos,d=+!this.options.horizontal,e=b.holdPos[d],f=this._conf.panel.size;
b.distance=a.depaPos[d]-b.holdPos[d],b.direction=this._conf.dirData[+!Boolean(b.holdPos[d]<a.depaPos[d])],c[d]=Math.max(e-f,Math.min(e,c[d])),b.destPos[d]=c[d]=Math.round(c[d]/f)*f,this._triggerEvent("touchEnd",{
depaPos:a.depaPos,
destPos:a.destPos}),this._setPointerEvents();
},
_animationStartHandler:function(a){
varb=this._conf.panel,c=this._conf.touch.direction,d=this._conf.dirData,e=this._isMovable();
b.animating=!0,a.duration=this.options.duration,e&&(b.index+=c===d[0]?1:-1),a.destPos[+!this.options.horizontal]=b.size*b.index,e?(this._triggerEvent("flickStart",{
depaPos:a.depaPos,
destPos:a.destPos}),this._setPanelNo(!0),b.changed=!0):(this._conf.customEvent.restore=this._triggerEvent("beforeRestore",{
depaPos:a.depaPos,
destPos:a.destPos}))||a.stop();
},
_animationEndHandler:function(){
vara=this._conf.panel;
this._setTranslate([-a.size*a.index,0]),this.options.circular&&a.changed&&(this._arrangePanels(!0),this._setPanelNo()),this._setHint(a.animating=!1),a.changed?this._triggerEvent("flickEnd"):this._conf.customEvent.restore&&this._triggerEvent("restore");
},
_setPanelNo:function(a){
varb=this._conf.panel,c=b.origCount-1,d=this._conf.touch.direction,e=this._conf.dirData;
a&&(b.no+=d===e[0]?1:-1),b.no>c?b.no=0:b.no<0&&(b.no=c);
},
_setPointerEvents:function(a){
this._conf.clickBug&&this._container.css("pointerEvents",a&&a.holding&&a.hammerEvent.preventSystemEvent?"none":"auto");
},
_setTranslate:function(a){
this._getDataByDirection(a),this._container.css("transform",b.translate(this._getUnitValue(a[0]),this._getUnitValue(a[1]),this._conf.useLayerHack));
},
_getUnitValue:function(a){
varb=/(?:[a-z]{2,}|%)$/;
return(parseInt(a,10)||0)+(String(a).match(b)||"px");
},
_isMovable:function(){
returnMath.abs(this._conf.touch.distance)>=this.options.threshold;
},
_triggerEvent:function(b,c){
vard=this._conf.panel;
returnthis.trigger(b,c=a.extend({
eventType:b,
index:d.index,
no:d.no,
direction:this._conf.touch.direction},c));
},
_getElement:function(b,c,d){
vare,f,g,h=this._conf.panel,i=this.options.circular,j=h.index,k=b===this._conf.dirData[0],l=null;
returnd?(e=h.count,f=j):(e=h.origCount,f=h.no),g=f,k?e-1>f?f++:i&&(f=0):f>0?f--:i&&(f=e-1),g!==f&&(l=c?a(h.list[k?j+1:j-1]):f),l;
},
_movePanel:function(a,b){
varc,d=this._conf.panel,e=a===this._conf.dirData[0],f=this[e?"getNextIndex":"getPrevIndex"]();
null!=f&&(this._conf.touch.direction=a,this._setPanelNo(!0),d.index=f,c=this._getDataByDirection([d.size*(e?1:-1),0]),this._mcInst.setBy(c[0],c[1],"number"==typeofb?b:this.options.duration),this._arrangePanels(!0));
},
getIndex:function(a){
returnthis._conf.panel[a?"index":"no"];
},
getElement:function(){
varb=this._conf.panel;
returna(b.list[b.index]);
},
getNextElement:function(){
returnthis._getElement(this._conf.dirData[0],!0);
},
getNextIndex:function(a){
returnthis._getElement(this._conf.dirData[0],!1,a);
},
getAllElements:function(){
returnthis._conf.panel.list;
},
getPrevElement:function(){
returnthis._getElement(this._conf.dirData[1],!0);
},
getPrevIndex:function(a){
returnthis._getElement(this._conf.dirData[1],!1,a);
},
getTotalCount:function(a){
returnthis._conf.panel[a?"count":"origCount"];
},
isPlaying:function(){
returnthis._conf.panel.animating;
},
next:function(a){
this._movePanel(this._conf.dirData[0],a);
},
prev:function(a){
this._movePanel(this._conf.dirData[1],a);
},
moveTo:function(a,b){
varc,d,e=this._conf.panel,f=e.index,g=0;
"number"!=typeofa||a>=e.origCount||a===e.no||(this.options.circular?(c=[f,e.count-(f+1)],a>e.no?(g=a-e.no,g>c[1]&&(g=-(c[0]+1-(g-c[1])))):(g=-(e.no-a),Math.abs(g)>c[0]&&(g=c[1]+1-(Math.abs(g)-c[0]))),e.no=a,this._arrangePanels(!0,g)):(e.index=a,d=this._getDataByDirection([e.size*g,0]),this._mcInst.setTo(d[0],d[1],"number"==typeofb?b:this.options.duration)));
},
resize:function(){
vara=this._conf.panel,b=a.size=this._wrapper.width(),c=[b*(a.count-1),0];
this._container.width(c[0]),a.list.css("width",b),this._mcInst.setTo(b*a.index,0).options.max=c;
}});
}),eg.module("visible",[window.jQuery,eg],function(a,b){
b.Visible=b.Class.extend(b.Component,{
construct:function(b){
this.options={
wrapper:document,
targetClass:"check_visible",
expandSize:0},a.extend(this.options,b),this._wrapper=a(this.options.wrapper),this._wrapper=this._wrapper.length>0?this._wrapper[0]:document,this._targets=[],this._timer=null,this._supportElementsByClassName=function(){
vara,b=document.createElement("div");
returnb.getElementsByClassName?(a=b.getElementsByClassName("dummy"),b.innerHTML="<spanclass='dummy'></span>",1===a.length):!1;
}(),this.refresh();
},
refresh:function(){
returnthis._supportElementsByClassName?(this._targets=this._wrapper.getElementsByClassName(this.options.targetClass),this.refresh=function(){
returnthis;
}):this.refresh=function(){
returnthis._targets=a(this._wrapper).find("."+this.options.targetClass).each(function(){
returnthis;
}),this;
},this.refresh();
},
check:function(b){
return"undefined"==typeofb&&(b=-1),clearTimeout(this._timer),0>b?this._check():this._timer=setTimeout(a.proxy(function(){
this._check(),this._timer=null;
},this),b),this;
},
_reviseElements:function(b,c){
returnthis._reviseElements=this._supportElementsByClassName?function(){
return!0;
}:function(b,c){
returna(b).hasClass(this.options.targetClass)?!0:(b.__VISIBLE__=null,this._targets.splice(c,1),!1);
},this._reviseElements(b,c);
},
_check:function(){
vara=parseInt(this.options.expandSize,10),b=this._wrapper,c=[],d=[],e=null;
e=b.nodeType&&1===b.nodeType?b.getBoundingClientRect():{
top:0,
left:0,
bottom:window.innerHeight,
right:window.innerWidth},e.top-=a,e.left-=a,e.bottom+=a,e.right+=a;
for(varf,g,h,i,j=this._targets.length-1;f=this._targets[j];j--)
g=f.getBoundingClientRect(),this._reviseElements(f,j)&&(i=!!f.__VISIBLE__,f.__VISIBLE__=h=!(g.bottom<e.top||e.bottom<g.top||g.right<e.left||e.right<g.left),i!==h&&(h?c:d).unshift(f));
this.trigger("change",{
visible:c,
invisible:d});
},
destroy:function(){
this.off(),this._targets=[],this._wrapper=this._timer=null;
}});
}) !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f="ms"===e?"Ms"+c:d;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
}),eg.module("persist",[jQuery,window,document],function(a,b,c){
functiond(c){
!e(c.originalEvent)&&f()?a(b).trigger("persist"):g();
}
functione(a){
return!!a.persisted;
}
functionf(){
vara=b.performance;
returna&&a.navigation&&a.navigation.type===a.navigation.TYPE_BACK_FORWARD;
}
functiong(){
i.replaceState(null,c.title,j.href);
}
functionh(b){
returnnull===b?null:a.extend(!0,{},b);
}
vari=b.history,j=b.location,k="replaceState"ini,l="state"ini;
returnk&&l?(a.persist=function(a){
returna&&i.replaceState(a,c.title,j.href),h(i.state);
},a.event.special.persist={
setup:function(){
a(b).on("pageshow",d);
},
teardown:function(){
a(b).off("pageshow",d);
},
trigger:function(a){
a.state=h(i.state);
}}):a.persist=function(){
},{
isPersisted:e,
isBackForwardNavigated:f,
onPageshow:d,
reset:g,
clone:h,
persist:a.persist};
}),eg.module("rotate",[window.jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara,b,e,f=m();
return"resize"===f?(a=d.documentElement.clientWidth,e=-1===h?a<d.documentElement.clientHeight:h>a?!0:a===h?i:!1,h=a):(b=c.orientation,0===b||180===b?e=!0:(90===b||-90===b)&&(e=!1)),e;
}
functionf(){
varb=e();
l&&i!==b&&(i=b,a(c).trigger("rotate"));
}
functiong(a){
varb,e,i=m();
if("resize"===i)
c.setTimeout(function(){
f();
},0);
else{
if(b=300,"android"===k.os.name){
if(e=d.documentElement.clientWidth,"orientationchange"===a.type&&e===h)
returnc.setTimeout(function(){
g(a);
},500),!1;
h=e;
}
c.clearTimeout(j),j=c.setTimeout(function(){
f();
},b);
}
}
varh=-1,i=null,j=null,k=b.agent(),l=/android|ios/.test(k.os.name),m=function(){
vara;
returna="android"===k.os.name&&"2.1"===k.os.version?"resize":"onorientationchange"inc?"orientationchange":"resize",m=function(){
returna;
},a;
};
returna.event.special.rotate={
setup:function(){
h=d.documentElement.clientWidth,a(c).on(m(),g);
},
teardown:function(){
a(c).off(m(),g);
},
trigger:function(a){
a.isVertical=i;
}},{
orientationChange:m,
isVertical:e,
triggerRotate:f,
handler:g};
}),eg.module("scrollEnd",[jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara=A,c=b.agent(),d=c.os,e=c.browser,f=parseInt(d.version,10);
return"android"===d.name?a="chrome"===e.name?x:f>=3?y:z:/^(?:window|ios)$/.test(d.name)&&f>=8&&(a=y),a;
}
functionf(){
varb=a(c).on("scroll",j);
B===z&&a(d).on({
touchstart:g,
touchmove:h,
touchend:i}),B===x&&b.on("orientationchange",function(){
w=!0;
});
}
functiong(){
q=!0,r=!1,u=v=0;
}
functionh(){
r=!0;
}
functioni(){
q=!1,r&&k();
}
functionj(){
switch(B){
caseA:
n();
break;
casez:
k();
break;
casey:
o();
break;
casex:
w?w=!1:n();
}
}
functionk(){
l(),s=setInterval(m,100);
}
functionl(){
s&&clearInterval(s),s=null;
}
functionm(){
q||u!==c.pageYOffset||v!==c.pageXOffset?(u=c.pageYOffset,v=c.pageXOffset):(l(),n());
}
functionn(){
a(c).trigger("scrollend",{
top:c.pageYOffset,
left:c.pageXOffset});
}
functiono(){
clearTimeout(t),t=setTimeout(function(){
n();
},350);
}
functionp(){
a(d).off({
touchstart:g,
touchmove:h,
touchend:i}),a(c).off("scroll",j);
}
varq,r,s,t,u=0,v=0,w=!1,x=3,y=2,z=1,A=0,B=e();
returna.event.special.scrollend={
setup:function(){
f();
},
teardown:function(){
p();
}},{
getDeviceType:e,
CHROME:x,
TIMERBASE:y,
TOUCHBASE:z,
SCROLLBASE:A};
}),eg.module("class",[eg],function(a){
a.Class=function(a){
varb=function(){
"function"==typeofa.construct&&a.construct.apply(this,arguments);
};
returnb.prototype=a,b.prototype.constructor=b,b;
},a.Class.extend=function(a,b){
varc=function(){
a.apply(this,arguments),"function"==typeofb.construct&&b.construct.apply(this,arguments);
},d=function(){
};
d.prototype=a.prototype;
vare=newd();
for(varfinb)
b.hasOwnProperty(f)&&(e[f]=b[f]);
returne.constructor=c,c.prototype=e,c;
};
}),eg.module("component",[eg],function(a){
a.Component=a.Class({
construct:function(){
this.eventHandler={};
},
trigger:function(a,b){
b=b||{};
varc=this.eventHandler[a]||[],d=c.length>0;
if(!d)
return!0;
c=c.concat(),b.eventType=a;
vare=!1;
b.stop=function(){
e=!0;
};
varf,g,h=[b];
(g=arguments.length)>2&&(h=h.concat(Array.prototype.slice.call(arguments,2,g)));
vari;
for(f=0;i=c[f];f++)
i.apply(this,h);
return!e;
},
hasOn:function(a){
return!!this.eventHandler[a];
},
on:function(a,b){
if("undefined"==typeofb){
varc,d=a;
for(cind)
this.on(c,d[c]);
returnthis;
}
vare=this.eventHandler[a];
return"undefined"==typeofe&&(e=this.eventHandler[a]=[]),e.push(b),this;
},
off:function(a,b){
if(0===arguments.length)
returnthis.eventHandler={},this;
if("undefined"==typeofb){
if("string"==typeofa)
returnthis.eventHandler[a]=null,this;
varc=a;
for(vardinc)
c.hasOwnProperty(d)&&this.off(d,c[d]);
returnthis;
}
vare=this.eventHandler[a];
if(e)
for(varf,g=0;f=e[g];g++)
if(f===b){
e=e.splice(g,1);
break;
}
returnthis;
}});
}),eg.module("movableCoord",[window.jQuery,eg,window.Hammer],function(a,b,c){
b.MovableCoord=b.Class.extend(b.Component,{
construct:function(b){
this.options={
min:[0,0],
max:[100,100],
bounce:[10,10,10,10],
margin:[0,0,0,0],
circular:[!1,!1,!1,!1],
easing:a.easing.easeOutQuint,
deceleration:6e-4},this._reviseOptions(b),this._status={
grabOutside:!1,
curHammer:null,
moveDistance:null,
animating:null,
interrupted:!1},this._hammers={},this._pos=[this.options.min[0],this.options.min[1]],this._subOptions={},this._raf=null,this._animationEnd=a.proxy(this._animationEnd,this);
},
bind:function(c,d){
vare=a(c),f=e.data(b.MovableCoord.KEY),g={
direction:b.DIRECTION_ALL,
scale:[1,1],
thresholdAngle:45,
maximumSpeed:1/0,
interruptable:!0};
returna.extend(g,d),f?this._hammers[f].get("pan").set({
direction:g.direction}):(f=Math.round(Math.random()*(newDate()).getTime()),this._hammers[f]=this._createHammer(e.get(0),g),e.data(b.MovableCoord.KEY,f)),this;
},
_createHammer:function(b,d){
vare=newc.Manager(b,{
recognizers:[[c.Pan,{
direction:d.direction,
threshold:0}]]});
returne.on("hammer.input",a.proxy(function(a){
a.isFirst&&(this._subOptions=d,this._status.curHammer=e,this._panstart(a));
},this)).on("panstartpanmove",a.proxy(this._panmove,this)).on("panend",a.proxy(this._panend,this)),e;
},
unbind:function(c){
vard=a(c),e=d.data(b.MovableCoord.KEY);
e&&(this._hammers[e].destroy(),deletethis._hammers[e],d.data(b.MovableCoord.KEY,null));
},
_grab:function(){
this._status.animating&&(this._pos=this._getCircularPos(this._pos),this._triggerChange(this._pos,!0),this._status.animating=null,this._raf&&b.cancelAnimationFrame(this._raf),this._raf=null);
},
_getCircularPos:function(a,b,c,d){
returnb=b||this.options.min,c=c||this.options.max,d=d||this.options.circular,d[0]&&a[1]<b[1]&&(a[1]=(a[1]-b[1])%(c[1]-b[1]+1)+c[1]),d[1]&&a[0]>c[0]&&(a[0]=(a[0]-b[0])%(c[0]-b[0]+1)+b[0]),d[2]&&a[1]>c[1]&&(a[1]=(a[1]-b[1])%(c[1]-b[1]+1)+b[1]),d[3]&&a[0]<b[0]&&(a[0]=(a[0]-b[0])%(c[0]-b[0]+1)+c[0]),a[0]=+a[0].toFixed(5),a[1]=+a[1].toFixed(5),a;
},
_isOutside:function(a,b,c){
returna[0]<b[0]||a[1]<b[1]||a[0]>c[0]||a[1]>c[1];
},
_isOutToOut:function(a,b,c,d){
return(a[0]<c[0]||a[0]>d[0]||a[1]<c[1]||a[1]>d[1])&&(b[0]<c[0]||b[0]>d[0]||b[1]<c[1]||b[1]>d[1]);
},
_panstart:function(a){
if(this._subOptions.interruptable||!this._status.interrupted){
!this._subOptions.interruptable&&(this._status.interrupted=!0);
varb=this._pos;
this._grab(),this.trigger("hold",{
pos:[b[0],b[1]],
hammerEvent:a}),this._status.moveDistance=[b[0],b[1]],this._status.grabOutside=this._isOutside(b,this.options.min,this.options.max);
}
},
_panmove:function(a){
if(this._isInterrupting()&&this._status.moveDistance){
varc,d,e,f=this._pos,g=this.options.min,h=this.options.max,i=this.options.bounce,j=this.options.margin,k=this.options.easing,l=this._subOptions.direction,m=this._subOptions.scale,n=this._getDirection(a.angle),o=[j[0]+i[0],j[1]+i[1],j[2]+i[2],j[3]+i[3]],p=!1,q=this._status.curHammer.session.prevInput;
if(q?(a.offsetX=a.deltaX-q.deltaX,a.offsetY=a.deltaY-q.deltaY):a.offsetX=a.offsetY=0,n&b.DIRECTION_HORIZONTAL&&l&b.DIRECTION_HORIZONTAL&&(this._status.moveDistance[0]+=a.offsetX*m[0],p=!0),n&b.DIRECTION_VERTICAL&&l&b.DIRECTION_VERTICAL&&(this._status.moveDistance[1]+=a.offsetY*m[1],p=!0),p&&(a.srcEvent.preventDefault(),a.srcEvent.stopPropagation()),a.preventSystemEvent=p,f[0]=this._status.moveDistance[0],f[1]=this._status.moveDistance[1],f=this._getCircularPos(f,g,h),this._status.grabOutside&&!this._isOutside(f,g,h)&&(this._status.grabOutside=!1),this._status.grabOutside)
d=g[0]-o[3],e=h[0]+o[1],c=f[0],f[0]=c>e?e:d>c?d:c,d=g[1]-o[0],e=h[1]+o[2],c=f[1],f[1]=c>e?e:d>c?d:c;
else{
varr=this._isInEasing?k(null,.9999,0,1,1)/.9999:k(null,1e-4,0,1,1)/1e-4;
f[1]<g[1]?(c=(g[1]-f[1])/(o[0]*r),f[1]=g[1]-k(null,c>1?1:c,0,1,1)*o[0]):f[1]>h[1]&&(c=(f[1]-h[1])/(o[2]*r),f[1]=h[1]+k(null,c>1?1:c,0,1,1)*o[2]),f[0]<g[0]?(c=(g[0]-f[0])/(o[3]*r),f[0]=g[0]-k(null,c>1?1:c,0,1,1)*o[3]):f[0]>h[0]&&(c=(f[0]-h[0])/(o[1]*r),f[0]=h[0]+k(null,c>1?1:c,0,1,1)*o[1]);
}
this._triggerChange(f,!0,a);
}
},
_panend:function(a){
if(this._isInterrupting()&&this._status.moveDistance){
varc=this._subOptions.direction,d=this._subOptions.scale,e=Math.abs(a.velocityX),f=Math.abs(a.velocityY);
!(c&b.DIRECTION_HORIZONTAL)&&(e=0),!(c&b.DIRECTION_VERTICAL)&&(f=0),this._animateBy(this._getNextOffsetPos([e*(a.deltaX<0?-1:1)*d[0],f*(a.deltaY<0?-1:1)*d[1]],this._subOptions.maximumSpeed),this._animationEnd,!1,this._subOptions.maximumSpeed,a),this._status.moveDistance=null;
}
},
_isInterrupting:function(){
returnthis._subOptions.interruptable||this._status.interrupted;
},
_getDirection:function(a){
varc=this._subOptions.thresholdAngle;
return0>c||c>90?b.DIRECTION_NONE:(a=Math.abs(a),a>c&&180-c>a?b.DIRECTION_VERTICAL:b.DIRECTION_HORIZONTAL);
},
_animationEnd:function(){
varb=this._pos,c=this.options.min,d=this.options.max;
this._animateTo([Math.min(d[0],Math.max(c[0],b[0])),Math.min(d[1],Math.max(c[1],b[1]))],a.proxy(this.trigger,this,"animationEnd"),!0);
},
_getNextOffsetPos:function(a,b){
varc=Math.min(b,1/0,Math.sqrt(a[0]*a[0]+a[1]*a[1])),d=Math.abs(c/-this.options.deceleration);
return[a[0]/2*d,a[1]/2*d];
},
_getDurationFromPos:function(a){
varb=Math.sqrt(a[0]*a[0]+a[1]*a[1]),c=Math.sqrt(b/this.options.deceleration*2);
return100>c?0:c;
},
_animateBy:function(a,b,c,d,e){
varf=this._pos;
returnthis._animateTo([f[0]+a[0],f[1]+a[1]],b,c,d,e);
},
_getPointOfIntersection:function(a,b){
varc,d,e=this.options.circular,f=this.options.bounce,g=this.options.min,h=this.options.max,i=[g[0]-f[3],g[1]-f[0]],j=[h[0]+f[1],h[1]+f[2]];
returnb=[b[0],b[1]],c=b[0]-a[0],d=b[1]-a[1],e[3]||(b[0]=Math.max(i[0],b[0])),e[1]||(b[0]=Math.min(j[0],b[0])),b[1]=c?a[1]+d/c*(b[0]-a[0]):b[1],e[0]||(b[1]=Math.max(i[1],b[1])),e[2]||(b[1]=Math.min(j[1],b[1])),b[0]=d?a[0]+c/d*(b[1]-a[1]):b[0],b;
},
_isCircular:function(a,b,c,d){
returna[0]&&b[1]<c[1]||a[1]&&b[0]>d[0]||a[2]&&b[1]>d[1]||a[3]&&b[0]<c[0];
},
_animateTo:function(a,b,c,d,e){
varf=this._pos,g=this._getPointOfIntersection(f,a),h={
depaPos:[f[0],f[1]],
destPos:g,
hammerEvent:e||{}};
!c&&e&&this.trigger("release",h),this._afterReleaseProcess(h,b,c,d);
},
_afterReleaseProcess:function(c,d,e,f){
varg,h,i=this._pos,j=this.options.min,k=this.options.max,l=this.options.circular,m=c.destPos,n=this._isCircular(l,m,j,k);
this._isOutToOut(i,m,j,k)&&(m=i),h=[Math.abs(m[0]-i[0]),Math.abs(m[1]-i[1])],f=Math.min(f,1/0,this._getDurationFromPos(h));
varo=a.proxy(function(a){
this._status.animating=null,i[0]=Math.round(m[0]),i[1]=Math.round(m[1]),i=this._getCircularPos(i,j,k,l),!a&&(this._status.interrupted=!1),d&&d();
},this);
if(0===h[0]&&0===h[1])
returno(!e);
g={
duration:f,
depaPos:[i[0],i[1]],
destPos:m,
isBounce:e,
isCircular:n,
done:o};
varp=this.trigger("animationStart",g);
if(n&&!p)
thrownewError("Youcan'tstopthe'animation'eventwhen'circular'istrue.");
if(g.depaPos=i,g.startTime=(newDate()).getTime(),this._status.animating=g,p)
if(f){
varq=this._status.animating,r=this;
!functions(){
returnr._raf=null,r._frame(q)>=1?o(!0):void(r._raf=b.requestAnimationFrame(s));
}();
}else
this._triggerChange(g.destPos,!1),o(!e);
},
_frame:function(a){
varb=newDate()-a.startTime,c=this.options.easing(null,b,0,1,a.duration),d=[a.depaPos[0],a.depaPos[1]];
c=c>=1?1:c;
for(vare=0;2>e;e++)
d[e]!==a.destPos[e]&&(d[e]+=(a.destPos[e]-d[e])*c);
returnd=this._getCircularPos(d),this._triggerChange(d,!1),c;
},
_reviseOptions:function(b){
varc;
a.each(["bounce","margin","circular"],function(d,e){
c=b[e],null!=c&&(b[e]=a.isArray(c)?2===c.length?[c[0],c[1],c[0],c[1]]:[c[0],c[1],c[2],c[3]]:/string|number|boolean/.test(typeofc)?[c,c,c,c]:null);
}),a.extend(this.options,b);
},
_triggerChange:function(a,b,c){
this.trigger("change",{
pos:[a[0],a[1]],
holding:b,
hammerEvent:c||{}});
},
get:function(){
return[this._pos[0],this._pos[1]];
},
setTo:function(a,b,c){
this._grab();
vard=[this._pos[0],this._pos[1]],e=this.options.circular,f=this.options.min,g=this.options.max;
returna===d[0]&&b===d[1]?this:(a!==d[0]&&(e[3]||(a=Math.max(f[0],a)),e[1]||(a=Math.min(g[0],a))),b!==d[1]&&(e[0]||(b=Math.max(f[1],b)),e[2]||(b=Math.min(g[1],b))),c?this._animateTo([a,b],this._animationEnd,!1,c):(this._pos=this._getCircularPos([a,b]),this._triggerChange(this._pos,!1)),this);
},
setBy:function(a,b,c){
returnthis.setTo(null!=a?this._pos[0]+a:this._pos[0],null!=b?this._pos[1]+b:this._pos[1],c);
},
_isInEasing:function(b){
for(varcina.easing)
if(a.easing[c]===b)
return!~c.indexOf("Out");
return!1;
},
destroy:function(){
this.off();
for(varainthis._hammers)
this._hammers.hasOwnProperty(a)&&(this._hammers[a].destroy(),this._hammers[a]=null);
}}),b.MovableCoord.KEY="__MOVABLECOORD__";
}),eg.module("flicking",[window.jQuery,eg,eg.MovableCoord],function(a,b,c){
b.Flicking=b.Class.extend(b.Component,{
construct:function(c,d){
this._wrapper=a(c),a.extend(this.options={
effect:a.easing.linear,
hwAccelerable:b.isHWAccelerable(),
prefix:"eg-flick",
deceleration:6e-4,
horizontal:!0,
circular:!1,
previewPadding:[0,0],
threshold:40,
duration:100,
panelEffect:a.easing.easeOutQuint,
defaultIndex:0},d);
vare=this.options.previewPadding,f=window.CSS&&window.CSS.supports&&window.CSS.supports("will-change","transform");
"number"==typeofe?e=this.options.previewPadding=[e,e]:e.constructor!==Array&&(e=this.options.previewPadding=[0,0]),this._conf={
panel:{
list:[],
index:0,
no:0,
size:0,
count:0,
origCount:0,
changed:!1,
animating:!1,
minCount:e[0]+e[1]>0?5:3},
touch:{
holdPos:[0,0],
destPos:[0,0],
distance:0,
direction:null},
customEvent:{},
clickBug:b._hasClickBug(),
useLayerHack:this.options.hwAccelerable&&!f,
useHint:this.options.hwAccelerable&&f,
dirData:[]},a([["LEFT","RIGHT"],["DOWN","UP"]][+!this.options.horizontal]).each(a.proxy(function(a,c){
this._conf.dirData.push(b["DIRECTION_"+c]);
},this)),this._build(),this._bindEvents(),this._arrangePanels();
},
_build:function(){
vara,d=this._conf.panel,e=this.options,f=d.list=this._wrapper.children(),g=e.previewPadding.concat(),h=e.prefix,i=e.horizontal,j=d.count=d.origCount=f.length,k=[d.size=this._wrapper[i?"width":"height"]()-(g[0]+g[1]),"100%"];
this._wrapper.css({
padding:(i?"0"+g.reverse().join("px0"):g.join("px0"))+"px",
overflow:"hidden"}),this._getDataByDirection(k),f.addClass(h+"-panel").css({
position:"absolute",
width:k[0],
height:k[1],
top:0,
left:0}),k[a=+!i]*=j,k[a]+="px",a="width:"+k[0]+";height:"+k[1]+(i?";":";top:"+g[0]+"px;"),this._container=f.wrapAll("<divclass='"+h+"-container'style='position:relative;"+a+"'/>").parent(),this._addClonePanels()&&(j=d.count=(d.list=this._container.children()).length),this._mcInst=newc({
min:[0,0],
max:this._getDataByDirection([d.size*(j-1),0]),
margin:0,
circular:!1,
easing:e.panelEffect,
deceleration:e.deceleration}).bind(this._wrapper,{
scale:this._getDataByDirection([-1,0]),
direction:b["DIRECTION_"+(i?"HORIZONTAL":"VERTICAL")],
maximumSpeed:e.duration,
interruptable:!1}),this._setDefaultPanel(e.defaultIndex);
},
_addClonePanels:function(){
vara,b=this._conf.panel,c=b.origCount,d=b.minCount-c,e=b.list;
if(this.options.circular&&c<b.minCount){
for(a=e.clone();a.length<d;)
a=a.add(e.clone());
returnthis._container.append(a);
}
},
_movePanelPosition:function(b,c){
vard,e=this._conf.panel,f=e.list;
d=f.splice(c?0:e.count-b,b),this._conf.panel.list=a(c?a.merge(f,d):a.merge(d,f));
},
_setDefaultPanel:function(a){
varb,c=this._conf.panel,d=c.count-1;
this.options.circular?(a>0&&d>=a&&this._movePanelPosition(a,!0),this._movePanelPosition(this._getBasePositionIndex(),!1),c.no=a):a>0&&d>=a&&(c.index=a,b=[-(c.size*a),0],this._setTranslate(b),this._mcInst.setTo(Math.abs(b[0]),Math.abs(b[1])));
},
_arrangePanels:function(c,d){
vare,f=this._conf.panel,g=this._conf.touch,h=this._conf.dirData,i=this._conf.useLayerHack;
this.options.circular&&(c&&("undefined"!=typeofd&&(g.direction=h[+!Boolean(d>0)]),this._arrangePanelPosition(g.direction,d)),f.index=this._getBasePositionIndex(),e=this._getDataByDirection([f.size*f.index,0]),this._mcInst.setTo(e[0],e[1])),f.list.each(a.proxy(function(c,d){
e=this._getDataByDirection([100*c+"%",0]),a(d).css("transform",b.translate(e[0],e[1],i));
},this));
},
_setHint:function(a){
if(this._conf.useHint){
varb=a?"transform":"";
this._container.css("willChange",b),this._conf.panel.list.css("willChange",b);
}
},
_getDataByDirection:function(a){
return!this.options.horizontal&&a.reverse(),a;
},
_arrangePanelPosition:function(a,b){
varc=a===this._conf.dirData[0];
this._movePanelPosition(Math.abs(b||1),c);
},
_getBasePositionIndex:function(){
vara=this._conf.panel;
returna.index=Math.floor(a.count/2-.1);
},
_bindEvents:function(){
this._mcInst.on({
hold:a.proxy(this._holdHandler,this),
change:a.proxy(this._changeHandler,this),
release:a.proxy(this._releaseHandler,this),
animationStart:a.proxy(this._animationStartHandler,this),
animationEnd:a.proxy(this._animationEndHandler,this)});
},
_holdHandler:function(a){
this._conf.touch.holdPos=a.pos,this._conf.panel.changed=!1,this._setHint(!0),this._triggerEvent("touchStart",{
pos:a.pos});
},
_changeHandler:function(a){
varb=a.pos;
this._setPointerEvents(a),this._triggerEvent(a.holding?"touchMove":"flick",{
pos:a.pos})&&this._setTranslate([-b[+!this.options.horizontal],0]);
},
_releaseHandler:function(a){
varb=this._conf.touch,c=a.destPos,d=+!this.options.horizontal,e=b.holdPos[d],f=this._conf.panel.size;
b.distance=a.depaPos[d]-b.holdPos[d],b.direction=this._conf.dirData[+!Boolean(b.holdPos[d]<a.depaPos[d])],c[d]=Math.max(e-f,Math.min(e,c[d])),b.destPos[d]=c[d]=Math.round(c[d]/f)*f,this._triggerEvent("touchEnd",{
depaPos:a.depaPos,
destPos:a.destPos}),this._setPointerEvents();
},
_animationStartHandler:function(a){
varb=this._conf.panel,c=this._conf.touch.direction,d=this._conf.dirData,e=this._isMovable();
b.animating=!0,a.duration=this.options.duration,e&&(b.index+=c===d[0]?1:-1),a.destPos[+!this.options.horizontal]=b.size*b.index,e?(this._triggerEvent("flickStart",{
depaPos:a.depaPos,
destPos:a.destPos}),this._setPanelNo(!0),b.changed=!0):(this._conf.customEvent.restore=this._triggerEvent("beforeRestore",{
depaPos:a.depaPos,
destPos:a.destPos}))||a.stop();
},
_animationEndHandler:function(){
vara=this._conf.panel;
this._setTranslate([-a.size*a.index,0]),this.options.circular&&a.changed&&(this._arrangePanels(!0),this._setPanelNo()),this._setHint(a.animating=!1),a.changed?this._triggerEvent("flickEnd"):this._conf.customEvent.restore&&this._triggerEvent("restore");
},
_setPanelNo:function(a){
varb=this._conf.panel,c=b.origCount-1,d=this._conf.touch.direction,e=this._conf.dirData;
a&&(b.no+=d===e[0]?1:-1),b.no>c?b.no=0:b.no<0&&(b.no=c);
},
_setPointerEvents:function(a){
this._conf.clickBug&&this._container.css("pointerEvents",a&&a.holding&&a.hammerEvent.preventSystemEvent?"none":"auto");
},
_setTranslate:function(a){
this._getDataByDirection(a),this._container.css("transform",b.translate(this._getUnitValue(a[0]),this._getUnitValue(a[1]),this._conf.useLayerHack));
},
_getUnitValue:function(a){
varb=/(?:[a-z]{2,}|%)$/;
return(parseInt(a,10)||0)+(String(a).match(b)||"px");
},
_isMovable:function(){
returnMath.abs(this._conf.touch.distance)>=this.options.threshold;
},
_triggerEvent:function(b,c){
vard=this._conf.panel;
returnthis.trigger(b,c=a.extend({
eventType:b,
index:d.index,
no:d.no,
direction:this._conf.touch.direction},c));
},
_getElement:function(b,c,d){
vare,f,g,h=this._conf.panel,i=this.options.circular,j=h.index,k=b===this._conf.dirData[0],l=null;
returnd?(e=h.count,f=j):(e=h.origCount,f=h.no),g=f,k?e-1>f?f++:i&&(f=0):f>0?f--:i&&(f=e-1),g!==f&&(l=c?a(h.list[k?j+1:j-1]):f),l;
},
_movePanel:function(a,b){
varc,d=this._conf.panel,e=a===this._conf.dirData[0],f=this[e?"getNextIndex":"getPrevIndex"]();
null!=f&&(this._conf.touch.direction=a,this._setPanelNo(!0),d.index=f,c=this._getDataByDirection([d.size*(e?1:-1),0]),this._mcInst.setBy(c[0],c[1],"number"==typeofb?b:this.options.duration),this._arrangePanels(!0));
},
getIndex:function(a){
returnthis._conf.panel[a?"index":"no"];
},
getElement:function(){
varb=this._conf.panel;
returna(b.list[b.index]);
},
getNextElement:function(){
returnthis._getElement(this._conf.dirData[0],!0);
},
getNextIndex:function(a){
returnthis._getElement(this._conf.dirData[0],!1,a);
},
getAllElements:function(){
returnthis._conf.panel.list;
},
getPrevElement:function(){
returnthis._getElement(this._conf.dirData[1],!0);
},
getPrevIndex:function(a){
returnthis._getElement(this._conf.dirData[1],!1,a);
},
getTotalCount:function(a){
returnthis._conf.panel[a?"count":"origCount"];
},
isPlaying:function(){
returnthis._conf.panel.animating;
},
next:function(a){
this._movePanel(this._conf.dirData[0],a);
},
prev:function(a){
this._movePanel(this._conf.dirData[1],a);
},
moveTo:function(a,b){
varc,d,e=this._conf.panel,f=e.index,g=0;
"number"!=typeofa||a>=e.origCount||a===e.no||(this.options.circular?(c=[f,e.count-(f+1)],a>e.no?(g=a-e.no,g>c[1]&&(g=-(c[0]+1-(g-c[1])))):(g=-(e.no-a),Math.abs(g)>c[0]&&(g=c[1]+1-(Math.abs(g)-c[0]))),e.no=a,this._arrangePanels(!0,g)):(e.index=a,d=this._getDataByDirection([e.size*g,0]),this._mcInst.setTo(d[0],d[1],"number"==typeofb?b:this.options.duration)));
},
resize:function(){
vara=this._conf.panel,b=a.size=this._wrapper.width(),c=[b*(a.count-1),0];
this._container.width(c[0]),a.list.css("width",b),this._mcInst.setTo(b*a.index,0).options.max=c;
}});
}),eg.module("visible",[window.jQuery,eg],function(a,b){
b.Visible=b.Class.extend(b.Component,{
construct:function(b){
this.options={
wrapper:document,
targetClass:"check_visible",
expandSize:0},a.extend(this.options,b),this._wrapper=a(this.options.wrapper),this._wrapper=this._wrapper.length>0?this._wrapper[0]:document,this._targets=[],this._timer=null,this._supportElementsByClassName=function(){
vara,b=document.createElement("div");
returnb.getElementsByClassName?(a=b.getElementsByClassName("dummy"),b.innerHTML="<spanclass='dummy'></span>",1===a.length):!1;
}(),this.refresh();
},
refresh:function(){
returnthis._supportElementsByClassName?(this._targets=this._wrapper.getElementsByClassName(this.options.targetClass),this.refresh=function(){
returnthis;
}):this.refresh=function(){
returnthis._targets=a(this._wrapper).find("."+this.options.targetClass).each(function(){
returnthis;
}),this;
},this.refresh();
},
check:function(b){
return"undefined"==typeofb&&(b=-1),clearTimeout(this._timer),0>b?this._check():this._timer=setTimeout(a.proxy(function(){
this._check(),this._timer=null;
},this),b),this;
},
_reviseElements:function(b,c){
returnthis._reviseElements=this._supportElementsByClassName?function(){
return!0;
}:function(b,c){
returna(b).hasClass(this.options.targetClass)?!0:(b.__VISIBLE__=null,this._targets.splice(c,1),!1);
},this._reviseElements(b,c);
},
_check:function(){
vara=parseInt(this.options.expandSize,10),b=this._wrapper,c=[],d=[],e=null;
e=b.nodeType&&1===b.nodeType?b.getBoundingClientRect():{
top:0,
left:0,
bottom:window.innerHeight,
right:window.innerWidth},e.top-=a,e.left-=a,e.bottom+=a,e.right+=a;
for(varf,g,h,i,j=this._targets.length-1;f=this._targets[j];j--)
g=f.getBoundingClientRect(),this._reviseElements(f,j)&&(i=!!f.__VISIBLE__,f.__VISIBLE__=h=!(g.bottom<e.top||e.bottom<g.top||g.right<e.left||e.right<g.left),i!==h&&(h?c:d).unshift(f));
this.trigger("change",{
visible:c,
invisible:d});
},
destroy:function(){
this.off(),this._targets=[],this._wrapper=this._timer=null;
}});
})
742 2 !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f=("ms"===e?"Ms":e)+c;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
}),eg.module("persist",[jQuery,window,document],function(a,b,c){
functiond(c){
!e(c.originalEvent)&&f()?a(b).trigger("persist"):g();
}
functione(a){
return!!a.persisted;
}
functionf(){
vara=b.performance;
returna&&a.navigation&&a.navigation.type===a.navigation.TYPE_BACK_FORWARD;
}
functiong(){
i.replaceState(null,c.title,j.href);
}
functionh(b){
returnnull===b?null:a.extend(!0,{},b);
}
vari=b.history,j=b.location,k="replaceState"ini,l="state"ini;
returnk&&l?(a.persist=function(a){
returna&&i.replaceState(a,c.title,j.href),h(i.state);
},a.event.special.persist={
setup:function(){
a(b).on("pageshow",d);
},
teardown:function(){
a(b).off("pageshow",d);
},
trigger:function(a){
a.state=h(i.state);
}}):a.persist=function(){
},{
isPersisted:e,
isBackForwardNavigated:f,
onPageshow:d,
reset:g,
clone:h,
persist:a.persist};
}),eg.module("rotate",[window.jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara,b,e,f=m();
return"resize"===f?(a=d.documentElement.clientWidth,e=-1===h?a<d.documentElement.clientHeight:h>a?!0:a===h?i:!1,h=a):(b=c.orientation,0===b||180===b?e=!0:(90===b||-90===b)&&(e=!1)),e;
}
functionf(){
varb=e();
l&&i!==b&&(i=b,a(c).trigger("rotate"));
}
functiong(a){
varb,e,i=m();
if("resize"===i)
c.setTimeout(function(){
f();
},0);
else{
if(b=300,"android"===k.os.name){
if(e=d.documentElement.clientWidth,"orientationchange"===a.type&&e===h)
returnc.setTimeout(function(){
g(a);
},500),!1;
h=e;
}
c.clearTimeout(j),j=c.setTimeout(function(){
f();
},b);
}
}
varh=-1,i=null,j=null,k=b.agent(),l=/android|ios/.test(k.os.name),m=function(){
vara;
returna="android"===k.os.name&&"2.1"===k.os.version?"resize":"onorientationchange"inc?"orientationchange":"resize",m=function(){
returna;
},a;
};
returna.event.special.rotate={
setup:function(){
h=d.documentElement.clientWidth,a(c).on(m(),g);
},
teardown:function(){
a(c).off(m(),g);
},
trigger:function(a){
a.isVertical=i;
}},{
orientationChange:m,
isVertical:e,
triggerRotate:f,
handler:g};
}),eg.module("scrollEnd",[jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara=A,c=b.agent(),d=c.os,e=c.browser,f=parseInt(d.version,10);
return"android"===d.name?a="chrome"===e.name?x:f>=3?y:z:/^(?:window|ios)$/.test(d.name)&&f>=8&&(a=y),a;
}
functionf(){
varb=a(c).on("scroll",j);
B===z&&a(d).on({
touchstart:g,
touchmove:h,
touchend:i}),B===x&&b.on("orientationchange",function(){
w=!0;
});
}
functiong(){
q=!0,r=!1,u=v=0;
}
functionh(){
r=!0;
}
functioni(){
q=!1,r&&k();
}
functionj(){
switch(B){
caseA:
n();
break;
casez:
k();
break;
casey:
o();
break;
casex:
w?w=!1:n();
}
}
functionk(){
l(),s=setInterval(m,100);
}
functionl(){
s&&clearInterval(s),s=null;
}
functionm(){
q||u!==c.pageYOffset||v!==c.pageXOffset?(u=c.pageYOffset,v=c.pageXOffset):(l(),n());
}
functionn(){
a(c).trigger("scrollend",{
top:c.pageYOffset,
left:c.pageXOffset});
}
functiono(){
clearTimeout(t),t=setTimeout(function(){
n();
},350);
}
functionp(){
a(d).off({
touchstart:g,
touchmove:h,
touchend:i}),a(c).off("scroll",j);
}
varq,r,s,t,u=0,v=0,w=!1,x=3,y=2,z=1,A=0,B=e();
returna.event.special.scrollend={
setup:function(){
f();
},
teardown:function(){
p();
}},{
getDeviceType:e,
CHROME:x,
TIMERBASE:y,
TOUCHBASE:z,
SCROLLBASE:A};
}),eg.module("class",[eg],function(a){
a.Class=function(a){
varb=function(){
"function"==typeofa.construct&&a.construct.apply(this,arguments);
};
returnb.prototype=a,b.prototype.constructor=b,b;
},a.Class.extend=function(a,b){
varc=function(){
a.apply(this,arguments),"function"==typeofb.construct&&b.construct.apply(this,arguments);
},d=function(){
};
d.prototype=a.prototype;
vare=newd();
for(varfinb)
b.hasOwnProperty(f)&&(e[f]=b[f]);
returne.constructor=c,c.prototype=e,c;
};
}),eg.module("component",[eg],function(a){
a.Component=a.Class({
construct:function(){
this.eventHandler={};
},
trigger:function(a,b){
b=b||{};
varc=this.eventHandler[a]||[],d=c.length>0;
if(!d)
return!0;
c=c.concat(),b.eventType=a;
vare=!1;
b.stop=function(){
e=!0;
};
varf,g,h=[b];
(g=arguments.length)>2&&(h=h.concat(Array.prototype.slice.call(arguments,2,g)));
vari;
for(f=0;i=c[f];f++)
i.apply(this,h);
return!e;
},
hasOn:function(a){
return!!this.eventHandler[a];
},
on:function(a,b){
if("undefined"==typeofb){
varc,d=a;
for(cind)
this.on(c,d[c]);
returnthis;
}
vare=this.eventHandler[a];
return"undefined"==typeofe&&(e=this.eventHandler[a]=[]),e.push(b),this;
},
off:function(a,b){
if(0===arguments.length)
returnthis.eventHandler={},this;
if("undefined"==typeofb){
if("string"==typeofa)
returnthis.eventHandler[a]=null,this;
varc=a;
for(vardinc)
c.hasOwnProperty(d)&&this.off(d,c[d]);
returnthis;
}
vare=this.eventHandler[a];
if(e)
for(varf,g=0;f=e[g];g++)
if(f===b){
e=e.splice(g,1);
break;
}
returnthis;
}});
}),eg.module("movableCoord",[window.jQuery,eg,window.Hammer],function(a,b,c){
b.MovableCoord=b.Class.extend(b.Component,{
construct:function(b){
this.options={
min:[0,0],
max:[100,100],
bounce:[10,10,10,10],
margin:[0,0,0,0],
circular:[!1,!1,!1,!1],
easing:a.easing.easeOutQuint,
deceleration:6e-4},this._reviseOptions(b),this._status={
grabOutside:!1,
curHammer:null,
moveDistance:null,
animating:null,
interrupted:!1},this._hammers={},this._pos=[this.options.min[0],this.options.min[1]],this._subOptions={},this._raf=null,this._animationEnd=a.proxy(this._animationEnd,this);
},
bind:function(c,d){
vare=a(c),f=e.data(b.MovableCoord.KEY),g={
direction:b.DIRECTION_ALL,
scale:[1,1],
thresholdAngle:45,
maximumSpeed:1/0,
interruptable:!0};
returna.extend(g,d),f?this._hammers[f].get("pan").set({
direction:g.direction}):(f=Math.round(Math.random()*(newDate()).getTime()),this._hammers[f]=this._createHammer(e.get(0),g),e.data(b.MovableCoord.KEY,f)),this;
},
_createHammer:function(b,d){
vare=newc.Manager(b,{
recognizers:[[c.Pan,{
direction:d.direction,
threshold:0}]]});
returne.on("hammer.input",a.proxy(function(a){
a.isFirst&&(this._subOptions=d,this._status.curHammer=e,this._panstart(a));
},this)).on("panstartpanmove",a.proxy(this._panmove,this)).on("panend",a.proxy(this._panend,this)),e;
},
unbind:function(c){
vard=a(c),e=d.data(b.MovableCoord.KEY);
e&&(this._hammers[e].destroy(),deletethis._hammers[e],d.data(b.MovableCoord.KEY,null));
},
_grab:function(){
this._status.animating&&(this._pos=this._getCircularPos(this._pos),this._triggerChange(this._pos,!0),this._status.animating=null,this._raf&&b.cancelAnimationFrame(this._raf),this._raf=null);
},
_getCircularPos:function(a,b,c,d){
returnb=b||this.options.min,c=c||this.options.max,d=d||this.options.circular,d[0]&&a[1]<b[1]&&(a[1]=(a[1]-b[1])%(c[1]-b[1]+1)+c[1]),d[1]&&a[0]>c[0]&&(a[0]=(a[0]-b[0])%(c[0]-b[0]+1)+b[0]),d[2]&&a[1]>c[1]&&(a[1]=(a[1]-b[1])%(c[1]-b[1]+1)+b[1]),d[3]&&a[0]<b[0]&&(a[0]=(a[0]-b[0])%(c[0]-b[0]+1)+c[0]),a[0]=+a[0].toFixed(5),a[1]=+a[1].toFixed(5),a;
},
_isOutside:function(a,b,c){
returna[0]<b[0]||a[1]<b[1]||a[0]>c[0]||a[1]>c[1];
},
_isOutToOut:function(a,b,c,d){
return(a[0]<c[0]||a[0]>d[0]||a[1]<c[1]||a[1]>d[1])&&(b[0]<c[0]||b[0]>d[0]||b[1]<c[1]||b[1]>d[1]);
},
_panstart:function(a){
if(this._subOptions.interruptable||!this._status.interrupted){
!this._subOptions.interruptable&&(this._status.interrupted=!0);
varb=this._pos;
this._grab(),this.trigger("hold",{
pos:[b[0],b[1]],
hammerEvent:a}),this._status.moveDistance=[b[0],b[1]],this._status.grabOutside=this._isOutside(b,this.options.min,this.options.max);
}
},
_panmove:function(a){
if(this._isInterrupting()&&this._status.moveDistance){
varc,d,e,f=this._pos,g=this.options.min,h=this.options.max,i=this.options.bounce,j=this.options.margin,k=this.options.easing,l=this._subOptions.direction,m=this._subOptions.scale,n=this._getDirection(a.angle),o=[j[0]+i[0],j[1]+i[1],j[2]+i[2],j[3]+i[3]],p=!1,q=this._status.curHammer.session.prevInput;
if(q?(a.offsetX=a.deltaX-q.deltaX,a.offsetY=a.deltaY-q.deltaY):a.offsetX=a.offsetY=0,n&b.DIRECTION_HORIZONTAL&&l&b.DIRECTION_HORIZONTAL&&(this._status.moveDistance[0]+=a.offsetX*m[0],p=!0),n&b.DIRECTION_VERTICAL&&l&b.DIRECTION_VERTICAL&&(this._status.moveDistance[1]+=a.offsetY*m[1],p=!0),p&&(a.srcEvent.preventDefault(),a.srcEvent.stopPropagation()),a.preventSystemEvent=p,f[0]=this._status.moveDistance[0],f[1]=this._status.moveDistance[1],f=this._getCircularPos(f,g,h),this._status.grabOutside&&!this._isOutside(f,g,h)&&(this._status.grabOutside=!1),this._status.grabOutside)
d=g[0]-o[3],e=h[0]+o[1],c=f[0],f[0]=c>e?e:d>c?d:c,d=g[1]-o[0],e=h[1]+o[2],c=f[1],f[1]=c>e?e:d>c?d:c;
else{
varr=this._isInEasing?k(null,.9999,0,1,1)/.9999:k(null,1e-4,0,1,1)/1e-4;
f[1]<g[1]?(c=(g[1]-f[1])/(o[0]*r),f[1]=g[1]-k(null,c>1?1:c,0,1,1)*o[0]):f[1]>h[1]&&(c=(f[1]-h[1])/(o[2]*r),f[1]=h[1]+k(null,c>1?1:c,0,1,1)*o[2]),f[0]<g[0]?(c=(g[0]-f[0])/(o[3]*r),f[0]=g[0]-k(null,c>1?1:c,0,1,1)*o[3]):f[0]>h[0]&&(c=(f[0]-h[0])/(o[1]*r),f[0]=h[0]+k(null,c>1?1:c,0,1,1)*o[1]);
}
this._triggerChange(f,!0,a);
}
},
_panend:function(a){
if(this._isInterrupting()&&this._status.moveDistance){
varc=this._subOptions.direction,d=this._subOptions.scale,e=Math.abs(a.velocityX),f=Math.abs(a.velocityY);
!(c&b.DIRECTION_HORIZONTAL)&&(e=0),!(c&b.DIRECTION_VERTICAL)&&(f=0),this._animateBy(this._getNextOffsetPos([e*(a.deltaX<0?-1:1)*d[0],f*(a.deltaY<0?-1:1)*d[1]],this._subOptions.maximumSpeed),this._animationEnd,!1,this._subOptions.maximumSpeed,a),this._status.moveDistance=null;
}
},
_isInterrupting:function(){
returnthis._subOptions.interruptable||this._status.interrupted;
},
_getDirection:function(a){
varc=this._subOptions.thresholdAngle;
return0>c||c>90?b.DIRECTION_NONE:(a=Math.abs(a),a>c&&180-c>a?b.DIRECTION_VERTICAL:b.DIRECTION_HORIZONTAL);
},
_animationEnd:function(){
varb=this._pos,c=this.options.min,d=this.options.max;
this._animateTo([Math.min(d[0],Math.max(c[0],b[0])),Math.min(d[1],Math.max(c[1],b[1]))],a.proxy(this.trigger,this,"animationEnd"),!0);
},
_getNextOffsetPos:function(a,b){
varc=Math.min(b,1/0,Math.sqrt(a[0]*a[0]+a[1]*a[1])),d=Math.abs(c/-this.options.deceleration);
return[a[0]/2*d,a[1]/2*d];
},
_getDurationFromPos:function(a){
varb=Math.sqrt(a[0]*a[0]+a[1]*a[1]),c=Math.sqrt(b/this.options.deceleration*2);
return100>c?0:c;
},
_animateBy:function(a,b,c,d,e){
varf=this._pos;
returnthis._animateTo([f[0]+a[0],f[1]+a[1]],b,c,d,e);
},
_getPointOfIntersection:function(a,b){
varc,d,e=this.options.circular,f=this.options.bounce,g=this.options.min,h=this.options.max,i=[g[0]-f[3],g[1]-f[0]],j=[h[0]+f[1],h[1]+f[2]];
returnb=[b[0],b[1]],c=b[0]-a[0],d=b[1]-a[1],e[3]||(b[0]=Math.max(i[0],b[0])),e[1]||(b[0]=Math.min(j[0],b[0])),b[1]=c?a[1]+d/c*(b[0]-a[0]):b[1],e[0]||(b[1]=Math.max(i[1],b[1])),e[2]||(b[1]=Math.min(j[1],b[1])),b[0]=d?a[0]+c/d*(b[1]-a[1]):b[0],b;
},
_isCircular:function(a,b,c,d){
returna[0]&&b[1]<c[1]||a[1]&&b[0]>d[0]||a[2]&&b[1]>d[1]||a[3]&&b[0]<c[0];
},
_animateTo:function(a,b,c,d,e){
varf=this._pos,g=this._getPointOfIntersection(f,a),h={
depaPos:[f[0],f[1]],
destPos:g,
hammerEvent:e||{}};
!c&&e&&this.trigger("release",h),this._afterReleaseProcess(h,b,c,d);
},
_afterReleaseProcess:function(c,d,e,f){
varg,h,i=this._pos,j=this.options.min,k=this.options.max,l=this.options.circular,m=c.destPos,n=this._isCircular(l,m,j,k);
this._isOutToOut(i,m,j,k)&&(m=i),h=[Math.abs(m[0]-i[0]),Math.abs(m[1]-i[1])],f=Math.min(f,1/0,this._getDurationFromPos(h));
varo=a.proxy(function(a){
this._status.animating=null,i[0]=Math.round(m[0]),i[1]=Math.round(m[1]),i=this._getCircularPos(i,j,k,l),!a&&(this._status.interrupted=!1),d&&d();
},this);
if(0===h[0]&&0===h[1])
returno(!e);
g={
duration:f,
depaPos:[i[0],i[1]],
destPos:m,
isBounce:e,
isCircular:n,
done:o};
varp=this.trigger("animationStart",g);
if(n&&!p)
thrownewError("Youcan'tstopthe'animation'eventwhen'circular'istrue.");
if(g.depaPos=i,g.startTime=(newDate()).getTime(),this._status.animating=g,p)
if(f){
varq=this._status.animating,r=this;
!functions(){
returnr._raf=null,r._frame(q)>=1?o(!0):void(r._raf=b.requestAnimationFrame(s));
}();
}else
this._triggerChange(g.destPos,!1),o(!e);
},
_frame:function(a){
varb=newDate()-a.startTime,c=this.options.easing(null,b,0,1,a.duration),d=[a.depaPos[0],a.depaPos[1]];
c=c>=1?1:c;
for(vare=0;2>e;e++)
d[e]!==a.destPos[e]&&(d[e]+=(a.destPos[e]-d[e])*c);
returnd=this._getCircularPos(d),this._triggerChange(d,!1),c;
},
_reviseOptions:function(b){
varc;
a.each(["bounce","margin","circular"],function(d,e){
c=b[e],null!=c&&(b[e]=a.isArray(c)?2===c.length?[c[0],c[1],c[0],c[1]]:[c[0],c[1],c[2],c[3]]:/string|number|boolean/.test(typeofc)?[c,c,c,c]:null);
}),a.extend(this.options,b);
},
_triggerChange:function(a,b,c){
this.trigger("change",{
pos:[a[0],a[1]],
holding:b,
hammerEvent:c||{}});
},
get:function(){
return[this._pos[0],this._pos[1]];
},
setTo:function(a,b,c){
this._grab();
vard=[this._pos[0],this._pos[1]],e=this.options.circular,f=this.options.min,g=this.options.max;
returna===d[0]&&b===d[1]?this:(a!==d[0]&&(e[3]||(a=Math.max(f[0],a)),e[1]||(a=Math.min(g[0],a))),b!==d[1]&&(e[0]||(b=Math.max(f[1],b)),e[2]||(b=Math.min(g[1],b))),c?this._animateTo([a,b],this._animationEnd,!1,c):(this._pos=this._getCircularPos([a,b]),this._triggerChange(this._pos,!1)),this);
},
setBy:function(a,b,c){
returnthis.setTo(null!=a?this._pos[0]+a:this._pos[0],null!=b?this._pos[1]+b:this._pos[1],c);
},
_isInEasing:function(b){
for(varcina.easing)
if(a.easing[c]===b)
return!~c.indexOf("Out");
return!1;
},
destroy:function(){
this.off();
for(varainthis._hammers)
this._hammers.hasOwnProperty(a)&&(this._hammers[a].destroy(),this._hammers[a]=null);
}}),b.MovableCoord.KEY="__MOVABLECOORD__";
}),eg.module("flicking",[window.jQuery,eg,eg.MovableCoord],function(a,b,c){
b.Flicking=b.Class.extend(b.Component,{
construct:function(c,d){
this._wrapper=a(c),a.extend(this.options={
effect:a.easing.linear,
hwAccelerable:b.isHWAccelerable(),
prefix:"eg-flick",
deceleration:6e-4,
horizontal:!0,
circular:!1,
previewPadding:[0,0],
threshold:40,
duration:100,
panelEffect:a.easing.easeOutQuint,
defaultIndex:0},d);
vare=this.options.previewPadding,f=window.CSS&&window.CSS.supports&&window.CSS.supports("will-change","transform");
"number"==typeofe?e=this.options.previewPadding=[e,e]:e.constructor!==Array&&(e=this.options.previewPadding=[0,0]),this._conf={
panel:{
list:[],
index:0,
no:0,
size:0,
count:0,
origCount:0,
changed:!1,
animating:!1,
minCount:e[0]+e[1]>0?5:3},
touch:{
holdPos:[0,0],
destPos:[0,0],
distance:0,
direction:null},
customEvent:{},
clickBug:b._hasClickBug(),
useLayerHack:this.options.hwAccelerable&&!f,
useHint:this.options.hwAccelerable&&f,
dirData:[]},a([["LEFT","RIGHT"],["DOWN","UP"]][+!this.options.horizontal]).each(a.proxy(function(a,c){
this._conf.dirData.push(b["DIRECTION_"+c]);
},this)),this._build(),this._bindEvents(),this._arrangePanels();
},
_build:function(){
vara,d=this._conf.panel,e=this.options,f=d.list=this._wrapper.children(),g=e.previewPadding.concat(),h=e.prefix,i=e.horizontal,j=d.count=d.origCount=f.length,k=[d.size=this._wrapper[i?"width":"height"]()-(g[0]+g[1]),"100%"];
this._wrapper.css({
padding:(i?"0"+g.reverse().join("px0"):g.join("px0"))+"px",
overflow:"hidden"}),this._getDataByDirection(k),f.addClass(h+"-panel").css({
position:"absolute",
width:k[0],
height:k[1],
top:0,
left:0}),k[a=+!i]*=j,k[a]+="px",a="width:"+k[0]+";height:"+k[1]+(i?";":";top:"+g[0]+"px;"),this._container=f.wrapAll("<divclass='"+h+"-container'style='position:relative;"+a+"'/>").parent(),this._addClonePanels()&&(j=d.count=(d.list=this._container.children()).length),this._mcInst=newc({
min:[0,0],
max:this._getDataByDirection([d.size*(j-1),0]),
margin:0,
circular:!1,
easing:e.panelEffect,
deceleration:e.deceleration}).bind(this._wrapper,{
scale:this._getDataByDirection([-1,0]),
direction:b["DIRECTION_"+(i?"HORIZONTAL":"VERTICAL")],
maximumSpeed:e.duration,
interruptable:!1}),this._setDefaultPanel(e.defaultIndex);
},
_addClonePanels:function(){
vara,b=this._conf.panel,c=b.origCount,d=b.minCount-c,e=b.list;
if(this.options.circular&&c<b.minCount){
for(a=e.clone();a.length<d;)
a=a.add(e.clone());
returnthis._container.append(a);
}
},
_movePanelPosition:function(b,c){
vard,e=this._conf.panel,f=e.list;
d=f.splice(c?0:e.count-b,b),this._conf.panel.list=a(c?a.merge(f,d):a.merge(d,f));
},
_setDefaultPanel:function(a){
varb,c=this._conf.panel,d=c.count-1;
this.options.circular?(a>0&&d>=a&&this._movePanelPosition(a,!0),this._movePanelPosition(this._getBasePositionIndex(),!1),c.no=a):a>0&&d>=a&&(c.index=a,b=[-(c.size*a),0],this._setTranslate(b),this._mcInst.setTo(Math.abs(b[0]),Math.abs(b[1])));
},
_arrangePanels:function(c,d){
vare,f=this._conf.panel,g=this._conf.touch,h=this._conf.dirData,i=this._conf.useLayerHack;
this.options.circular&&(c&&("undefined"!=typeofd&&(g.direction=h[+!Boolean(d>0)]),this._arrangePanelPosition(g.direction,d)),f.index=this._getBasePositionIndex(),e=this._getDataByDirection([f.size*f.index,0]),this._mcInst.setTo(e[0],e[1])),f.list.each(a.proxy(function(c,d){
e=this._getDataByDirection([100*c+"%",0]),a(d).css("transform",b.translate(e[0],e[1],i));
},this));
},
_setHint:function(a){
if(this._conf.useHint){
varb=a?"transform":"";
this._container.css("willChange",b),this._conf.panel.list.css("willChange",b);
}
},
_getDataByDirection:function(a){
return!this.options.horizontal&&a.reverse(),a;
},
_arrangePanelPosition:function(a,b){
varc=a===this._conf.dirData[0];
this._movePanelPosition(Math.abs(b||1),c);
},
_getBasePositionIndex:function(){
vara=this._conf.panel;
returna.index=Math.floor(a.count/2-.1);
},
_bindEvents:function(){
this._mcInst.on({
hold:a.proxy(this._holdHandler,this),
change:a.proxy(this._changeHandler,this),
release:a.proxy(this._releaseHandler,this),
animationStart:a.proxy(this._animationStartHandler,this),
animationEnd:a.proxy(this._animationEndHandler,this)});
},
_holdHandler:function(a){
this._conf.touch.holdPos=a.pos,this._conf.panel.changed=!1,this._setHint(!0),this._triggerEvent("touchStart",{
pos:a.pos});
},
_changeHandler:function(a){
varb=a.pos;
this._setPointerEvents(a),this._triggerEvent(a.holding?"touchMove":"flick",{
pos:a.pos})&&this._setTranslate([-b[+!this.options.horizontal],0]);
},
_releaseHandler:function(a){
varb=this._conf.touch,c=a.destPos,d=+!this.options.horizontal,e=b.holdPos[d],f=this._conf.panel.size;
b.distance=a.depaPos[d]-b.holdPos[d],b.direction=this._conf.dirData[+!Boolean(b.holdPos[d]<a.depaPos[d])],c[d]=Math.max(e-f,Math.min(e,c[d])),b.destPos[d]=c[d]=Math.round(c[d]/f)*f,this._triggerEvent("touchEnd",{
depaPos:a.depaPos,
destPos:a.destPos}),this._setPointerEvents();
},
_animationStartHandler:function(a){
varb=this._conf.panel,c=this._conf.touch.direction,d=this._conf.dirData,e=this._isMovable();
b.animating=!0,a.duration=this.options.duration,e&&(b.index+=c===d[0]?1:-1),a.destPos[+!this.options.horizontal]=b.size*b.index,e?(this._triggerEvent("flickStart",{
depaPos:a.depaPos,
destPos:a.destPos}),this._setPanelNo(!0),b.changed=!0):(this._conf.customEvent.restore=this._triggerEvent("beforeRestore",{
depaPos:a.depaPos,
destPos:a.destPos}))||a.stop();
},
_animationEndHandler:function(){
vara=this._conf.panel;
this._setTranslate([-a.size*a.index,0]),this.options.circular&&a.changed&&(this._arrangePanels(!0),this._setPanelNo()),this._setHint(a.animating=!1),a.changed?this._triggerEvent("flickEnd"):this._conf.customEvent.restore&&this._triggerEvent("restore");
},
_setPanelNo:function(a){
varb=this._conf.panel,c=b.origCount-1,d=this._conf.touch.direction,e=this._conf.dirData;
a&&(b.no+=d===e[0]?1:-1),b.no>c?b.no=0:b.no<0&&(b.no=c);
},
_setPointerEvents:function(a){
this._conf.clickBug&&this._container.css("pointerEvents",a&&a.holding&&a.hammerEvent.preventSystemEvent?"none":"auto");
},
_setTranslate:function(a){
this._getDataByDirection(a),this._container.css("transform",b.translate(this._getUnitValue(a[0]),this._getUnitValue(a[1]),this._conf.useLayerHack));
},
_getUnitValue:function(a){
varb=/(?:[a-z]{2,}|%)$/;
return(parseInt(a,10)||0)+(String(a).match(b)||"px");
},
_isMovable:function(){
returnMath.abs(this._conf.touch.distance)>=this.options.threshold;
},
_triggerEvent:function(b,c){
vard=this._conf.panel;
returnthis.trigger(b,c=a.extend({
eventType:b,
index:d.index,
no:d.no,
direction:this._conf.touch.direction},c));
},
_getElement:function(b,c,d){
vare,f,g,h=this._conf.panel,i=this.options.circular,j=h.index,k=b===this._conf.dirData[0],l=null;
returnd?(e=h.count,f=j):(e=h.origCount,f=h.no),g=f,k?e-1>f?f++:i&&(f=0):f>0?f--:i&&(f=e-1),g!==f&&(l=c?a(h.list[k?j+1:j-1]):f),l;
},
_movePanel:function(a,b){
varc,d=this._conf.panel,e=a===this._conf.dirData[0],f=this[e?"getNextIndex":"getPrevIndex"]();
null!=f&&(this._conf.touch.direction=a,this._setPanelNo(!0),d.index=f,c=this._getDataByDirection([d.size*(e?1:-1),0]),this._mcInst.setBy(c[0],c[1],"number"==typeofb?b:this.options.duration),this._arrangePanels(!0));
},
getIndex:function(a){
returnthis._conf.panel[a?"index":"no"];
},
getElement:function(){
varb=this._conf.panel;
returna(b.list[b.index]);
},
getNextElement:function(){
returnthis._getElement(this._conf.dirData[0],!0);
},
getNextIndex:function(a){
returnthis._getElement(this._conf.dirData[0],!1,a);
},
getAllElements:function(){
returnthis._conf.panel.list;
},
getPrevElement:function(){
returnthis._getElement(this._conf.dirData[1],!0);
},
getPrevIndex:function(a){
returnthis._getElement(this._conf.dirData[1],!1,a);
},
getTotalCount:function(a){
returnthis._conf.panel[a?"count":"origCount"];
},
isPlaying:function(){
returnthis._conf.panel.animating;
},
next:function(a){
this._movePanel(this._conf.dirData[0],a);
},
prev:function(a){
this._movePanel(this._conf.dirData[1],a);
},
moveTo:function(a,b){
varc,d,e=this._conf.panel,f=e.index,g=0;
"number"!=typeofa||a>=e.origCount||a===e.no||(this.options.circular?(c=[f,e.count-(f+1)],a>e.no?(g=a-e.no,g>c[1]&&(g=-(c[0]+1-(g-c[1])))):(g=-(e.no-a),Math.abs(g)>c[0]&&(g=c[1]+1-(Math.abs(g)-c[0]))),e.no=a,this._arrangePanels(!0,g)):(e.index=a,d=this._getDataByDirection([e.size*g,0]),this._mcInst.setTo(d[0],d[1],"number"==typeofb?b:this.options.duration)));
},
resize:function(){
vara=this._conf.panel,b=a.size=this._wrapper.width(),c=[b*(a.count-1),0];
this._container.width(c[0]),a.list.css("width",b),this._mcInst.setTo(b*a.index,0).options.max=c;
}});
}) !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f="ms"===e?"Ms"+c:d;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
}),eg.module("persist",[jQuery,window,document],function(a,b,c){
functiond(c){
!e(c.originalEvent)&&f()?a(b).trigger("persist"):g();
}
functione(a){
return!!a.persisted;
}
functionf(){
vara=b.performance;
returna&&a.navigation&&a.navigation.type===a.navigation.TYPE_BACK_FORWARD;
}
functiong(){
i.replaceState(null,c.title,j.href);
}
functionh(b){
returnnull===b?null:a.extend(!0,{},b);
}
vari=b.history,j=b.location,k="replaceState"ini,l="state"ini;
returnk&&l?(a.persist=function(a){
returna&&i.replaceState(a,c.title,j.href),h(i.state);
},a.event.special.persist={
setup:function(){
a(b).on("pageshow",d);
},
teardown:function(){
a(b).off("pageshow",d);
},
trigger:function(a){
a.state=h(i.state);
}}):a.persist=function(){
},{
isPersisted:e,
isBackForwardNavigated:f,
onPageshow:d,
reset:g,
clone:h,
persist:a.persist};
}),eg.module("rotate",[window.jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara,b,e,f=m();
return"resize"===f?(a=d.documentElement.clientWidth,e=-1===h?a<d.documentElement.clientHeight:h>a?!0:a===h?i:!1,h=a):(b=c.orientation,0===b||180===b?e=!0:(90===b||-90===b)&&(e=!1)),e;
}
functionf(){
varb=e();
l&&i!==b&&(i=b,a(c).trigger("rotate"));
}
functiong(a){
varb,e,i=m();
if("resize"===i)
c.setTimeout(function(){
f();
},0);
else{
if(b=300,"android"===k.os.name){
if(e=d.documentElement.clientWidth,"orientationchange"===a.type&&e===h)
returnc.setTimeout(function(){
g(a);
},500),!1;
h=e;
}
c.clearTimeout(j),j=c.setTimeout(function(){
f();
},b);
}
}
varh=-1,i=null,j=null,k=b.agent(),l=/android|ios/.test(k.os.name),m=function(){
vara;
returna="android"===k.os.name&&"2.1"===k.os.version?"resize":"onorientationchange"inc?"orientationchange":"resize",m=function(){
returna;
},a;
};
returna.event.special.rotate={
setup:function(){
h=d.documentElement.clientWidth,a(c).on(m(),g);
},
teardown:function(){
a(c).off(m(),g);
},
trigger:function(a){
a.isVertical=i;
}},{
orientationChange:m,
isVertical:e,
triggerRotate:f,
handler:g};
}),eg.module("scrollEnd",[jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara=A,c=b.agent(),d=c.os,e=c.browser,f=parseInt(d.version,10);
return"android"===d.name?a="chrome"===e.name?x:f>=3?y:z:/^(?:window|ios)$/.test(d.name)&&f>=8&&(a=y),a;
}
functionf(){
varb=a(c).on("scroll",j);
B===z&&a(d).on({
touchstart:g,
touchmove:h,
touchend:i}),B===x&&b.on("orientationchange",function(){
w=!0;
});
}
functiong(){
q=!0,r=!1,u=v=0;
}
functionh(){
r=!0;
}
functioni(){
q=!1,r&&k();
}
functionj(){
switch(B){
caseA:
n();
break;
casez:
k();
break;
casey:
o();
break;
casex:
w?w=!1:n();
}
}
functionk(){
l(),s=setInterval(m,100);
}
functionl(){
s&&clearInterval(s),s=null;
}
functionm(){
q||u!==c.pageYOffset||v!==c.pageXOffset?(u=c.pageYOffset,v=c.pageXOffset):(l(),n());
}
functionn(){
a(c).trigger("scrollend",{
top:c.pageYOffset,
left:c.pageXOffset});
}
functiono(){
clearTimeout(t),t=setTimeout(function(){
n();
},350);
}
functionp(){
a(d).off({
touchstart:g,
touchmove:h,
touchend:i}),a(c).off("scroll",j);
}
varq,r,s,t,u=0,v=0,w=!1,x=3,y=2,z=1,A=0,B=e();
returna.event.special.scrollend={
setup:function(){
f();
},
teardown:function(){
p();
}},{
getDeviceType:e,
CHROME:x,
TIMERBASE:y,
TOUCHBASE:z,
SCROLLBASE:A};
}),eg.module("class",[eg],function(a){
a.Class=function(a){
varb=function(){
"function"==typeofa.construct&&a.construct.apply(this,arguments);
};
returnb.prototype=a,b.prototype.constructor=b,b;
},a.Class.extend=function(a,b){
varc=function(){
a.apply(this,arguments),"function"==typeofb.construct&&b.construct.apply(this,arguments);
},d=function(){
};
d.prototype=a.prototype;
vare=newd();
for(varfinb)
b.hasOwnProperty(f)&&(e[f]=b[f]);
returne.constructor=c,c.prototype=e,c;
};
}),eg.module("component",[eg],function(a){
a.Component=a.Class({
construct:function(){
this.eventHandler={};
},
trigger:function(a,b){
b=b||{};
varc=this.eventHandler[a]||[],d=c.length>0;
if(!d)
return!0;
c=c.concat(),b.eventType=a;
vare=!1;
b.stop=function(){
e=!0;
};
varf,g,h=[b];
(g=arguments.length)>2&&(h=h.concat(Array.prototype.slice.call(arguments,2,g)));
vari;
for(f=0;i=c[f];f++)
i.apply(this,h);
return!e;
},
hasOn:function(a){
return!!this.eventHandler[a];
},
on:function(a,b){
if("undefined"==typeofb){
varc,d=a;
for(cind)
this.on(c,d[c]);
returnthis;
}
vare=this.eventHandler[a];
return"undefined"==typeofe&&(e=this.eventHandler[a]=[]),e.push(b),this;
},
off:function(a,b){
if(0===arguments.length)
returnthis.eventHandler={},this;
if("undefined"==typeofb){
if("string"==typeofa)
returnthis.eventHandler[a]=null,this;
varc=a;
for(vardinc)
c.hasOwnProperty(d)&&this.off(d,c[d]);
returnthis;
}
vare=this.eventHandler[a];
if(e)
for(varf,g=0;f=e[g];g++)
if(f===b){
e=e.splice(g,1);
break;
}
returnthis;
}});
}),eg.module("movableCoord",[window.jQuery,eg,window.Hammer],function(a,b,c){
b.MovableCoord=b.Class.extend(b.Component,{
construct:function(b){
this.options={
min:[0,0],
max:[100,100],
bounce:[10,10,10,10],
margin:[0,0,0,0],
circular:[!1,!1,!1,!1],
easing:a.easing.easeOutQuint,
deceleration:6e-4},this._reviseOptions(b),this._status={
grabOutside:!1,
curHammer:null,
moveDistance:null,
animating:null,
interrupted:!1},this._hammers={},this._pos=[this.options.min[0],this.options.min[1]],this._subOptions={},this._raf=null,this._animationEnd=a.proxy(this._animationEnd,this);
},
bind:function(c,d){
vare=a(c),f=e.data(b.MovableCoord.KEY),g={
direction:b.DIRECTION_ALL,
scale:[1,1],
thresholdAngle:45,
maximumSpeed:1/0,
interruptable:!0};
returna.extend(g,d),f?this._hammers[f].get("pan").set({
direction:g.direction}):(f=Math.round(Math.random()*(newDate()).getTime()),this._hammers[f]=this._createHammer(e.get(0),g),e.data(b.MovableCoord.KEY,f)),this;
},
_createHammer:function(b,d){
vare=newc.Manager(b,{
recognizers:[[c.Pan,{
direction:d.direction,
threshold:0}]]});
returne.on("hammer.input",a.proxy(function(a){
a.isFirst&&(this._subOptions=d,this._status.curHammer=e,this._panstart(a));
},this)).on("panstartpanmove",a.proxy(this._panmove,this)).on("panend",a.proxy(this._panend,this)),e;
},
unbind:function(c){
vard=a(c),e=d.data(b.MovableCoord.KEY);
e&&(this._hammers[e].destroy(),deletethis._hammers[e],d.data(b.MovableCoord.KEY,null));
},
_grab:function(){
this._status.animating&&(this._pos=this._getCircularPos(this._pos),this._triggerChange(this._pos,!0),this._status.animating=null,this._raf&&b.cancelAnimationFrame(this._raf),this._raf=null);
},
_getCircularPos:function(a,b,c,d){
returnb=b||this.options.min,c=c||this.options.max,d=d||this.options.circular,d[0]&&a[1]<b[1]&&(a[1]=(a[1]-b[1])%(c[1]-b[1]+1)+c[1]),d[1]&&a[0]>c[0]&&(a[0]=(a[0]-b[0])%(c[0]-b[0]+1)+b[0]),d[2]&&a[1]>c[1]&&(a[1]=(a[1]-b[1])%(c[1]-b[1]+1)+b[1]),d[3]&&a[0]<b[0]&&(a[0]=(a[0]-b[0])%(c[0]-b[0]+1)+c[0]),a[0]=+a[0].toFixed(5),a[1]=+a[1].toFixed(5),a;
},
_isOutside:function(a,b,c){
returna[0]<b[0]||a[1]<b[1]||a[0]>c[0]||a[1]>c[1];
},
_isOutToOut:function(a,b,c,d){
return(a[0]<c[0]||a[0]>d[0]||a[1]<c[1]||a[1]>d[1])&&(b[0]<c[0]||b[0]>d[0]||b[1]<c[1]||b[1]>d[1]);
},
_panstart:function(a){
if(this._subOptions.interruptable||!this._status.interrupted){
!this._subOptions.interruptable&&(this._status.interrupted=!0);
varb=this._pos;
this._grab(),this.trigger("hold",{
pos:[b[0],b[1]],
hammerEvent:a}),this._status.moveDistance=[b[0],b[1]],this._status.grabOutside=this._isOutside(b,this.options.min,this.options.max);
}
},
_panmove:function(a){
if(this._isInterrupting()&&this._status.moveDistance){
varc,d,e,f=this._pos,g=this.options.min,h=this.options.max,i=this.options.bounce,j=this.options.margin,k=this.options.easing,l=this._subOptions.direction,m=this._subOptions.scale,n=this._getDirection(a.angle),o=[j[0]+i[0],j[1]+i[1],j[2]+i[2],j[3]+i[3]],p=!1,q=this._status.curHammer.session.prevInput;
if(q?(a.offsetX=a.deltaX-q.deltaX,a.offsetY=a.deltaY-q.deltaY):a.offsetX=a.offsetY=0,n&b.DIRECTION_HORIZONTAL&&l&b.DIRECTION_HORIZONTAL&&(this._status.moveDistance[0]+=a.offsetX*m[0],p=!0),n&b.DIRECTION_VERTICAL&&l&b.DIRECTION_VERTICAL&&(this._status.moveDistance[1]+=a.offsetY*m[1],p=!0),p&&(a.srcEvent.preventDefault(),a.srcEvent.stopPropagation()),a.preventSystemEvent=p,f[0]=this._status.moveDistance[0],f[1]=this._status.moveDistance[1],f=this._getCircularPos(f,g,h),this._status.grabOutside&&!this._isOutside(f,g,h)&&(this._status.grabOutside=!1),this._status.grabOutside)
d=g[0]-o[3],e=h[0]+o[1],c=f[0],f[0]=c>e?e:d>c?d:c,d=g[1]-o[0],e=h[1]+o[2],c=f[1],f[1]=c>e?e:d>c?d:c;
else{
varr=this._isInEasing?k(null,.9999,0,1,1)/.9999:k(null,1e-4,0,1,1)/1e-4;
f[1]<g[1]?(c=(g[1]-f[1])/(o[0]*r),f[1]=g[1]-k(null,c>1?1:c,0,1,1)*o[0]):f[1]>h[1]&&(c=(f[1]-h[1])/(o[2]*r),f[1]=h[1]+k(null,c>1?1:c,0,1,1)*o[2]),f[0]<g[0]?(c=(g[0]-f[0])/(o[3]*r),f[0]=g[0]-k(null,c>1?1:c,0,1,1)*o[3]):f[0]>h[0]&&(c=(f[0]-h[0])/(o[1]*r),f[0]=h[0]+k(null,c>1?1:c,0,1,1)*o[1]);
}
this._triggerChange(f,!0,a);
}
},
_panend:function(a){
if(this._isInterrupting()&&this._status.moveDistance){
varc=this._subOptions.direction,d=this._subOptions.scale,e=Math.abs(a.velocityX),f=Math.abs(a.velocityY);
!(c&b.DIRECTION_HORIZONTAL)&&(e=0),!(c&b.DIRECTION_VERTICAL)&&(f=0),this._animateBy(this._getNextOffsetPos([e*(a.deltaX<0?-1:1)*d[0],f*(a.deltaY<0?-1:1)*d[1]],this._subOptions.maximumSpeed),this._animationEnd,!1,this._subOptions.maximumSpeed,a),this._status.moveDistance=null;
}
},
_isInterrupting:function(){
returnthis._subOptions.interruptable||this._status.interrupted;
},
_getDirection:function(a){
varc=this._subOptions.thresholdAngle;
return0>c||c>90?b.DIRECTION_NONE:(a=Math.abs(a),a>c&&180-c>a?b.DIRECTION_VERTICAL:b.DIRECTION_HORIZONTAL);
},
_animationEnd:function(){
varb=this._pos,c=this.options.min,d=this.options.max;
this._animateTo([Math.min(d[0],Math.max(c[0],b[0])),Math.min(d[1],Math.max(c[1],b[1]))],a.proxy(this.trigger,this,"animationEnd"),!0);
},
_getNextOffsetPos:function(a,b){
varc=Math.min(b,1/0,Math.sqrt(a[0]*a[0]+a[1]*a[1])),d=Math.abs(c/-this.options.deceleration);
return[a[0]/2*d,a[1]/2*d];
},
_getDurationFromPos:function(a){
varb=Math.sqrt(a[0]*a[0]+a[1]*a[1]),c=Math.sqrt(b/this.options.deceleration*2);
return100>c?0:c;
},
_animateBy:function(a,b,c,d,e){
varf=this._pos;
returnthis._animateTo([f[0]+a[0],f[1]+a[1]],b,c,d,e);
},
_getPointOfIntersection:function(a,b){
varc,d,e=this.options.circular,f=this.options.bounce,g=this.options.min,h=this.options.max,i=[g[0]-f[3],g[1]-f[0]],j=[h[0]+f[1],h[1]+f[2]];
returnb=[b[0],b[1]],c=b[0]-a[0],d=b[1]-a[1],e[3]||(b[0]=Math.max(i[0],b[0])),e[1]||(b[0]=Math.min(j[0],b[0])),b[1]=c?a[1]+d/c*(b[0]-a[0]):b[1],e[0]||(b[1]=Math.max(i[1],b[1])),e[2]||(b[1]=Math.min(j[1],b[1])),b[0]=d?a[0]+c/d*(b[1]-a[1]):b[0],b;
},
_isCircular:function(a,b,c,d){
returna[0]&&b[1]<c[1]||a[1]&&b[0]>d[0]||a[2]&&b[1]>d[1]||a[3]&&b[0]<c[0];
},
_animateTo:function(a,b,c,d,e){
varf=this._pos,g=this._getPointOfIntersection(f,a),h={
depaPos:[f[0],f[1]],
destPos:g,
hammerEvent:e||{}};
!c&&e&&this.trigger("release",h),this._afterReleaseProcess(h,b,c,d);
},
_afterReleaseProcess:function(c,d,e,f){
varg,h,i=this._pos,j=this.options.min,k=this.options.max,l=this.options.circular,m=c.destPos,n=this._isCircular(l,m,j,k);
this._isOutToOut(i,m,j,k)&&(m=i),h=[Math.abs(m[0]-i[0]),Math.abs(m[1]-i[1])],f=Math.min(f,1/0,this._getDurationFromPos(h));
varo=a.proxy(function(a){
this._status.animating=null,i[0]=Math.round(m[0]),i[1]=Math.round(m[1]),i=this._getCircularPos(i,j,k,l),!a&&(this._status.interrupted=!1),d&&d();
},this);
if(0===h[0]&&0===h[1])
returno(!e);
g={
duration:f,
depaPos:[i[0],i[1]],
destPos:m,
isBounce:e,
isCircular:n,
done:o};
varp=this.trigger("animationStart",g);
if(n&&!p)
thrownewError("Youcan'tstopthe'animation'eventwhen'circular'istrue.");
if(g.depaPos=i,g.startTime=(newDate()).getTime(),this._status.animating=g,p)
if(f){
varq=this._status.animating,r=this;
!functions(){
returnr._raf=null,r._frame(q)>=1?o(!0):void(r._raf=b.requestAnimationFrame(s));
}();
}else
this._triggerChange(g.destPos,!1),o(!e);
},
_frame:function(a){
varb=newDate()-a.startTime,c=this.options.easing(null,b,0,1,a.duration),d=[a.depaPos[0],a.depaPos[1]];
c=c>=1?1:c;
for(vare=0;2>e;e++)
d[e]!==a.destPos[e]&&(d[e]+=(a.destPos[e]-d[e])*c);
returnd=this._getCircularPos(d),this._triggerChange(d,!1),c;
},
_reviseOptions:function(b){
varc;
a.each(["bounce","margin","circular"],function(d,e){
c=b[e],null!=c&&(b[e]=a.isArray(c)?2===c.length?[c[0],c[1],c[0],c[1]]:[c[0],c[1],c[2],c[3]]:/string|number|boolean/.test(typeofc)?[c,c,c,c]:null);
}),a.extend(this.options,b);
},
_triggerChange:function(a,b,c){
this.trigger("change",{
pos:[a[0],a[1]],
holding:b,
hammerEvent:c||{}});
},
get:function(){
return[this._pos[0],this._pos[1]];
},
setTo:function(a,b,c){
this._grab();
vard=[this._pos[0],this._pos[1]],e=this.options.circular,f=this.options.min,g=this.options.max;
returna===d[0]&&b===d[1]?this:(a!==d[0]&&(e[3]||(a=Math.max(f[0],a)),e[1]||(a=Math.min(g[0],a))),b!==d[1]&&(e[0]||(b=Math.max(f[1],b)),e[2]||(b=Math.min(g[1],b))),c?this._animateTo([a,b],this._animationEnd,!1,c):(this._pos=this._getCircularPos([a,b]),this._triggerChange(this._pos,!1)),this);
},
setBy:function(a,b,c){
returnthis.setTo(null!=a?this._pos[0]+a:this._pos[0],null!=b?this._pos[1]+b:this._pos[1],c);
},
_isInEasing:function(b){
for(varcina.easing)
if(a.easing[c]===b)
return!~c.indexOf("Out");
return!1;
},
destroy:function(){
this.off();
for(varainthis._hammers)
this._hammers.hasOwnProperty(a)&&(this._hammers[a].destroy(),this._hammers[a]=null);
}}),b.MovableCoord.KEY="__MOVABLECOORD__";
}),eg.module("flicking",[window.jQuery,eg,eg.MovableCoord],function(a,b,c){
b.Flicking=b.Class.extend(b.Component,{
construct:function(c,d){
this._wrapper=a(c),a.extend(this.options={
effect:a.easing.linear,
hwAccelerable:b.isHWAccelerable(),
prefix:"eg-flick",
deceleration:6e-4,
horizontal:!0,
circular:!1,
previewPadding:[0,0],
threshold:40,
duration:100,
panelEffect:a.easing.easeOutQuint,
defaultIndex:0},d);
vare=this.options.previewPadding,f=window.CSS&&window.CSS.supports&&window.CSS.supports("will-change","transform");
"number"==typeofe?e=this.options.previewPadding=[e,e]:e.constructor!==Array&&(e=this.options.previewPadding=[0,0]),this._conf={
panel:{
list:[],
index:0,
no:0,
size:0,
count:0,
origCount:0,
changed:!1,
animating:!1,
minCount:e[0]+e[1]>0?5:3},
touch:{
holdPos:[0,0],
destPos:[0,0],
distance:0,
direction:null},
customEvent:{},
clickBug:b._hasClickBug(),
useLayerHack:this.options.hwAccelerable&&!f,
useHint:this.options.hwAccelerable&&f,
dirData:[]},a([["LEFT","RIGHT"],["DOWN","UP"]][+!this.options.horizontal]).each(a.proxy(function(a,c){
this._conf.dirData.push(b["DIRECTION_"+c]);
},this)),this._build(),this._bindEvents(),this._arrangePanels();
},
_build:function(){
vara,d=this._conf.panel,e=this.options,f=d.list=this._wrapper.children(),g=e.previewPadding.concat(),h=e.prefix,i=e.horizontal,j=d.count=d.origCount=f.length,k=[d.size=this._wrapper[i?"width":"height"]()-(g[0]+g[1]),"100%"];
this._wrapper.css({
padding:(i?"0"+g.reverse().join("px0"):g.join("px0"))+"px",
overflow:"hidden"}),this._getDataByDirection(k),f.addClass(h+"-panel").css({
position:"absolute",
width:k[0],
height:k[1],
top:0,
left:0}),k[a=+!i]*=j,k[a]+="px",a="width:"+k[0]+";height:"+k[1]+(i?";":";top:"+g[0]+"px;"),this._container=f.wrapAll("<divclass='"+h+"-container'style='position:relative;"+a+"'/>").parent(),this._addClonePanels()&&(j=d.count=(d.list=this._container.children()).length),this._mcInst=newc({
min:[0,0],
max:this._getDataByDirection([d.size*(j-1),0]),
margin:0,
circular:!1,
easing:e.panelEffect,
deceleration:e.deceleration}).bind(this._wrapper,{
scale:this._getDataByDirection([-1,0]),
direction:b["DIRECTION_"+(i?"HORIZONTAL":"VERTICAL")],
maximumSpeed:e.duration,
interruptable:!1}),this._setDefaultPanel(e.defaultIndex);
},
_addClonePanels:function(){
vara,b=this._conf.panel,c=b.origCount,d=b.minCount-c,e=b.list;
if(this.options.circular&&c<b.minCount){
for(a=e.clone();a.length<d;)
a=a.add(e.clone());
returnthis._container.append(a);
}
},
_movePanelPosition:function(b,c){
vard,e=this._conf.panel,f=e.list;
d=f.splice(c?0:e.count-b,b),this._conf.panel.list=a(c?a.merge(f,d):a.merge(d,f));
},
_setDefaultPanel:function(a){
varb,c=this._conf.panel,d=c.count-1;
this.options.circular?(a>0&&d>=a&&this._movePanelPosition(a,!0),this._movePanelPosition(this._getBasePositionIndex(),!1),c.no=a):a>0&&d>=a&&(c.index=a,b=[-(c.size*a),0],this._setTranslate(b),this._mcInst.setTo(Math.abs(b[0]),Math.abs(b[1])));
},
_arrangePanels:function(c,d){
vare,f=this._conf.panel,g=this._conf.touch,h=this._conf.dirData,i=this._conf.useLayerHack;
this.options.circular&&(c&&("undefined"!=typeofd&&(g.direction=h[+!Boolean(d>0)]),this._arrangePanelPosition(g.direction,d)),f.index=this._getBasePositionIndex(),e=this._getDataByDirection([f.size*f.index,0]),this._mcInst.setTo(e[0],e[1])),f.list.each(a.proxy(function(c,d){
e=this._getDataByDirection([100*c+"%",0]),a(d).css("transform",b.translate(e[0],e[1],i));
},this));
},
_setHint:function(a){
if(this._conf.useHint){
varb=a?"transform":"";
this._container.css("willChange",b),this._conf.panel.list.css("willChange",b);
}
},
_getDataByDirection:function(a){
return!this.options.horizontal&&a.reverse(),a;
},
_arrangePanelPosition:function(a,b){
varc=a===this._conf.dirData[0];
this._movePanelPosition(Math.abs(b||1),c);
},
_getBasePositionIndex:function(){
vara=this._conf.panel;
returna.index=Math.floor(a.count/2-.1);
},
_bindEvents:function(){
this._mcInst.on({
hold:a.proxy(this._holdHandler,this),
change:a.proxy(this._changeHandler,this),
release:a.proxy(this._releaseHandler,this),
animationStart:a.proxy(this._animationStartHandler,this),
animationEnd:a.proxy(this._animationEndHandler,this)});
},
_holdHandler:function(a){
this._conf.touch.holdPos=a.pos,this._conf.panel.changed=!1,this._setHint(!0),this._triggerEvent("touchStart",{
pos:a.pos});
},
_changeHandler:function(a){
varb=a.pos;
this._setPointerEvents(a),this._triggerEvent(a.holding?"touchMove":"flick",{
pos:a.pos})&&this._setTranslate([-b[+!this.options.horizontal],0]);
},
_releaseHandler:function(a){
varb=this._conf.touch,c=a.destPos,d=+!this.options.horizontal,e=b.holdPos[d],f=this._conf.panel.size;
b.distance=a.depaPos[d]-b.holdPos[d],b.direction=this._conf.dirData[+!Boolean(b.holdPos[d]<a.depaPos[d])],c[d]=Math.max(e-f,Math.min(e,c[d])),b.destPos[d]=c[d]=Math.round(c[d]/f)*f,this._triggerEvent("touchEnd",{
depaPos:a.depaPos,
destPos:a.destPos}),this._setPointerEvents();
},
_animationStartHandler:function(a){
varb=this._conf.panel,c=this._conf.touch.direction,d=this._conf.dirData,e=this._isMovable();
b.animating=!0,a.duration=this.options.duration,e&&(b.index+=c===d[0]?1:-1),a.destPos[+!this.options.horizontal]=b.size*b.index,e?(this._triggerEvent("flickStart",{
depaPos:a.depaPos,
destPos:a.destPos}),this._setPanelNo(!0),b.changed=!0):(this._conf.customEvent.restore=this._triggerEvent("beforeRestore",{
depaPos:a.depaPos,
destPos:a.destPos}))||a.stop();
},
_animationEndHandler:function(){
vara=this._conf.panel;
this._setTranslate([-a.size*a.index,0]),this.options.circular&&a.changed&&(this._arrangePanels(!0),this._setPanelNo()),this._setHint(a.animating=!1),a.changed?this._triggerEvent("flickEnd"):this._conf.customEvent.restore&&this._triggerEvent("restore");
},
_setPanelNo:function(a){
varb=this._conf.panel,c=b.origCount-1,d=this._conf.touch.direction,e=this._conf.dirData;
a&&(b.no+=d===e[0]?1:-1),b.no>c?b.no=0:b.no<0&&(b.no=c);
},
_setPointerEvents:function(a){
this._conf.clickBug&&this._container.css("pointerEvents",a&&a.holding&&a.hammerEvent.preventSystemEvent?"none":"auto");
},
_setTranslate:function(a){
this._getDataByDirection(a),this._container.css("transform",b.translate(this._getUnitValue(a[0]),this._getUnitValue(a[1]),this._conf.useLayerHack));
},
_getUnitValue:function(a){
varb=/(?:[a-z]{2,}|%)$/;
return(parseInt(a,10)||0)+(String(a).match(b)||"px");
},
_isMovable:function(){
returnMath.abs(this._conf.touch.distance)>=this.options.threshold;
},
_triggerEvent:function(b,c){
vard=this._conf.panel;
returnthis.trigger(b,c=a.extend({
eventType:b,
index:d.index,
no:d.no,
direction:this._conf.touch.direction},c));
},
_getElement:function(b,c,d){
vare,f,g,h=this._conf.panel,i=this.options.circular,j=h.index,k=b===this._conf.dirData[0],l=null;
returnd?(e=h.count,f=j):(e=h.origCount,f=h.no),g=f,k?e-1>f?f++:i&&(f=0):f>0?f--:i&&(f=e-1),g!==f&&(l=c?a(h.list[k?j+1:j-1]):f),l;
},
_movePanel:function(a,b){
varc,d=this._conf.panel,e=a===this._conf.dirData[0],f=this[e?"getNextIndex":"getPrevIndex"]();
null!=f&&(this._conf.touch.direction=a,this._setPanelNo(!0),d.index=f,c=this._getDataByDirection([d.size*(e?1:-1),0]),this._mcInst.setBy(c[0],c[1],"number"==typeofb?b:this.options.duration),this._arrangePanels(!0));
},
getIndex:function(a){
returnthis._conf.panel[a?"index":"no"];
},
getElement:function(){
varb=this._conf.panel;
returna(b.list[b.index]);
},
getNextElement:function(){
returnthis._getElement(this._conf.dirData[0],!0);
},
getNextIndex:function(a){
returnthis._getElement(this._conf.dirData[0],!1,a);
},
getAllElements:function(){
returnthis._conf.panel.list;
},
getPrevElement:function(){
returnthis._getElement(this._conf.dirData[1],!0);
},
getPrevIndex:function(a){
returnthis._getElement(this._conf.dirData[1],!1,a);
},
getTotalCount:function(a){
returnthis._conf.panel[a?"count":"origCount"];
},
isPlaying:function(){
returnthis._conf.panel.animating;
},
next:function(a){
this._movePanel(this._conf.dirData[0],a);
},
prev:function(a){
this._movePanel(this._conf.dirData[1],a);
},
moveTo:function(a,b){
varc,d,e=this._conf.panel,f=e.index,g=0;
"number"!=typeofa||a>=e.origCount||a===e.no||(this.options.circular?(c=[f,e.count-(f+1)],a>e.no?(g=a-e.no,g>c[1]&&(g=-(c[0]+1-(g-c[1])))):(g=-(e.no-a),Math.abs(g)>c[0]&&(g=c[1]+1-(Math.abs(g)-c[0]))),e.no=a,this._arrangePanels(!0,g)):(e.index=a,d=this._getDataByDirection([e.size*g,0]),this._mcInst.setTo(d[0],d[1],"number"==typeofb?b:this.options.duration)));
},
resize:function(){
vara=this._conf.panel,b=a.size=this._wrapper.width(),c=[b*(a.count-1),0];
this._container.width(c[0]),a.list.css("width",b),this._mcInst.setTo(b*a.index,0).options.max=c;
}});
})
743 2 !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f=("ms"===e?"Ms":e)+c;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
}),eg.module("persist",[jQuery,window,document],function(a,b,c){
functiond(c){
!e(c.originalEvent)&&f()?a(b).trigger("persist"):g();
}
functione(a){
return!!a.persisted;
}
functionf(){
vara=b.performance;
returna&&a.navigation&&a.navigation.type===a.navigation.TYPE_BACK_FORWARD;
}
functiong(){
i.replaceState(null,c.title,j.href);
}
functionh(b){
returnnull===b?null:a.extend(!0,{},b);
}
vari=b.history,j=b.location,k="replaceState"ini,l="state"ini;
returnk&&l?(a.persist=function(a){
returna&&i.replaceState(a,c.title,j.href),h(i.state);
},a.event.special.persist={
setup:function(){
a(b).on("pageshow",d);
},
teardown:function(){
a(b).off("pageshow",d);
},
trigger:function(a){
a.state=h(i.state);
}}):a.persist=function(){
},{
isPersisted:e,
isBackForwardNavigated:f,
onPageshow:d,
reset:g,
clone:h,
persist:a.persist};
}),eg.module("rotate",[window.jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara,b,e,f=m();
return"resize"===f?(a=d.documentElement.clientWidth,e=-1===h?a<d.documentElement.clientHeight:h>a?!0:a===h?i:!1,h=a):(b=c.orientation,0===b||180===b?e=!0:(90===b||-90===b)&&(e=!1)),e;
}
functionf(){
varb=e();
l&&i!==b&&(i=b,a(c).trigger("rotate"));
}
functiong(a){
varb,e,i=m();
if("resize"===i)
c.setTimeout(function(){
f();
},0);
else{
if(b=300,"android"===k.os.name){
if(e=d.documentElement.clientWidth,"orientationchange"===a.type&&e===h)
returnc.setTimeout(function(){
g(a);
},500),!1;
h=e;
}
c.clearTimeout(j),j=c.setTimeout(function(){
f();
},b);
}
}
varh=-1,i=null,j=null,k=b.agent(),l=/android|ios/.test(k.os.name),m=function(){
vara;
returna="android"===k.os.name&&"2.1"===k.os.version?"resize":"onorientationchange"inc?"orientationchange":"resize",m=function(){
returna;
},a;
};
returna.event.special.rotate={
setup:function(){
h=d.documentElement.clientWidth,a(c).on(m(),g);
},
teardown:function(){
a(c).off(m(),g);
},
trigger:function(a){
a.isVertical=i;
}},{
orientationChange:m,
isVertical:e,
triggerRotate:f,
handler:g};
}),eg.module("scrollEnd",[jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara=A,c=b.agent(),d=c.os,e=c.browser,f=parseInt(d.version,10);
return"android"===d.name?a="chrome"===e.name?x:f>=3?y:z:/^(?:window|ios)$/.test(d.name)&&f>=8&&(a=y),a;
}
functionf(){
varb=a(c).on("scroll",j);
B===z&&a(d).on({
touchstart:g,
touchmove:h,
touchend:i}),B===x&&b.on("orientationchange",function(){
w=!0;
});
}
functiong(){
q=!0,r=!1,u=v=0;
}
functionh(){
r=!0;
}
functioni(){
q=!1,r&&k();
}
functionj(){
switch(B){
caseA:
n();
break;
casez:
k();
break;
casey:
o();
break;
casex:
w?w=!1:n();
}
}
functionk(){
l(),s=setInterval(m,100);
}
functionl(){
s&&clearInterval(s),s=null;
}
functionm(){
q||u!==c.pageYOffset||v!==c.pageXOffset?(u=c.pageYOffset,v=c.pageXOffset):(l(),n());
}
functionn(){
a(c).trigger("scrollend",{
top:c.pageYOffset,
left:c.pageXOffset});
}
functiono(){
clearTimeout(t),t=setTimeout(function(){
n();
},350);
}
functionp(){
a(d).off({
touchstart:g,
touchmove:h,
touchend:i}),a(c).off("scroll",j);
}
varq,r,s,t,u=0,v=0,w=!1,x=3,y=2,z=1,A=0,B=e();
returna.event.special.scrollend={
setup:function(){
f();
},
teardown:function(){
p();
}},{
getDeviceType:e,
CHROME:x,
TIMERBASE:y,
TOUCHBASE:z,
SCROLLBASE:A};
}),eg.module("class",[eg],function(a){
a.Class=function(a){
varb=function(){
"function"==typeofa.construct&&a.construct.apply(this,arguments);
};
returnb.prototype=a,b.prototype.constructor=b,b;
},a.Class.extend=function(a,b){
varc=function(){
a.apply(this,arguments),"function"==typeofb.construct&&b.construct.apply(this,arguments);
},d=function(){
};
d.prototype=a.prototype;
vare=newd();
for(varfinb)
b.hasOwnProperty(f)&&(e[f]=b[f]);
returne.constructor=c,c.prototype=e,c;
};
}),eg.module("component",[eg],function(a){
a.Component=a.Class({
construct:function(){
this.eventHandler={};
},
trigger:function(a,b){
b=b||{};
varc=this.eventHandler[a]||[],d=c.length>0;
if(!d)
return!0;
c=c.concat(),b.eventType=a;
vare=!1;
b.stop=function(){
e=!0;
};
varf,g,h=[b];
(g=arguments.length)>2&&(h=h.concat(Array.prototype.slice.call(arguments,2,g)));
vari;
for(f=0;i=c[f];f++)
i.apply(this,h);
return!e;
},
hasOn:function(a){
return!!this.eventHandler[a];
},
on:function(a,b){
if("undefined"==typeofb){
varc,d=a;
for(cind)
this.on(c,d[c]);
returnthis;
}
vare=this.eventHandler[a];
return"undefined"==typeofe&&(e=this.eventHandler[a]=[]),e.push(b),this;
},
off:function(a,b){
if(0===arguments.length)
returnthis.eventHandler={},this;
if("undefined"==typeofb){
if("string"==typeofa)
returnthis.eventHandler[a]=null,this;
varc=a;
for(vardinc)
c.hasOwnProperty(d)&&this.off(d,c[d]);
returnthis;
}
vare=this.eventHandler[a];
if(e)
for(varf,g=0;f=e[g];g++)
if(f===b){
e=e.splice(g,1);
break;
}
returnthis;
}});
}),eg.module("movableCoord",[window.jQuery,eg,window.Hammer],function(a,b,c){
b.MovableCoord=b.Class.extend(b.Component,{
construct:function(b){
this.options={
min:[0,0],
max:[100,100],
bounce:[10,10,10,10],
margin:[0,0,0,0],
circular:[!1,!1,!1,!1],
easing:a.easing.easeOutQuint,
deceleration:6e-4},this._reviseOptions(b),this._status={
grabOutside:!1,
curHammer:null,
moveDistance:null,
animating:null,
interrupted:!1},this._hammers={},this._pos=[this.options.min[0],this.options.min[1]],this._subOptions={},this._raf=null,this._animationEnd=a.proxy(this._animationEnd,this);
},
bind:function(c,d){
vare=a(c),f=e.data(b.MovableCoord.KEY),g={
direction:b.DIRECTION_ALL,
scale:[1,1],
thresholdAngle:45,
maximumSpeed:1/0,
interruptable:!0};
returna.extend(g,d),f?this._hammers[f].get("pan").set({
direction:g.direction}):(f=Math.round(Math.random()*(newDate()).getTime()),this._hammers[f]=this._createHammer(e.get(0),g),e.data(b.MovableCoord.KEY,f)),this;
},
_createHammer:function(b,d){
vare=newc.Manager(b,{
recognizers:[[c.Pan,{
direction:d.direction,
threshold:0}]]});
returne.on("hammer.input",a.proxy(function(a){
a.isFirst&&(this._subOptions=d,this._status.curHammer=e,this._panstart(a));
},this)).on("panstartpanmove",a.proxy(this._panmove,this)).on("panend",a.proxy(this._panend,this)),e;
},
unbind:function(c){
vard=a(c),e=d.data(b.MovableCoord.KEY);
e&&(this._hammers[e].destroy(),deletethis._hammers[e],d.data(b.MovableCoord.KEY,null));
},
_grab:function(){
this._status.animating&&(this._pos=this._getCircularPos(this._pos),this._triggerChange(this._pos,!0),this._status.animating=null,this._raf&&b.cancelAnimationFrame(this._raf),this._raf=null);
},
_getCircularPos:function(a,b,c,d){
returnb=b||this.options.min,c=c||this.options.max,d=d||this.options.circular,d[0]&&a[1]<b[1]&&(a[1]=(a[1]-b[1])%(c[1]-b[1]+1)+c[1]),d[1]&&a[0]>c[0]&&(a[0]=(a[0]-b[0])%(c[0]-b[0]+1)+b[0]),d[2]&&a[1]>c[1]&&(a[1]=(a[1]-b[1])%(c[1]-b[1]+1)+b[1]),d[3]&&a[0]<b[0]&&(a[0]=(a[0]-b[0])%(c[0]-b[0]+1)+c[0]),a[0]=+a[0].toFixed(5),a[1]=+a[1].toFixed(5),a;
},
_isOutside:function(a,b,c){
returna[0]<b[0]||a[1]<b[1]||a[0]>c[0]||a[1]>c[1];
},
_isOutToOut:function(a,b,c,d){
return(a[0]<c[0]||a[0]>d[0]||a[1]<c[1]||a[1]>d[1])&&(b[0]<c[0]||b[0]>d[0]||b[1]<c[1]||b[1]>d[1]);
},
_panstart:function(a){
if(this._subOptions.interruptable||!this._status.interrupted){
!this._subOptions.interruptable&&(this._status.interrupted=!0);
varb=this._pos;
this._grab(),this.trigger("hold",{
pos:[b[0],b[1]],
hammerEvent:a}),this._status.moveDistance=[b[0],b[1]],this._status.grabOutside=this._isOutside(b,this.options.min,this.options.max);
}
},
_panmove:function(a){
if(this._isInterrupting()&&this._status.moveDistance){
varc,d,e,f=this._pos,g=this.options.min,h=this.options.max,i=this.options.bounce,j=this.options.margin,k=this.options.easing,l=this._subOptions.direction,m=this._subOptions.scale,n=this._getDirection(a.angle),o=[j[0]+i[0],j[1]+i[1],j[2]+i[2],j[3]+i[3]],p=!1,q=this._status.curHammer.session.prevInput;
if(q?(a.offsetX=a.deltaX-q.deltaX,a.offsetY=a.deltaY-q.deltaY):a.offsetX=a.offsetY=0,n&b.DIRECTION_HORIZONTAL&&l&b.DIRECTION_HORIZONTAL&&(this._status.moveDistance[0]+=a.offsetX*m[0],p=!0),n&b.DIRECTION_VERTICAL&&l&b.DIRECTION_VERTICAL&&(this._status.moveDistance[1]+=a.offsetY*m[1],p=!0),p&&(a.srcEvent.preventDefault(),a.srcEvent.stopPropagation()),a.preventSystemEvent=p,f[0]=this._status.moveDistance[0],f[1]=this._status.moveDistance[1],f=this._getCircularPos(f,g,h),this._status.grabOutside&&!this._isOutside(f,g,h)&&(this._status.grabOutside=!1),this._status.grabOutside)
d=g[0]-o[3],e=h[0]+o[1],c=f[0],f[0]=c>e?e:d>c?d:c,d=g[1]-o[0],e=h[1]+o[2],c=f[1],f[1]=c>e?e:d>c?d:c;
else{
varr=this._isInEasing?k(null,.9999,0,1,1)/.9999:k(null,1e-4,0,1,1)/1e-4;
f[1]<g[1]?(c=(g[1]-f[1])/(o[0]*r),f[1]=g[1]-k(null,c>1?1:c,0,1,1)*o[0]):f[1]>h[1]&&(c=(f[1]-h[1])/(o[2]*r),f[1]=h[1]+k(null,c>1?1:c,0,1,1)*o[2]),f[0]<g[0]?(c=(g[0]-f[0])/(o[3]*r),f[0]=g[0]-k(null,c>1?1:c,0,1,1)*o[3]):f[0]>h[0]&&(c=(f[0]-h[0])/(o[1]*r),f[0]=h[0]+k(null,c>1?1:c,0,1,1)*o[1]);
}
this._triggerChange(f,!0,a);
}
},
_panend:function(a){
if(this._isInterrupting()&&this._status.moveDistance){
varc=this._subOptions.direction,d=this._subOptions.scale,e=Math.abs(a.velocityX),f=Math.abs(a.velocityY);
!(c&b.DIRECTION_HORIZONTAL)&&(e=0),!(c&b.DIRECTION_VERTICAL)&&(f=0),this._animateBy(this._getNextOffsetPos([e*(a.deltaX<0?-1:1)*d[0],f*(a.deltaY<0?-1:1)*d[1]],this._subOptions.maximumSpeed),this._animationEnd,!1,this._subOptions.maximumSpeed,a),this._status.moveDistance=null;
}
},
_isInterrupting:function(){
returnthis._subOptions.interruptable||this._status.interrupted;
},
_getDirection:function(a){
varc=this._subOptions.thresholdAngle;
return0>c||c>90?b.DIRECTION_NONE:(a=Math.abs(a),a>c&&180-c>a?b.DIRECTION_VERTICAL:b.DIRECTION_HORIZONTAL);
},
_animationEnd:function(){
varb=this._pos,c=this.options.min,d=this.options.max;
this._animateTo([Math.min(d[0],Math.max(c[0],b[0])),Math.min(d[1],Math.max(c[1],b[1]))],a.proxy(this.trigger,this,"animationEnd"),!0);
},
_getNextOffsetPos:function(a,b){
varc=Math.min(b,1/0,Math.sqrt(a[0]*a[0]+a[1]*a[1])),d=Math.abs(c/-this.options.deceleration);
return[a[0]/2*d,a[1]/2*d];
},
_getDurationFromPos:function(a){
varb=Math.sqrt(a[0]*a[0]+a[1]*a[1]),c=Math.sqrt(b/this.options.deceleration*2);
return100>c?0:c;
},
_animateBy:function(a,b,c,d,e){
varf=this._pos;
returnthis._animateTo([f[0]+a[0],f[1]+a[1]],b,c,d,e);
},
_getPointOfIntersection:function(a,b){
varc,d,e=this.options.circular,f=this.options.bounce,g=this.options.min,h=this.options.max,i=[g[0]-f[3],g[1]-f[0]],j=[h[0]+f[1],h[1]+f[2]];
returnb=[b[0],b[1]],c=b[0]-a[0],d=b[1]-a[1],e[3]||(b[0]=Math.max(i[0],b[0])),e[1]||(b[0]=Math.min(j[0],b[0])),b[1]=c?a[1]+d/c*(b[0]-a[0]):b[1],e[0]||(b[1]=Math.max(i[1],b[1])),e[2]||(b[1]=Math.min(j[1],b[1])),b[0]=d?a[0]+c/d*(b[1]-a[1]):b[0],b;
},
_isCircular:function(a,b,c,d){
returna[0]&&b[1]<c[1]||a[1]&&b[0]>d[0]||a[2]&&b[1]>d[1]||a[3]&&b[0]<c[0];
},
_animateTo:function(a,b,c,d,e){
varf=this._pos,g=this._getPointOfIntersection(f,a),h={
depaPos:[f[0],f[1]],
destPos:g,
hammerEvent:e||{}};
!c&&e&&this.trigger("release",h),this._afterReleaseProcess(h,b,c,d);
},
_afterReleaseProcess:function(c,d,e,f){
varg,h,i=this._pos,j=this.options.min,k=this.options.max,l=this.options.circular,m=c.destPos,n=this._isCircular(l,m,j,k);
this._isOutToOut(i,m,j,k)&&(m=i),h=[Math.abs(m[0]-i[0]),Math.abs(m[1]-i[1])],f=Math.min(f,1/0,this._getDurationFromPos(h));
varo=a.proxy(function(a){
this._status.animating=null,i[0]=Math.round(m[0]),i[1]=Math.round(m[1]),i=this._getCircularPos(i,j,k,l),!a&&(this._status.interrupted=!1),d&&d();
},this);
if(0===h[0]&&0===h[1])
returno(!e);
g={
duration:f,
depaPos:[i[0],i[1]],
destPos:m,
isBounce:e,
isCircular:n,
done:o};
varp=this.trigger("animationStart",g);
if(n&&!p)
thrownewError("Youcan'tstopthe'animation'eventwhen'circular'istrue.");
if(g.depaPos=i,g.startTime=(newDate()).getTime(),this._status.animating=g,p)
if(f){
varq=this._status.animating,r=this;
!functions(){
returnr._raf=null,r._frame(q)>=1?o(!0):void(r._raf=b.requestAnimationFrame(s));
}();
}else
this._triggerChange(g.destPos,!1),o(!e);
},
_frame:function(a){
varb=newDate()-a.startTime,c=this.options.easing(null,b,0,1,a.duration),d=[a.depaPos[0],a.depaPos[1]];
c=c>=1?1:c;
for(vare=0;2>e;e++)
d[e]!==a.destPos[e]&&(d[e]+=(a.destPos[e]-d[e])*c);
returnd=this._getCircularPos(d),this._triggerChange(d,!1),c;
},
_reviseOptions:function(b){
varc;
a.each(["bounce","margin","circular"],function(d,e){
c=b[e],null!=c&&(b[e]=a.isArray(c)?2===c.length?[c[0],c[1],c[0],c[1]]:[c[0],c[1],c[2],c[3]]:/string|number|boolean/.test(typeofc)?[c,c,c,c]:null);
}),a.extend(this.options,b);
},
_triggerChange:function(a,b,c){
this.trigger("change",{
pos:[a[0],a[1]],
holding:b,
hammerEvent:c||{}});
},
get:function(){
return[this._pos[0],this._pos[1]];
},
setTo:function(a,b,c){
this._grab();
vard=[this._pos[0],this._pos[1]],e=this.options.circular,f=this.options.min,g=this.options.max;
returna===d[0]&&b===d[1]?this:(a!==d[0]&&(e[3]||(a=Math.max(f[0],a)),e[1]||(a=Math.min(g[0],a))),b!==d[1]&&(e[0]||(b=Math.max(f[1],b)),e[2]||(b=Math.min(g[1],b))),c?this._animateTo([a,b],this._animationEnd,!1,c):(this._pos=this._getCircularPos([a,b]),this._triggerChange(this._pos,!1)),this);
},
setBy:function(a,b,c){
returnthis.setTo(null!=a?this._pos[0]+a:this._pos[0],null!=b?this._pos[1]+b:this._pos[1],c);
},
_isInEasing:function(b){
for(varcina.easing)
if(a.easing[c]===b)
return!~c.indexOf("Out");
return!1;
},
destroy:function(){
this.off();
for(varainthis._hammers)
this._hammers.hasOwnProperty(a)&&(this._hammers[a].destroy(),this._hammers[a]=null);
}}),b.MovableCoord.KEY="__MOVABLECOORD__";
}) !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f="ms"===e?"Ms"+c:d;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
}),eg.module("persist",[jQuery,window,document],function(a,b,c){
functiond(c){
!e(c.originalEvent)&&f()?a(b).trigger("persist"):g();
}
functione(a){
return!!a.persisted;
}
functionf(){
vara=b.performance;
returna&&a.navigation&&a.navigation.type===a.navigation.TYPE_BACK_FORWARD;
}
functiong(){
i.replaceState(null,c.title,j.href);
}
functionh(b){
returnnull===b?null:a.extend(!0,{},b);
}
vari=b.history,j=b.location,k="replaceState"ini,l="state"ini;
returnk&&l?(a.persist=function(a){
returna&&i.replaceState(a,c.title,j.href),h(i.state);
},a.event.special.persist={
setup:function(){
a(b).on("pageshow",d);
},
teardown:function(){
a(b).off("pageshow",d);
},
trigger:function(a){
a.state=h(i.state);
}}):a.persist=function(){
},{
isPersisted:e,
isBackForwardNavigated:f,
onPageshow:d,
reset:g,
clone:h,
persist:a.persist};
}),eg.module("rotate",[window.jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara,b,e,f=m();
return"resize"===f?(a=d.documentElement.clientWidth,e=-1===h?a<d.documentElement.clientHeight:h>a?!0:a===h?i:!1,h=a):(b=c.orientation,0===b||180===b?e=!0:(90===b||-90===b)&&(e=!1)),e;
}
functionf(){
varb=e();
l&&i!==b&&(i=b,a(c).trigger("rotate"));
}
functiong(a){
varb,e,i=m();
if("resize"===i)
c.setTimeout(function(){
f();
},0);
else{
if(b=300,"android"===k.os.name){
if(e=d.documentElement.clientWidth,"orientationchange"===a.type&&e===h)
returnc.setTimeout(function(){
g(a);
},500),!1;
h=e;
}
c.clearTimeout(j),j=c.setTimeout(function(){
f();
},b);
}
}
varh=-1,i=null,j=null,k=b.agent(),l=/android|ios/.test(k.os.name),m=function(){
vara;
returna="android"===k.os.name&&"2.1"===k.os.version?"resize":"onorientationchange"inc?"orientationchange":"resize",m=function(){
returna;
},a;
};
returna.event.special.rotate={
setup:function(){
h=d.documentElement.clientWidth,a(c).on(m(),g);
},
teardown:function(){
a(c).off(m(),g);
},
trigger:function(a){
a.isVertical=i;
}},{
orientationChange:m,
isVertical:e,
triggerRotate:f,
handler:g};
}),eg.module("scrollEnd",[jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara=A,c=b.agent(),d=c.os,e=c.browser,f=parseInt(d.version,10);
return"android"===d.name?a="chrome"===e.name?x:f>=3?y:z:/^(?:window|ios)$/.test(d.name)&&f>=8&&(a=y),a;
}
functionf(){
varb=a(c).on("scroll",j);
B===z&&a(d).on({
touchstart:g,
touchmove:h,
touchend:i}),B===x&&b.on("orientationchange",function(){
w=!0;
});
}
functiong(){
q=!0,r=!1,u=v=0;
}
functionh(){
r=!0;
}
functioni(){
q=!1,r&&k();
}
functionj(){
switch(B){
caseA:
n();
break;
casez:
k();
break;
casey:
o();
break;
casex:
w?w=!1:n();
}
}
functionk(){
l(),s=setInterval(m,100);
}
functionl(){
s&&clearInterval(s),s=null;
}
functionm(){
q||u!==c.pageYOffset||v!==c.pageXOffset?(u=c.pageYOffset,v=c.pageXOffset):(l(),n());
}
functionn(){
a(c).trigger("scrollend",{
top:c.pageYOffset,
left:c.pageXOffset});
}
functiono(){
clearTimeout(t),t=setTimeout(function(){
n();
},350);
}
functionp(){
a(d).off({
touchstart:g,
touchmove:h,
touchend:i}),a(c).off("scroll",j);
}
varq,r,s,t,u=0,v=0,w=!1,x=3,y=2,z=1,A=0,B=e();
returna.event.special.scrollend={
setup:function(){
f();
},
teardown:function(){
p();
}},{
getDeviceType:e,
CHROME:x,
TIMERBASE:y,
TOUCHBASE:z,
SCROLLBASE:A};
}),eg.module("class",[eg],function(a){
a.Class=function(a){
varb=function(){
"function"==typeofa.construct&&a.construct.apply(this,arguments);
};
returnb.prototype=a,b.prototype.constructor=b,b;
},a.Class.extend=function(a,b){
varc=function(){
a.apply(this,arguments),"function"==typeofb.construct&&b.construct.apply(this,arguments);
},d=function(){
};
d.prototype=a.prototype;
vare=newd();
for(varfinb)
b.hasOwnProperty(f)&&(e[f]=b[f]);
returne.constructor=c,c.prototype=e,c;
};
}),eg.module("component",[eg],function(a){
a.Component=a.Class({
construct:function(){
this.eventHandler={};
},
trigger:function(a,b){
b=b||{};
varc=this.eventHandler[a]||[],d=c.length>0;
if(!d)
return!0;
c=c.concat(),b.eventType=a;
vare=!1;
b.stop=function(){
e=!0;
};
varf,g,h=[b];
(g=arguments.length)>2&&(h=h.concat(Array.prototype.slice.call(arguments,2,g)));
vari;
for(f=0;i=c[f];f++)
i.apply(this,h);
return!e;
},
hasOn:function(a){
return!!this.eventHandler[a];
},
on:function(a,b){
if("undefined"==typeofb){
varc,d=a;
for(cind)
this.on(c,d[c]);
returnthis;
}
vare=this.eventHandler[a];
return"undefined"==typeofe&&(e=this.eventHandler[a]=[]),e.push(b),this;
},
off:function(a,b){
if(0===arguments.length)
returnthis.eventHandler={},this;
if("undefined"==typeofb){
if("string"==typeofa)
returnthis.eventHandler[a]=null,this;
varc=a;
for(vardinc)
c.hasOwnProperty(d)&&this.off(d,c[d]);
returnthis;
}
vare=this.eventHandler[a];
if(e)
for(varf,g=0;f=e[g];g++)
if(f===b){
e=e.splice(g,1);
break;
}
returnthis;
}});
}),eg.module("movableCoord",[window.jQuery,eg,window.Hammer],function(a,b,c){
b.MovableCoord=b.Class.extend(b.Component,{
construct:function(b){
this.options={
min:[0,0],
max:[100,100],
bounce:[10,10,10,10],
margin:[0,0,0,0],
circular:[!1,!1,!1,!1],
easing:a.easing.easeOutQuint,
deceleration:6e-4},this._reviseOptions(b),this._status={
grabOutside:!1,
curHammer:null,
moveDistance:null,
animating:null,
interrupted:!1},this._hammers={},this._pos=[this.options.min[0],this.options.min[1]],this._subOptions={},this._raf=null,this._animationEnd=a.proxy(this._animationEnd,this);
},
bind:function(c,d){
vare=a(c),f=e.data(b.MovableCoord.KEY),g={
direction:b.DIRECTION_ALL,
scale:[1,1],
thresholdAngle:45,
maximumSpeed:1/0,
interruptable:!0};
returna.extend(g,d),f?this._hammers[f].get("pan").set({
direction:g.direction}):(f=Math.round(Math.random()*(newDate()).getTime()),this._hammers[f]=this._createHammer(e.get(0),g),e.data(b.MovableCoord.KEY,f)),this;
},
_createHammer:function(b,d){
vare=newc.Manager(b,{
recognizers:[[c.Pan,{
direction:d.direction,
threshold:0}]]});
returne.on("hammer.input",a.proxy(function(a){
a.isFirst&&(this._subOptions=d,this._status.curHammer=e,this._panstart(a));
},this)).on("panstartpanmove",a.proxy(this._panmove,this)).on("panend",a.proxy(this._panend,this)),e;
},
unbind:function(c){
vard=a(c),e=d.data(b.MovableCoord.KEY);
e&&(this._hammers[e].destroy(),deletethis._hammers[e],d.data(b.MovableCoord.KEY,null));
},
_grab:function(){
this._status.animating&&(this._pos=this._getCircularPos(this._pos),this._triggerChange(this._pos,!0),this._status.animating=null,this._raf&&b.cancelAnimationFrame(this._raf),this._raf=null);
},
_getCircularPos:function(a,b,c,d){
returnb=b||this.options.min,c=c||this.options.max,d=d||this.options.circular,d[0]&&a[1]<b[1]&&(a[1]=(a[1]-b[1])%(c[1]-b[1]+1)+c[1]),d[1]&&a[0]>c[0]&&(a[0]=(a[0]-b[0])%(c[0]-b[0]+1)+b[0]),d[2]&&a[1]>c[1]&&(a[1]=(a[1]-b[1])%(c[1]-b[1]+1)+b[1]),d[3]&&a[0]<b[0]&&(a[0]=(a[0]-b[0])%(c[0]-b[0]+1)+c[0]),a[0]=+a[0].toFixed(5),a[1]=+a[1].toFixed(5),a;
},
_isOutside:function(a,b,c){
returna[0]<b[0]||a[1]<b[1]||a[0]>c[0]||a[1]>c[1];
},
_isOutToOut:function(a,b,c,d){
return(a[0]<c[0]||a[0]>d[0]||a[1]<c[1]||a[1]>d[1])&&(b[0]<c[0]||b[0]>d[0]||b[1]<c[1]||b[1]>d[1]);
},
_panstart:function(a){
if(this._subOptions.interruptable||!this._status.interrupted){
!this._subOptions.interruptable&&(this._status.interrupted=!0);
varb=this._pos;
this._grab(),this.trigger("hold",{
pos:[b[0],b[1]],
hammerEvent:a}),this._status.moveDistance=[b[0],b[1]],this._status.grabOutside=this._isOutside(b,this.options.min,this.options.max);
}
},
_panmove:function(a){
if(this._isInterrupting()&&this._status.moveDistance){
varc,d,e,f=this._pos,g=this.options.min,h=this.options.max,i=this.options.bounce,j=this.options.margin,k=this.options.easing,l=this._subOptions.direction,m=this._subOptions.scale,n=this._getDirection(a.angle),o=[j[0]+i[0],j[1]+i[1],j[2]+i[2],j[3]+i[3]],p=!1,q=this._status.curHammer.session.prevInput;
if(q?(a.offsetX=a.deltaX-q.deltaX,a.offsetY=a.deltaY-q.deltaY):a.offsetX=a.offsetY=0,n&b.DIRECTION_HORIZONTAL&&l&b.DIRECTION_HORIZONTAL&&(this._status.moveDistance[0]+=a.offsetX*m[0],p=!0),n&b.DIRECTION_VERTICAL&&l&b.DIRECTION_VERTICAL&&(this._status.moveDistance[1]+=a.offsetY*m[1],p=!0),p&&(a.srcEvent.preventDefault(),a.srcEvent.stopPropagation()),a.preventSystemEvent=p,f[0]=this._status.moveDistance[0],f[1]=this._status.moveDistance[1],f=this._getCircularPos(f,g,h),this._status.grabOutside&&!this._isOutside(f,g,h)&&(this._status.grabOutside=!1),this._status.grabOutside)
d=g[0]-o[3],e=h[0]+o[1],c=f[0],f[0]=c>e?e:d>c?d:c,d=g[1]-o[0],e=h[1]+o[2],c=f[1],f[1]=c>e?e:d>c?d:c;
else{
varr=this._isInEasing?k(null,.9999,0,1,1)/.9999:k(null,1e-4,0,1,1)/1e-4;
f[1]<g[1]?(c=(g[1]-f[1])/(o[0]*r),f[1]=g[1]-k(null,c>1?1:c,0,1,1)*o[0]):f[1]>h[1]&&(c=(f[1]-h[1])/(o[2]*r),f[1]=h[1]+k(null,c>1?1:c,0,1,1)*o[2]),f[0]<g[0]?(c=(g[0]-f[0])/(o[3]*r),f[0]=g[0]-k(null,c>1?1:c,0,1,1)*o[3]):f[0]>h[0]&&(c=(f[0]-h[0])/(o[1]*r),f[0]=h[0]+k(null,c>1?1:c,0,1,1)*o[1]);
}
this._triggerChange(f,!0,a);
}
},
_panend:function(a){
if(this._isInterrupting()&&this._status.moveDistance){
varc=this._subOptions.direction,d=this._subOptions.scale,e=Math.abs(a.velocityX),f=Math.abs(a.velocityY);
!(c&b.DIRECTION_HORIZONTAL)&&(e=0),!(c&b.DIRECTION_VERTICAL)&&(f=0),this._animateBy(this._getNextOffsetPos([e*(a.deltaX<0?-1:1)*d[0],f*(a.deltaY<0?-1:1)*d[1]],this._subOptions.maximumSpeed),this._animationEnd,!1,this._subOptions.maximumSpeed,a),this._status.moveDistance=null;
}
},
_isInterrupting:function(){
returnthis._subOptions.interruptable||this._status.interrupted;
},
_getDirection:function(a){
varc=this._subOptions.thresholdAngle;
return0>c||c>90?b.DIRECTION_NONE:(a=Math.abs(a),a>c&&180-c>a?b.DIRECTION_VERTICAL:b.DIRECTION_HORIZONTAL);
},
_animationEnd:function(){
varb=this._pos,c=this.options.min,d=this.options.max;
this._animateTo([Math.min(d[0],Math.max(c[0],b[0])),Math.min(d[1],Math.max(c[1],b[1]))],a.proxy(this.trigger,this,"animationEnd"),!0);
},
_getNextOffsetPos:function(a,b){
varc=Math.min(b,1/0,Math.sqrt(a[0]*a[0]+a[1]*a[1])),d=Math.abs(c/-this.options.deceleration);
return[a[0]/2*d,a[1]/2*d];
},
_getDurationFromPos:function(a){
varb=Math.sqrt(a[0]*a[0]+a[1]*a[1]),c=Math.sqrt(b/this.options.deceleration*2);
return100>c?0:c;
},
_animateBy:function(a,b,c,d,e){
varf=this._pos;
returnthis._animateTo([f[0]+a[0],f[1]+a[1]],b,c,d,e);
},
_getPointOfIntersection:function(a,b){
varc,d,e=this.options.circular,f=this.options.bounce,g=this.options.min,h=this.options.max,i=[g[0]-f[3],g[1]-f[0]],j=[h[0]+f[1],h[1]+f[2]];
returnb=[b[0],b[1]],c=b[0]-a[0],d=b[1]-a[1],e[3]||(b[0]=Math.max(i[0],b[0])),e[1]||(b[0]=Math.min(j[0],b[0])),b[1]=c?a[1]+d/c*(b[0]-a[0]):b[1],e[0]||(b[1]=Math.max(i[1],b[1])),e[2]||(b[1]=Math.min(j[1],b[1])),b[0]=d?a[0]+c/d*(b[1]-a[1]):b[0],b;
},
_isCircular:function(a,b,c,d){
returna[0]&&b[1]<c[1]||a[1]&&b[0]>d[0]||a[2]&&b[1]>d[1]||a[3]&&b[0]<c[0];
},
_animateTo:function(a,b,c,d,e){
varf=this._pos,g=this._getPointOfIntersection(f,a),h={
depaPos:[f[0],f[1]],
destPos:g,
hammerEvent:e||{}};
!c&&e&&this.trigger("release",h),this._afterReleaseProcess(h,b,c,d);
},
_afterReleaseProcess:function(c,d,e,f){
varg,h,i=this._pos,j=this.options.min,k=this.options.max,l=this.options.circular,m=c.destPos,n=this._isCircular(l,m,j,k);
this._isOutToOut(i,m,j,k)&&(m=i),h=[Math.abs(m[0]-i[0]),Math.abs(m[1]-i[1])],f=Math.min(f,1/0,this._getDurationFromPos(h));
varo=a.proxy(function(a){
this._status.animating=null,i[0]=Math.round(m[0]),i[1]=Math.round(m[1]),i=this._getCircularPos(i,j,k,l),!a&&(this._status.interrupted=!1),d&&d();
},this);
if(0===h[0]&&0===h[1])
returno(!e);
g={
duration:f,
depaPos:[i[0],i[1]],
destPos:m,
isBounce:e,
isCircular:n,
done:o};
varp=this.trigger("animationStart",g);
if(n&&!p)
thrownewError("Youcan'tstopthe'animation'eventwhen'circular'istrue.");
if(g.depaPos=i,g.startTime=(newDate()).getTime(),this._status.animating=g,p)
if(f){
varq=this._status.animating,r=this;
!functions(){
returnr._raf=null,r._frame(q)>=1?o(!0):void(r._raf=b.requestAnimationFrame(s));
}();
}else
this._triggerChange(g.destPos,!1),o(!e);
},
_frame:function(a){
varb=newDate()-a.startTime,c=this.options.easing(null,b,0,1,a.duration),d=[a.depaPos[0],a.depaPos[1]];
c=c>=1?1:c;
for(vare=0;2>e;e++)
d[e]!==a.destPos[e]&&(d[e]+=(a.destPos[e]-d[e])*c);
returnd=this._getCircularPos(d),this._triggerChange(d,!1),c;
},
_reviseOptions:function(b){
varc;
a.each(["bounce","margin","circular"],function(d,e){
c=b[e],null!=c&&(b[e]=a.isArray(c)?2===c.length?[c[0],c[1],c[0],c[1]]:[c[0],c[1],c[2],c[3]]:/string|number|boolean/.test(typeofc)?[c,c,c,c]:null);
}),a.extend(this.options,b);
},
_triggerChange:function(a,b,c){
this.trigger("change",{
pos:[a[0],a[1]],
holding:b,
hammerEvent:c||{}});
},
get:function(){
return[this._pos[0],this._pos[1]];
},
setTo:function(a,b,c){
this._grab();
vard=[this._pos[0],this._pos[1]],e=this.options.circular,f=this.options.min,g=this.options.max;
returna===d[0]&&b===d[1]?this:(a!==d[0]&&(e[3]||(a=Math.max(f[0],a)),e[1]||(a=Math.min(g[0],a))),b!==d[1]&&(e[0]||(b=Math.max(f[1],b)),e[2]||(b=Math.min(g[1],b))),c?this._animateTo([a,b],this._animationEnd,!1,c):(this._pos=this._getCircularPos([a,b]),this._triggerChange(this._pos,!1)),this);
},
setBy:function(a,b,c){
returnthis.setTo(null!=a?this._pos[0]+a:this._pos[0],null!=b?this._pos[1]+b:this._pos[1],c);
},
_isInEasing:function(b){
for(varcina.easing)
if(a.easing[c]===b)
return!~c.indexOf("Out");
return!1;
},
destroy:function(){
this.off();
for(varainthis._hammers)
this._hammers.hasOwnProperty(a)&&(this._hammers[a].destroy(),this._hammers[a]=null);
}}),b.MovableCoord.KEY="__MOVABLECOORD__";
})
744 2 !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f=("ms"===e?"Ms":e)+c;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
}),eg.module("persist",[jQuery,window,document],function(a,b,c){
functiond(c){
!e(c.originalEvent)&&f()?a(b).trigger("persist"):g();
}
functione(a){
return!!a.persisted;
}
functionf(){
vara=b.performance;
returna&&a.navigation&&a.navigation.type===a.navigation.TYPE_BACK_FORWARD;
}
functiong(){
i.replaceState(null,c.title,j.href);
}
functionh(b){
returnnull===b?null:a.extend(!0,{},b);
}
vari=b.history,j=b.location,k="replaceState"ini,l="state"ini;
returnk&&l?(a.persist=function(a){
returna&&i.replaceState(a,c.title,j.href),h(i.state);
},a.event.special.persist={
setup:function(){
a(b).on("pageshow",d);
},
teardown:function(){
a(b).off("pageshow",d);
},
trigger:function(a){
a.state=h(i.state);
}}):a.persist=function(){
},{
isPersisted:e,
isBackForwardNavigated:f,
onPageshow:d,
reset:g,
clone:h,
persist:a.persist};
}),eg.module("rotate",[window.jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara,b,e,f=m();
return"resize"===f?(a=d.documentElement.clientWidth,e=-1===h?a<d.documentElement.clientHeight:h>a?!0:a===h?i:!1,h=a):(b=c.orientation,0===b||180===b?e=!0:(90===b||-90===b)&&(e=!1)),e;
}
functionf(){
varb=e();
l&&i!==b&&(i=b,a(c).trigger("rotate"));
}
functiong(a){
varb,e,i=m();
if("resize"===i)
c.setTimeout(function(){
f();
},0);
else{
if(b=300,"android"===k.os.name){
if(e=d.documentElement.clientWidth,"orientationchange"===a.type&&e===h)
returnc.setTimeout(function(){
g(a);
},500),!1;
h=e;
}
c.clearTimeout(j),j=c.setTimeout(function(){
f();
},b);
}
}
varh=-1,i=null,j=null,k=b.agent(),l=/android|ios/.test(k.os.name),m=function(){
vara;
returna="android"===k.os.name&&"2.1"===k.os.version?"resize":"onorientationchange"inc?"orientationchange":"resize",m=function(){
returna;
},a;
};
returna.event.special.rotate={
setup:function(){
h=d.documentElement.clientWidth,a(c).on(m(),g);
},
teardown:function(){
a(c).off(m(),g);
},
trigger:function(a){
a.isVertical=i;
}},{
orientationChange:m,
isVertical:e,
triggerRotate:f,
handler:g};
}),eg.module("scrollEnd",[jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara=A,c=b.agent(),d=c.os,e=c.browser,f=parseInt(d.version,10);
return"android"===d.name?a="chrome"===e.name?x:f>=3?y:z:/^(?:window|ios)$/.test(d.name)&&f>=8&&(a=y),a;
}
functionf(){
varb=a(c).on("scroll",j);
B===z&&a(d).on({
touchstart:g,
touchmove:h,
touchend:i}),B===x&&b.on("orientationchange",function(){
w=!0;
});
}
functiong(){
q=!0,r=!1,u=v=0;
}
functionh(){
r=!0;
}
functioni(){
q=!1,r&&k();
}
functionj(){
switch(B){
caseA:
n();
break;
casez:
k();
break;
casey:
o();
break;
casex:
w?w=!1:n();
}
}
functionk(){
l(),s=setInterval(m,100);
}
functionl(){
s&&clearInterval(s),s=null;
}
functionm(){
q||u!==c.pageYOffset||v!==c.pageXOffset?(u=c.pageYOffset,v=c.pageXOffset):(l(),n());
}
functionn(){
a(c).trigger("scrollend",{
top:c.pageYOffset,
left:c.pageXOffset});
}
functiono(){
clearTimeout(t),t=setTimeout(function(){
n();
},350);
}
functionp(){
a(d).off({
touchstart:g,
touchmove:h,
touchend:i}),a(c).off("scroll",j);
}
varq,r,s,t,u=0,v=0,w=!1,x=3,y=2,z=1,A=0,B=e();
returna.event.special.scrollend={
setup:function(){
f();
},
teardown:function(){
p();
}},{
getDeviceType:e,
CHROME:x,
TIMERBASE:y,
TOUCHBASE:z,
SCROLLBASE:A};
}),eg.module("class",[eg],function(a){
a.Class=function(a){
varb=function(){
"function"==typeofa.construct&&a.construct.apply(this,arguments);
};
returnb.prototype=a,b.prototype.constructor=b,b;
},a.Class.extend=function(a,b){
varc=function(){
a.apply(this,arguments),"function"==typeofb.construct&&b.construct.apply(this,arguments);
},d=function(){
};
d.prototype=a.prototype;
vare=newd();
for(varfinb)
b.hasOwnProperty(f)&&(e[f]=b[f]);
returne.constructor=c,c.prototype=e,c;
};
}),eg.module("component",[eg],function(a){
a.Component=a.Class({
construct:function(){
this.eventHandler={};
},
trigger:function(a,b){
b=b||{};
varc=this.eventHandler[a]||[],d=c.length>0;
if(!d)
return!0;
c=c.concat(),b.eventType=a;
vare=!1;
b.stop=function(){
e=!0;
};
varf,g,h=[b];
(g=arguments.length)>2&&(h=h.concat(Array.prototype.slice.call(arguments,2,g)));
vari;
for(f=0;i=c[f];f++)
i.apply(this,h);
return!e;
},
hasOn:function(a){
return!!this.eventHandler[a];
},
on:function(a,b){
if("undefined"==typeofb){
varc,d=a;
for(cind)
this.on(c,d[c]);
returnthis;
}
vare=this.eventHandler[a];
return"undefined"==typeofe&&(e=this.eventHandler[a]=[]),e.push(b),this;
},
off:function(a,b){
if(0===arguments.length)
returnthis.eventHandler={},this;
if("undefined"==typeofb){
if("string"==typeofa)
returnthis.eventHandler[a]=null,this;
varc=a;
for(vardinc)
c.hasOwnProperty(d)&&this.off(d,c[d]);
returnthis;
}
vare=this.eventHandler[a];
if(e)
for(varf,g=0;f=e[g];g++)
if(f===b){
e=e.splice(g,1);
break;
}
returnthis;
}});
}) !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f="ms"===e?"Ms"+c:d;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
}),eg.module("persist",[jQuery,window,document],function(a,b,c){
functiond(c){
!e(c.originalEvent)&&f()?a(b).trigger("persist"):g();
}
functione(a){
return!!a.persisted;
}
functionf(){
vara=b.performance;
returna&&a.navigation&&a.navigation.type===a.navigation.TYPE_BACK_FORWARD;
}
functiong(){
i.replaceState(null,c.title,j.href);
}
functionh(b){
returnnull===b?null:a.extend(!0,{},b);
}
vari=b.history,j=b.location,k="replaceState"ini,l="state"ini;
returnk&&l?(a.persist=function(a){
returna&&i.replaceState(a,c.title,j.href),h(i.state);
},a.event.special.persist={
setup:function(){
a(b).on("pageshow",d);
},
teardown:function(){
a(b).off("pageshow",d);
},
trigger:function(a){
a.state=h(i.state);
}}):a.persist=function(){
},{
isPersisted:e,
isBackForwardNavigated:f,
onPageshow:d,
reset:g,
clone:h,
persist:a.persist};
}),eg.module("rotate",[window.jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara,b,e,f=m();
return"resize"===f?(a=d.documentElement.clientWidth,e=-1===h?a<d.documentElement.clientHeight:h>a?!0:a===h?i:!1,h=a):(b=c.orientation,0===b||180===b?e=!0:(90===b||-90===b)&&(e=!1)),e;
}
functionf(){
varb=e();
l&&i!==b&&(i=b,a(c).trigger("rotate"));
}
functiong(a){
varb,e,i=m();
if("resize"===i)
c.setTimeout(function(){
f();
},0);
else{
if(b=300,"android"===k.os.name){
if(e=d.documentElement.clientWidth,"orientationchange"===a.type&&e===h)
returnc.setTimeout(function(){
g(a);
},500),!1;
h=e;
}
c.clearTimeout(j),j=c.setTimeout(function(){
f();
},b);
}
}
varh=-1,i=null,j=null,k=b.agent(),l=/android|ios/.test(k.os.name),m=function(){
vara;
returna="android"===k.os.name&&"2.1"===k.os.version?"resize":"onorientationchange"inc?"orientationchange":"resize",m=function(){
returna;
},a;
};
returna.event.special.rotate={
setup:function(){
h=d.documentElement.clientWidth,a(c).on(m(),g);
},
teardown:function(){
a(c).off(m(),g);
},
trigger:function(a){
a.isVertical=i;
}},{
orientationChange:m,
isVertical:e,
triggerRotate:f,
handler:g};
}),eg.module("scrollEnd",[jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara=A,c=b.agent(),d=c.os,e=c.browser,f=parseInt(d.version,10);
return"android"===d.name?a="chrome"===e.name?x:f>=3?y:z:/^(?:window|ios)$/.test(d.name)&&f>=8&&(a=y),a;
}
functionf(){
varb=a(c).on("scroll",j);
B===z&&a(d).on({
touchstart:g,
touchmove:h,
touchend:i}),B===x&&b.on("orientationchange",function(){
w=!0;
});
}
functiong(){
q=!0,r=!1,u=v=0;
}
functionh(){
r=!0;
}
functioni(){
q=!1,r&&k();
}
functionj(){
switch(B){
caseA:
n();
break;
casez:
k();
break;
casey:
o();
break;
casex:
w?w=!1:n();
}
}
functionk(){
l(),s=setInterval(m,100);
}
functionl(){
s&&clearInterval(s),s=null;
}
functionm(){
q||u!==c.pageYOffset||v!==c.pageXOffset?(u=c.pageYOffset,v=c.pageXOffset):(l(),n());
}
functionn(){
a(c).trigger("scrollend",{
top:c.pageYOffset,
left:c.pageXOffset});
}
functiono(){
clearTimeout(t),t=setTimeout(function(){
n();
},350);
}
functionp(){
a(d).off({
touchstart:g,
touchmove:h,
touchend:i}),a(c).off("scroll",j);
}
varq,r,s,t,u=0,v=0,w=!1,x=3,y=2,z=1,A=0,B=e();
returna.event.special.scrollend={
setup:function(){
f();
},
teardown:function(){
p();
}},{
getDeviceType:e,
CHROME:x,
TIMERBASE:y,
TOUCHBASE:z,
SCROLLBASE:A};
}),eg.module("class",[eg],function(a){
a.Class=function(a){
varb=function(){
"function"==typeofa.construct&&a.construct.apply(this,arguments);
};
returnb.prototype=a,b.prototype.constructor=b,b;
},a.Class.extend=function(a,b){
varc=function(){
a.apply(this,arguments),"function"==typeofb.construct&&b.construct.apply(this,arguments);
},d=function(){
};
d.prototype=a.prototype;
vare=newd();
for(varfinb)
b.hasOwnProperty(f)&&(e[f]=b[f]);
returne.constructor=c,c.prototype=e,c;
};
}),eg.module("component",[eg],function(a){
a.Component=a.Class({
construct:function(){
this.eventHandler={};
},
trigger:function(a,b){
b=b||{};
varc=this.eventHandler[a]||[],d=c.length>0;
if(!d)
return!0;
c=c.concat(),b.eventType=a;
vare=!1;
b.stop=function(){
e=!0;
};
varf,g,h=[b];
(g=arguments.length)>2&&(h=h.concat(Array.prototype.slice.call(arguments,2,g)));
vari;
for(f=0;i=c[f];f++)
i.apply(this,h);
return!e;
},
hasOn:function(a){
return!!this.eventHandler[a];
},
on:function(a,b){
if("undefined"==typeofb){
varc,d=a;
for(cind)
this.on(c,d[c]);
returnthis;
}
vare=this.eventHandler[a];
return"undefined"==typeofe&&(e=this.eventHandler[a]=[]),e.push(b),this;
},
off:function(a,b){
if(0===arguments.length)
returnthis.eventHandler={},this;
if("undefined"==typeofb){
if("string"==typeofa)
returnthis.eventHandler[a]=null,this;
varc=a;
for(vardinc)
c.hasOwnProperty(d)&&this.off(d,c[d]);
returnthis;
}
vare=this.eventHandler[a];
if(e)
for(varf,g=0;f=e[g];g++)
if(f===b){
e=e.splice(g,1);
break;
}
returnthis;
}});
})
745 2 !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f=("ms"===e?"Ms":e)+c;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
}),eg.module("persist",[jQuery,window,document],function(a,b,c){
functiond(c){
!e(c.originalEvent)&&f()?a(b).trigger("persist"):g();
}
functione(a){
return!!a.persisted;
}
functionf(){
vara=b.performance;
returna&&a.navigation&&a.navigation.type===a.navigation.TYPE_BACK_FORWARD;
}
functiong(){
i.replaceState(null,c.title,j.href);
}
functionh(b){
returnnull===b?null:a.extend(!0,{},b);
}
vari=b.history,j=b.location,k="replaceState"ini,l="state"ini;
returnk&&l?(a.persist=function(a){
returna&&i.replaceState(a,c.title,j.href),h(i.state);
},a.event.special.persist={
setup:function(){
a(b).on("pageshow",d);
},
teardown:function(){
a(b).off("pageshow",d);
},
trigger:function(a){
a.state=h(i.state);
}}):a.persist=function(){
},{
isPersisted:e,
isBackForwardNavigated:f,
onPageshow:d,
reset:g,
clone:h,
persist:a.persist};
}),eg.module("rotate",[window.jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara,b,e,f=m();
return"resize"===f?(a=d.documentElement.clientWidth,e=-1===h?a<d.documentElement.clientHeight:h>a?!0:a===h?i:!1,h=a):(b=c.orientation,0===b||180===b?e=!0:(90===b||-90===b)&&(e=!1)),e;
}
functionf(){
varb=e();
l&&i!==b&&(i=b,a(c).trigger("rotate"));
}
functiong(a){
varb,e,i=m();
if("resize"===i)
c.setTimeout(function(){
f();
},0);
else{
if(b=300,"android"===k.os.name){
if(e=d.documentElement.clientWidth,"orientationchange"===a.type&&e===h)
returnc.setTimeout(function(){
g(a);
},500),!1;
h=e;
}
c.clearTimeout(j),j=c.setTimeout(function(){
f();
},b);
}
}
varh=-1,i=null,j=null,k=b.agent(),l=/android|ios/.test(k.os.name),m=function(){
vara;
returna="android"===k.os.name&&"2.1"===k.os.version?"resize":"onorientationchange"inc?"orientationchange":"resize",m=function(){
returna;
},a;
};
returna.event.special.rotate={
setup:function(){
h=d.documentElement.clientWidth,a(c).on(m(),g);
},
teardown:function(){
a(c).off(m(),g);
},
trigger:function(a){
a.isVertical=i;
}},{
orientationChange:m,
isVertical:e,
triggerRotate:f,
handler:g};
}),eg.module("scrollEnd",[jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara=A,c=b.agent(),d=c.os,e=c.browser,f=parseInt(d.version,10);
return"android"===d.name?a="chrome"===e.name?x:f>=3?y:z:/^(?:window|ios)$/.test(d.name)&&f>=8&&(a=y),a;
}
functionf(){
varb=a(c).on("scroll",j);
B===z&&a(d).on({
touchstart:g,
touchmove:h,
touchend:i}),B===x&&b.on("orientationchange",function(){
w=!0;
});
}
functiong(){
q=!0,r=!1,u=v=0;
}
functionh(){
r=!0;
}
functioni(){
q=!1,r&&k();
}
functionj(){
switch(B){
caseA:
n();
break;
casez:
k();
break;
casey:
o();
break;
casex:
w?w=!1:n();
}
}
functionk(){
l(),s=setInterval(m,100);
}
functionl(){
s&&clearInterval(s),s=null;
}
functionm(){
q||u!==c.pageYOffset||v!==c.pageXOffset?(u=c.pageYOffset,v=c.pageXOffset):(l(),n());
}
functionn(){
a(c).trigger("scrollend",{
top:c.pageYOffset,
left:c.pageXOffset});
}
functiono(){
clearTimeout(t),t=setTimeout(function(){
n();
},350);
}
functionp(){
a(d).off({
touchstart:g,
touchmove:h,
touchend:i}),a(c).off("scroll",j);
}
varq,r,s,t,u=0,v=0,w=!1,x=3,y=2,z=1,A=0,B=e();
returna.event.special.scrollend={
setup:function(){
f();
},
teardown:function(){
p();
}},{
getDeviceType:e,
CHROME:x,
TIMERBASE:y,
TOUCHBASE:z,
SCROLLBASE:A};
}),eg.module("class",[eg],function(a){
a.Class=function(a){
varb=function(){
"function"==typeofa.construct&&a.construct.apply(this,arguments);
};
returnb.prototype=a,b.prototype.constructor=b,b;
},a.Class.extend=function(a,b){
varc=function(){
a.apply(this,arguments),"function"==typeofb.construct&&b.construct.apply(this,arguments);
},d=function(){
};
d.prototype=a.prototype;
vare=newd();
for(varfinb)
b.hasOwnProperty(f)&&(e[f]=b[f]);
returne.constructor=c,c.prototype=e,c;
};
}) !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f="ms"===e?"Ms"+c:d;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
}),eg.module("persist",[jQuery,window,document],function(a,b,c){
functiond(c){
!e(c.originalEvent)&&f()?a(b).trigger("persist"):g();
}
functione(a){
return!!a.persisted;
}
functionf(){
vara=b.performance;
returna&&a.navigation&&a.navigation.type===a.navigation.TYPE_BACK_FORWARD;
}
functiong(){
i.replaceState(null,c.title,j.href);
}
functionh(b){
returnnull===b?null:a.extend(!0,{},b);
}
vari=b.history,j=b.location,k="replaceState"ini,l="state"ini;
returnk&&l?(a.persist=function(a){
returna&&i.replaceState(a,c.title,j.href),h(i.state);
},a.event.special.persist={
setup:function(){
a(b).on("pageshow",d);
},
teardown:function(){
a(b).off("pageshow",d);
},
trigger:function(a){
a.state=h(i.state);
}}):a.persist=function(){
},{
isPersisted:e,
isBackForwardNavigated:f,
onPageshow:d,
reset:g,
clone:h,
persist:a.persist};
}),eg.module("rotate",[window.jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara,b,e,f=m();
return"resize"===f?(a=d.documentElement.clientWidth,e=-1===h?a<d.documentElement.clientHeight:h>a?!0:a===h?i:!1,h=a):(b=c.orientation,0===b||180===b?e=!0:(90===b||-90===b)&&(e=!1)),e;
}
functionf(){
varb=e();
l&&i!==b&&(i=b,a(c).trigger("rotate"));
}
functiong(a){
varb,e,i=m();
if("resize"===i)
c.setTimeout(function(){
f();
},0);
else{
if(b=300,"android"===k.os.name){
if(e=d.documentElement.clientWidth,"orientationchange"===a.type&&e===h)
returnc.setTimeout(function(){
g(a);
},500),!1;
h=e;
}
c.clearTimeout(j),j=c.setTimeout(function(){
f();
},b);
}
}
varh=-1,i=null,j=null,k=b.agent(),l=/android|ios/.test(k.os.name),m=function(){
vara;
returna="android"===k.os.name&&"2.1"===k.os.version?"resize":"onorientationchange"inc?"orientationchange":"resize",m=function(){
returna;
},a;
};
returna.event.special.rotate={
setup:function(){
h=d.documentElement.clientWidth,a(c).on(m(),g);
},
teardown:function(){
a(c).off(m(),g);
},
trigger:function(a){
a.isVertical=i;
}},{
orientationChange:m,
isVertical:e,
triggerRotate:f,
handler:g};
}),eg.module("scrollEnd",[jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara=A,c=b.agent(),d=c.os,e=c.browser,f=parseInt(d.version,10);
return"android"===d.name?a="chrome"===e.name?x:f>=3?y:z:/^(?:window|ios)$/.test(d.name)&&f>=8&&(a=y),a;
}
functionf(){
varb=a(c).on("scroll",j);
B===z&&a(d).on({
touchstart:g,
touchmove:h,
touchend:i}),B===x&&b.on("orientationchange",function(){
w=!0;
});
}
functiong(){
q=!0,r=!1,u=v=0;
}
functionh(){
r=!0;
}
functioni(){
q=!1,r&&k();
}
functionj(){
switch(B){
caseA:
n();
break;
casez:
k();
break;
casey:
o();
break;
casex:
w?w=!1:n();
}
}
functionk(){
l(),s=setInterval(m,100);
}
functionl(){
s&&clearInterval(s),s=null;
}
functionm(){
q||u!==c.pageYOffset||v!==c.pageXOffset?(u=c.pageYOffset,v=c.pageXOffset):(l(),n());
}
functionn(){
a(c).trigger("scrollend",{
top:c.pageYOffset,
left:c.pageXOffset});
}
functiono(){
clearTimeout(t),t=setTimeout(function(){
n();
},350);
}
functionp(){
a(d).off({
touchstart:g,
touchmove:h,
touchend:i}),a(c).off("scroll",j);
}
varq,r,s,t,u=0,v=0,w=!1,x=3,y=2,z=1,A=0,B=e();
returna.event.special.scrollend={
setup:function(){
f();
},
teardown:function(){
p();
}},{
getDeviceType:e,
CHROME:x,
TIMERBASE:y,
TOUCHBASE:z,
SCROLLBASE:A};
}),eg.module("class",[eg],function(a){
a.Class=function(a){
varb=function(){
"function"==typeofa.construct&&a.construct.apply(this,arguments);
};
returnb.prototype=a,b.prototype.constructor=b,b;
},a.Class.extend=function(a,b){
varc=function(){
a.apply(this,arguments),"function"==typeofb.construct&&b.construct.apply(this,arguments);
},d=function(){
};
d.prototype=a.prototype;
vare=newd();
for(varfinb)
b.hasOwnProperty(f)&&(e[f]=b[f]);
returne.constructor=c,c.prototype=e,c;
};
})
746 2 !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f=("ms"===e?"Ms":e)+c;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
}),eg.module("persist",[jQuery,window,document],function(a,b,c){
functiond(c){
!e(c.originalEvent)&&f()?a(b).trigger("persist"):g();
}
functione(a){
return!!a.persisted;
}
functionf(){
vara=b.performance;
returna&&a.navigation&&a.navigation.type===a.navigation.TYPE_BACK_FORWARD;
}
functiong(){
i.replaceState(null,c.title,j.href);
}
functionh(b){
returnnull===b?null:a.extend(!0,{},b);
}
vari=b.history,j=b.location,k="replaceState"ini,l="state"ini;
returnk&&l?(a.persist=function(a){
returna&&i.replaceState(a,c.title,j.href),h(i.state);
},a.event.special.persist={
setup:function(){
a(b).on("pageshow",d);
},
teardown:function(){
a(b).off("pageshow",d);
},
trigger:function(a){
a.state=h(i.state);
}}):a.persist=function(){
},{
isPersisted:e,
isBackForwardNavigated:f,
onPageshow:d,
reset:g,
clone:h,
persist:a.persist};
}),eg.module("rotate",[window.jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara,b,e,f=m();
return"resize"===f?(a=d.documentElement.clientWidth,e=-1===h?a<d.documentElement.clientHeight:h>a?!0:a===h?i:!1,h=a):(b=c.orientation,0===b||180===b?e=!0:(90===b||-90===b)&&(e=!1)),e;
}
functionf(){
varb=e();
l&&i!==b&&(i=b,a(c).trigger("rotate"));
}
functiong(a){
varb,e,i=m();
if("resize"===i)
c.setTimeout(function(){
f();
},0);
else{
if(b=300,"android"===k.os.name){
if(e=d.documentElement.clientWidth,"orientationchange"===a.type&&e===h)
returnc.setTimeout(function(){
g(a);
},500),!1;
h=e;
}
c.clearTimeout(j),j=c.setTimeout(function(){
f();
},b);
}
}
varh=-1,i=null,j=null,k=b.agent(),l=/android|ios/.test(k.os.name),m=function(){
vara;
returna="android"===k.os.name&&"2.1"===k.os.version?"resize":"onorientationchange"inc?"orientationchange":"resize",m=function(){
returna;
},a;
};
returna.event.special.rotate={
setup:function(){
h=d.documentElement.clientWidth,a(c).on(m(),g);
},
teardown:function(){
a(c).off(m(),g);
},
trigger:function(a){
a.isVertical=i;
}},{
orientationChange:m,
isVertical:e,
triggerRotate:f,
handler:g};
}),eg.module("scrollEnd",[jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara=A,c=b.agent(),d=c.os,e=c.browser,f=parseInt(d.version,10);
return"android"===d.name?a="chrome"===e.name?x:f>=3?y:z:/^(?:window|ios)$/.test(d.name)&&f>=8&&(a=y),a;
}
functionf(){
varb=a(c).on("scroll",j);
B===z&&a(d).on({
touchstart:g,
touchmove:h,
touchend:i}),B===x&&b.on("orientationchange",function(){
w=!0;
});
}
functiong(){
q=!0,r=!1,u=v=0;
}
functionh(){
r=!0;
}
functioni(){
q=!1,r&&k();
}
functionj(){
switch(B){
caseA:
n();
break;
casez:
k();
break;
casey:
o();
break;
casex:
w?w=!1:n();
}
}
functionk(){
l(),s=setInterval(m,100);
}
functionl(){
s&&clearInterval(s),s=null;
}
functionm(){
q||u!==c.pageYOffset||v!==c.pageXOffset?(u=c.pageYOffset,v=c.pageXOffset):(l(),n());
}
functionn(){
a(c).trigger("scrollend",{
top:c.pageYOffset,
left:c.pageXOffset});
}
functiono(){
clearTimeout(t),t=setTimeout(function(){
n();
},350);
}
functionp(){
a(d).off({
touchstart:g,
touchmove:h,
touchend:i}),a(c).off("scroll",j);
}
varq,r,s,t,u=0,v=0,w=!1,x=3,y=2,z=1,A=0,B=e();
returna.event.special.scrollend={
setup:function(){
f();
},
teardown:function(){
p();
}},{
getDeviceType:e,
CHROME:x,
TIMERBASE:y,
TOUCHBASE:z,
SCROLLBASE:A};
}) !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f="ms"===e?"Ms"+c:d;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
}),eg.module("persist",[jQuery,window,document],function(a,b,c){
functiond(c){
!e(c.originalEvent)&&f()?a(b).trigger("persist"):g();
}
functione(a){
return!!a.persisted;
}
functionf(){
vara=b.performance;
returna&&a.navigation&&a.navigation.type===a.navigation.TYPE_BACK_FORWARD;
}
functiong(){
i.replaceState(null,c.title,j.href);
}
functionh(b){
returnnull===b?null:a.extend(!0,{},b);
}
vari=b.history,j=b.location,k="replaceState"ini,l="state"ini;
returnk&&l?(a.persist=function(a){
returna&&i.replaceState(a,c.title,j.href),h(i.state);
},a.event.special.persist={
setup:function(){
a(b).on("pageshow",d);
},
teardown:function(){
a(b).off("pageshow",d);
},
trigger:function(a){
a.state=h(i.state);
}}):a.persist=function(){
},{
isPersisted:e,
isBackForwardNavigated:f,
onPageshow:d,
reset:g,
clone:h,
persist:a.persist};
}),eg.module("rotate",[window.jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara,b,e,f=m();
return"resize"===f?(a=d.documentElement.clientWidth,e=-1===h?a<d.documentElement.clientHeight:h>a?!0:a===h?i:!1,h=a):(b=c.orientation,0===b||180===b?e=!0:(90===b||-90===b)&&(e=!1)),e;
}
functionf(){
varb=e();
l&&i!==b&&(i=b,a(c).trigger("rotate"));
}
functiong(a){
varb,e,i=m();
if("resize"===i)
c.setTimeout(function(){
f();
},0);
else{
if(b=300,"android"===k.os.name){
if(e=d.documentElement.clientWidth,"orientationchange"===a.type&&e===h)
returnc.setTimeout(function(){
g(a);
},500),!1;
h=e;
}
c.clearTimeout(j),j=c.setTimeout(function(){
f();
},b);
}
}
varh=-1,i=null,j=null,k=b.agent(),l=/android|ios/.test(k.os.name),m=function(){
vara;
returna="android"===k.os.name&&"2.1"===k.os.version?"resize":"onorientationchange"inc?"orientationchange":"resize",m=function(){
returna;
},a;
};
returna.event.special.rotate={
setup:function(){
h=d.documentElement.clientWidth,a(c).on(m(),g);
},
teardown:function(){
a(c).off(m(),g);
},
trigger:function(a){
a.isVertical=i;
}},{
orientationChange:m,
isVertical:e,
triggerRotate:f,
handler:g};
}),eg.module("scrollEnd",[jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara=A,c=b.agent(),d=c.os,e=c.browser,f=parseInt(d.version,10);
return"android"===d.name?a="chrome"===e.name?x:f>=3?y:z:/^(?:window|ios)$/.test(d.name)&&f>=8&&(a=y),a;
}
functionf(){
varb=a(c).on("scroll",j);
B===z&&a(d).on({
touchstart:g,
touchmove:h,
touchend:i}),B===x&&b.on("orientationchange",function(){
w=!0;
});
}
functiong(){
q=!0,r=!1,u=v=0;
}
functionh(){
r=!0;
}
functioni(){
q=!1,r&&k();
}
functionj(){
switch(B){
caseA:
n();
break;
casez:
k();
break;
casey:
o();
break;
casex:
w?w=!1:n();
}
}
functionk(){
l(),s=setInterval(m,100);
}
functionl(){
s&&clearInterval(s),s=null;
}
functionm(){
q||u!==c.pageYOffset||v!==c.pageXOffset?(u=c.pageYOffset,v=c.pageXOffset):(l(),n());
}
functionn(){
a(c).trigger("scrollend",{
top:c.pageYOffset,
left:c.pageXOffset});
}
functiono(){
clearTimeout(t),t=setTimeout(function(){
n();
},350);
}
functionp(){
a(d).off({
touchstart:g,
touchmove:h,
touchend:i}),a(c).off("scroll",j);
}
varq,r,s,t,u=0,v=0,w=!1,x=3,y=2,z=1,A=0,B=e();
returna.event.special.scrollend={
setup:function(){
f();
},
teardown:function(){
p();
}},{
getDeviceType:e,
CHROME:x,
TIMERBASE:y,
TOUCHBASE:z,
SCROLLBASE:A};
})
747 2 !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f=("ms"===e?"Ms":e)+c;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
}),eg.module("persist",[jQuery,window,document],function(a,b,c){
functiond(c){
!e(c.originalEvent)&&f()?a(b).trigger("persist"):g();
}
functione(a){
return!!a.persisted;
}
functionf(){
vara=b.performance;
returna&&a.navigation&&a.navigation.type===a.navigation.TYPE_BACK_FORWARD;
}
functiong(){
i.replaceState(null,c.title,j.href);
}
functionh(b){
returnnull===b?null:a.extend(!0,{},b);
}
vari=b.history,j=b.location,k="replaceState"ini,l="state"ini;
returnk&&l?(a.persist=function(a){
returna&&i.replaceState(a,c.title,j.href),h(i.state);
},a.event.special.persist={
setup:function(){
a(b).on("pageshow",d);
},
teardown:function(){
a(b).off("pageshow",d);
},
trigger:function(a){
a.state=h(i.state);
}}):a.persist=function(){
},{
isPersisted:e,
isBackForwardNavigated:f,
onPageshow:d,
reset:g,
clone:h,
persist:a.persist};
}),eg.module("rotate",[window.jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara,b,e,f=m();
return"resize"===f?(a=d.documentElement.clientWidth,e=-1===h?a<d.documentElement.clientHeight:h>a?!0:a===h?i:!1,h=a):(b=c.orientation,0===b||180===b?e=!0:(90===b||-90===b)&&(e=!1)),e;
}
functionf(){
varb=e();
l&&i!==b&&(i=b,a(c).trigger("rotate"));
}
functiong(a){
varb,e,i=m();
if("resize"===i)
c.setTimeout(function(){
f();
},0);
else{
if(b=300,"android"===k.os.name){
if(e=d.documentElement.clientWidth,"orientationchange"===a.type&&e===h)
returnc.setTimeout(function(){
g(a);
},500),!1;
h=e;
}
c.clearTimeout(j),j=c.setTimeout(function(){
f();
},b);
}
}
varh=-1,i=null,j=null,k=b.agent(),l=/android|ios/.test(k.os.name),m=function(){
vara;
returna="android"===k.os.name&&"2.1"===k.os.version?"resize":"onorientationchange"inc?"orientationchange":"resize",m=function(){
returna;
},a;
};
returna.event.special.rotate={
setup:function(){
h=d.documentElement.clientWidth,a(c).on(m(),g);
},
teardown:function(){
a(c).off(m(),g);
},
trigger:function(a){
a.isVertical=i;
}},{
orientationChange:m,
isVertical:e,
triggerRotate:f,
handler:g};
}) !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f="ms"===e?"Ms"+c:d;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
}),eg.module("persist",[jQuery,window,document],function(a,b,c){
functiond(c){
!e(c.originalEvent)&&f()?a(b).trigger("persist"):g();
}
functione(a){
return!!a.persisted;
}
functionf(){
vara=b.performance;
returna&&a.navigation&&a.navigation.type===a.navigation.TYPE_BACK_FORWARD;
}
functiong(){
i.replaceState(null,c.title,j.href);
}
functionh(b){
returnnull===b?null:a.extend(!0,{},b);
}
vari=b.history,j=b.location,k="replaceState"ini,l="state"ini;
returnk&&l?(a.persist=function(a){
returna&&i.replaceState(a,c.title,j.href),h(i.state);
},a.event.special.persist={
setup:function(){
a(b).on("pageshow",d);
},
teardown:function(){
a(b).off("pageshow",d);
},
trigger:function(a){
a.state=h(i.state);
}}):a.persist=function(){
},{
isPersisted:e,
isBackForwardNavigated:f,
onPageshow:d,
reset:g,
clone:h,
persist:a.persist};
}),eg.module("rotate",[window.jQuery,eg,window,document],function(a,b,c,d){
functione(){
vara,b,e,f=m();
return"resize"===f?(a=d.documentElement.clientWidth,e=-1===h?a<d.documentElement.clientHeight:h>a?!0:a===h?i:!1,h=a):(b=c.orientation,0===b||180===b?e=!0:(90===b||-90===b)&&(e=!1)),e;
}
functionf(){
varb=e();
l&&i!==b&&(i=b,a(c).trigger("rotate"));
}
functiong(a){
varb,e,i=m();
if("resize"===i)
c.setTimeout(function(){
f();
},0);
else{
if(b=300,"android"===k.os.name){
if(e=d.documentElement.clientWidth,"orientationchange"===a.type&&e===h)
returnc.setTimeout(function(){
g(a);
},500),!1;
h=e;
}
c.clearTimeout(j),j=c.setTimeout(function(){
f();
},b);
}
}
varh=-1,i=null,j=null,k=b.agent(),l=/android|ios/.test(k.os.name),m=function(){
vara;
returna="android"===k.os.name&&"2.1"===k.os.version?"resize":"onorientationchange"inc?"orientationchange":"resize",m=function(){
returna;
},a;
};
returna.event.special.rotate={
setup:function(){
h=d.documentElement.clientWidth,a(c).on(m(),g);
},
teardown:function(){
a(c).off(m(),g);
},
trigger:function(a){
a.isVertical=i;
}},{
orientationChange:m,
isVertical:e,
triggerRotate:f,
handler:g};
})
748 2 !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f=("ms"===e?"Ms":e)+c;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
}),eg.module("persist",[jQuery,window,document],function(a,b,c){
functiond(c){
!e(c.originalEvent)&&f()?a(b).trigger("persist"):g();
}
functione(a){
return!!a.persisted;
}
functionf(){
vara=b.performance;
returna&&a.navigation&&a.navigation.type===a.navigation.TYPE_BACK_FORWARD;
}
functiong(){
i.replaceState(null,c.title,j.href);
}
functionh(b){
returnnull===b?null:a.extend(!0,{},b);
}
vari=b.history,j=b.location,k="replaceState"ini,l="state"ini;
returnk&&l?(a.persist=function(a){
returna&&i.replaceState(a,c.title,j.href),h(i.state);
},a.event.special.persist={
setup:function(){
a(b).on("pageshow",d);
},
teardown:function(){
a(b).off("pageshow",d);
},
trigger:function(a){
a.state=h(i.state);
}}):a.persist=function(){
},{
isPersisted:e,
isBackForwardNavigated:f,
onPageshow:d,
reset:g,
clone:h,
persist:a.persist};
}) !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f="ms"===e?"Ms"+c:d;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
}),eg.module("persist",[jQuery,window,document],function(a,b,c){
functiond(c){
!e(c.originalEvent)&&f()?a(b).trigger("persist"):g();
}
functione(a){
return!!a.persisted;
}
functionf(){
vara=b.performance;
returna&&a.navigation&&a.navigation.type===a.navigation.TYPE_BACK_FORWARD;
}
functiong(){
i.replaceState(null,c.title,j.href);
}
functionh(b){
returnnull===b?null:a.extend(!0,{},b);
}
vari=b.history,j=b.location,k="replaceState"ini,l="state"ini;
returnk&&l?(a.persist=function(a){
returna&&i.replaceState(a,c.title,j.href),h(i.state);
},a.event.special.persist={
setup:function(){
a(b).on("pageshow",d);
},
teardown:function(){
a(b).off("pageshow",d);
},
trigger:function(a){
a.state=h(i.state);
}}):a.persist=function(){
},{
isPersisted:e,
isBackForwardNavigated:f,
onPageshow:d,
reset:g,
clone:h,
persist:a.persist};
})
749 2 !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f=("ms"===e?"Ms":e)+c;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
}) !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f="ms"===e?"Ms"+c:d;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}),eg.module("eg",[window.jQuery,eg,window],function(a,b,c){
vard=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.msRequestAnimationFrame,e=c.cancelAnimationFrame||c.webkitCancelAnimationFrame||c.mozCancelAnimationFrame||c.msCancelAnimationFrame;
if(d&&!e){
varf={},g=d;
d=function(a){
functionb(){
f[c]&&a();
}
varc=g(b);
returnf[c]=!0,c;
},e=function(a){
deletef[a];
};
}else
d&&e||(d=function(a){
returnc.setTimeout(a,16);
},e=c.clearTimeout);
varh,i={
VERSION:"0.0.1",
hook:{},
agent:function(a){
h=a||navigator.userAgent;
varb=/(iPhone|iPad)?OS([\d|_]+)/.exec(h)||/(Android)([\w.]+)/.exec(h)||/(WindowsNT)([\d|\.]+)/.exec(h)||/(WindowsPhone)([\d|\.]+)/.exec(h)||/(Windows)([\w|\.]+)/.exec(h)||/(MacOSX)(([\w.]+))?/.exec(h)||[],c=/(Chrome|CriOS|Firefox)[\s\/]([\w.]+)/.exec(h)||/(MSIE|Trident)[\/\s]([\d.]+)/.exec(h)||/(PhantomJS)\/([\d.]+)/.exec(h)||[];
b.length>=3&&(/iPhone|iPad/.test(h)?b[1]="ios":-1!==h.indexOf("Win")?(b[1]="window",b[2]="2000"===b[2]?"5.0":b[2]):b[1]=-1!==h.indexOf("Mac")?"mac":b[1].toLowerCase(),b[2]=(b[2]||"").replace(/\_/g,".").replace(/\s/g,"")),c.length>=3?c[1]=/Chrome|CriOS/.test(h)?-1!==h.indexOf("SAMSUNG")?"sbrowser":"chrome":/MSIE|Trident/.test(h)?"ie":c[1].toLowerCase():0===c.length&&b[1]&&"android"!==b[1]&&(c=/(Safari)\/([\w.]+)/.exec(h)||("ios"===b[1]?["","safari"]:["",""]),c[1]=c[1].toLowerCase(),c[0]&&-1!==c[1].indexOf("safari")&&(c[2]=-1!==h.indexOf("Apple")?h.match(/Version\/([\d.]+)/)[1]||null:null));
vard={
os:{
name:b[1]||"",
version:b[2]||"-1"},
browser:{
name:c[1]||"default",
version:c[2]||"-1"}};
returnd=this._checkWebview(d,h),d=this.hook.agent?this.hook.agent(d):d,this.agent=function(){
returnd;
},d;
},
_checkWebview:function(a,b){
returna.browser.webview="android"===a.os.name&&b.indexOf(";wv")>-1||"ios"===a.os.name&&"-1"===a.browser.version||b.indexOf("NAVER")>-1||b.indexOf("Daum")>-1||!1,a;
},
translate:function(a,b,c){
returnc=c||!1,"translate"+(c?"3d(":"(")+a+","+b+(c?",0)":")");
},
isHWAccelerable:function(){
vara,b=!1,c=this.agent(),d=c.os.version,e=c.browser.name,f=c.browser.version;
return-1!==e.indexOf("chrome")?b=f>="25":/ie|firefox|safari|inapp/.test(e)?b=!0:-1!==c.os.name.indexOf("android")&&(a=(h.match(/\(.*\)/)||[null])[0],b=d>="4.1.0"&&!/EK-GN120|SM-G386F/.test(a)||d>="4.0.3"&&/SHW-|SHV-|GT-|SCH-|SGH-|SPH-|LG-F160|LG-F100|LG-F180|LG-F200|EK-|IM-A|LG-F240|LG-F260/.test(a)&&!/SHW-M420|SHW-M200|GT-S7562/.test(a)),b=this.hook.isHWAccelerable?this.hook.isHWAccelerable(b,c):b,this.isHWAccelerable=function(){
returnb;
},b;
},
isTransitional:function(){
vara=!1,b=this.agent(),c=b.browser.name;
if(/chrome|firefox/.test(c))
a=!0;
else
switch(b.os.name){
case"ios":
a=/safari|inapp/.test(c)&&parseInt(b.os.version,10)<6;
break;
case"window":
a=-1!==c.indexOf("safari")||-1!==c.indexOf("ie")&&parseInt(b.browser.nativeVersion,10)>=10;
break;
default:
a=/chrome|firefox|safari/.test(c);
}
returna=this.hook.isTransitional?this.hook.isTransitional(a,b):a,this.isTransitional=function(){
returna;
},a;
},
_hasClickBug:function(){
vara=this.agent(),b="ios"===a.os.name;
returnb=this.hook._hasClickBug?this.hook._hasClickBug(b,a):b,this._hasClickBug=function(){
returnb;
},b;
},
requestAnimationFrame:function(a){
returnd(a);
},
cancelAnimationFrame:function(a){
e(a);
}};
for(varjini)
i.hasOwnProperty(j)&&(b[j]=i[j]);
b.DIRECTION_NONE=1,b.DIRECTION_LEFT=2,b.DIRECTION_RIGHT=4,b.DIRECTION_UP=8,b.DIRECTION_DOWN=16,b.DIRECTION_HORIZONTAL=b.DIRECTION_LEFT|b.DIRECTION_RIGHT,b.DIRECTION_VERTICAL=b.DIRECTION_UP|b.DIRECTION_DOWN,b.DIRECTION_ALL=b.DIRECTION_HORIZONTAL|b.DIRECTION_VERTICAL;
})
750 2 !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f=("ms"===e?"Ms":e)+c;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
}) !function(a){
a.eg={},a.eg.module=function(b,c,d){
d.apply(a,c);
};
}(window),eg.module("css",[window.jQuery,document],function(a,b){
if(!a.cssHooks)
thrownewError("jQuery1.4.3+isneededforthisplugintowork");
if(!(a.fn&&a.fn.jquery&&a.fn.jquery.replace(/\./,"")>="18")){
varc=["Webkit","Moz","O","ms"],d=["transitionProperty","transitionDuration","transition","transform","transitionTimingFunction"],e=function(){
for(vara=(b.head||b.getElementsByTagName("head")[0]).style,d=0,e=c.length;e>d;d++)
if(c[d]+"Transition"ina)
returnc[d];
}();
if(e){
for(varf=function(b){
varc=b.charAt(0).toUpperCase()+b.slice(1),d=e+c,f="ms"===e?"Ms"+c:d;
a.cssHooks[c]=a.cssHooks[e.toLowerCase()+c]=a.cssHooks[b]={
get:function(b,c){
returnc?a.css(b,f):b.style[d];
},
set:function(a,b){
a.style[d]=b;
}};
},g=0,h=d.length;h>g;g++)
f(d[g]);
return{
vendorPrefix:e,
setCssHooks:f};
}
}
})
751 2 ("ms"===e?"Ms":e)+c e+c
752 2 0===b 180===b
753 2 180===b 0===b
754 2 90===b -90===b
755 2 a[0]/2*d a[1]/2*d
756 2 a[0]/2 a[1]/2
757 2 0===h[0] 0===h[1]
758 21 $.fn&&$.fn.jquery&&$.fn.jquery.replace(/[.]/,"")>="18" $.fn&&$.fn.jquery&&$.fn.jquery.replace(/\./,"")>="18"
759 21 $.fn.jquery&&$.fn.jquery.replace(/[.]/,"")>="18" $.fn.jquery&&$.fn.jquery.replace(/\./,"")>="18"
760 21 $.fn.jquery.replace(/[.]/,"")>="18" $.fn.jquery.replace(/\./,"")>="18"
761 0 1/t 1/e
762 0 1/e 1/t
763 0 s(e,t),l(e,[{
key:"getCrossStyle",
value:function(t){
return{
position:"absolute",
width:3,
height:14,
transform:"before"===t?"rotate(45deg)":"rotate(-45deg)"};
}},{
key:"render",
value:function(){
vart,e=this,r={
position:"absolute",
width:24,
height:24,
right:8,
top:8},n={
position:"absolute",
left:0,
top:0,
width:"100%",
height:"100%",
margin:0,
padding:0,
border:"none",
textIndent:-99999,
background:"transparent",
color:"transparent",
outline:"none",
cursor:"pointer"};
if(this.props.customIcon){
vara={
className:"bm-cross",
style:i({
width:"100%",
height:"100%"},this.props.styles.bmCross)};
t=d["default"].cloneElement(this.props.customIcon,a);
}else
t=d["default"].createElement("span",{
style:{
position:"absolute",
top:"6px",
right:"14px"}},["before","after"].map(function(t,r){
returnd["default"].createElement("span",{
key:r,
className:("bm-cross"+e.props.crossClassName).trim(),
style:i({},e.getCrossStyle(t),e.props.styles.bmCross)});
}));
returnd["default"].createElement("div",{
className:("bm-cross-button"+this.props.className).trim(),
style:i({},r,this.props.styles.bmCrossButton)},t,d["default"].createElement("button",{
onClick:this.props.onClick,
style:n},"CloseMenu"));
}}]),e s(e,t),l(e,[{
key:"getCrossStyle",
value:function(t){
return{
position:"absolute",
width:3,
height:14,
transform:"before"===t?"rotate(45deg)":"rotate(-45deg)"};
}},{
key:"render",
value:function(){
vart,e=this,r={
position:"absolute",
width:24,
height:24,
right:8,
top:8},n={
position:"absolute",
left:0,
top:0,
width:"100%",
height:"100%",
margin:0,
padding:0,
border:"none",
fontSize:0,
background:"transparent",
color:"transparent",
outline:"none",
cursor:"pointer"};
if(this.props.customIcon){
vara={
className:"bm-cross",
style:i({
width:"100%",
height:"100%"},this.props.styles.bmCross)};
t=d["default"].cloneElement(this.props.customIcon,a);
}else
t=d["default"].createElement("span",{
style:{
position:"absolute",
top:"6px",
right:"14px"}},["before","after"].map(function(t,r){
returnd["default"].createElement("span",{
key:r,
className:("bm-cross"+e.props.crossClassName).trim(),
style:i({},e.getCrossStyle(t),e.props.styles.bmCross)});
}));
returnd["default"].createElement("div",{
className:("bm-cross-button"+this.props.className).trim(),
style:i({},r,this.props.styles.bmCrossButton)},t,d["default"].createElement("button",{
onClick:this.props.onClick,
style:n},"CloseMenu"));
}}]),e
764 0 s(e,t),l(e,[{
key:"getCrossStyle",
value:function(t){
return{
position:"absolute",
width:3,
height:14,
transform:"before"===t?"rotate(45deg)":"rotate(-45deg)"};
}},{
key:"render",
value:function(){
vart,e=this,r={
position:"absolute",
width:24,
height:24,
right:8,
top:8},n={
position:"absolute",
left:0,
top:0,
width:"100%",
height:"100%",
margin:0,
padding:0,
border:"none",
textIndent:-99999,
background:"transparent",
color:"transparent",
outline:"none",
cursor:"pointer"};
if(this.props.customIcon){
vara={
className:"bm-cross",
style:i({
width:"100%",
height:"100%"},this.props.styles.bmCross)};
t=d["default"].cloneElement(this.props.customIcon,a);
}else
t=d["default"].createElement("span",{
style:{
position:"absolute",
top:"6px",
right:"14px"}},["before","after"].map(function(t,r){
returnd["default"].createElement("span",{
key:r,
className:("bm-cross"+e.props.crossClassName).trim(),
style:i({},e.getCrossStyle(t),e.props.styles.bmCross)});
}));
returnd["default"].createElement("div",{
className:("bm-cross-button"+this.props.className).trim(),
style:i({},r,this.props.styles.bmCrossButton)},t,d["default"].createElement("button",{
onClick:this.props.onClick,
style:n},"CloseMenu"));
}}]) s(e,t),l(e,[{
key:"getCrossStyle",
value:function(t){
return{
position:"absolute",
width:3,
height:14,
transform:"before"===t?"rotate(45deg)":"rotate(-45deg)"};
}},{
key:"render",
value:function(){
vart,e=this,r={
position:"absolute",
width:24,
height:24,
right:8,
top:8},n={
position:"absolute",
left:0,
top:0,
width:"100%",
height:"100%",
margin:0,
padding:0,
border:"none",
fontSize:0,
background:"transparent",
color:"transparent",
outline:"none",
cursor:"pointer"};
if(this.props.customIcon){
vara={
className:"bm-cross",
style:i({
width:"100%",
height:"100%"},this.props.styles.bmCross)};
t=d["default"].cloneElement(this.props.customIcon,a);
}else
t=d["default"].createElement("span",{
style:{
position:"absolute",
top:"6px",
right:"14px"}},["before","after"].map(function(t,r){
returnd["default"].createElement("span",{
key:r,
className:("bm-cross"+e.props.crossClassName).trim(),
style:i({},e.getCrossStyle(t),e.props.styles.bmCross)});
}));
returnd["default"].createElement("div",{
className:("bm-cross-button"+this.props.className).trim(),
style:i({},r,this.props.styles.bmCrossButton)},t,d["default"].createElement("button",{
onClick:this.props.onClick,
style:n},"CloseMenu"));
}}])
765 0 1/t 1/e
766 0 1/e 1/t
767 0 s(e,t),l(e,[{
key:"getCrossStyle",
value:function(t){
return{
position:"absolute",
width:3,
height:14,
transform:"before"===t?"rotate(45deg)":"rotate(-45deg)"};
}},{
key:"render",
value:function(){
vart,e=this,r={
position:"absolute",
width:24,
height:24,
right:8,
top:8},n={
position:"absolute",
left:0,
top:0,
width:"100%",
height:"100%",
margin:0,
padding:0,
border:"none",
textIndent:-99999,
background:"transparent",
color:"transparent",
outline:"none",
cursor:"pointer"};
if(this.props.customIcon){
vara={
className:"bm-cross",
style:i({
width:"100%",
height:"100%"},this.props.styles.bmCross)};
t=d["default"].cloneElement(this.props.customIcon,a);
}else
t=d["default"].createElement("span",{
style:{
position:"absolute",
top:"6px",
right:"14px"}},["before","after"].map(function(t,r){
returnd["default"].createElement("span",{
key:r,
className:("bm-cross"+e.props.crossClassName).trim(),
style:i({},e.getCrossStyle(t),e.props.styles.bmCross)});
}));
returnd["default"].createElement("div",{
className:("bm-cross-button"+this.props.className).trim(),
style:i({},r,this.props.styles.bmCrossButton)},t,d["default"].createElement("button",{
onClick:this.props.onClick,
style:n},"CloseMenu"));
}}]),e s(e,t),l(e,[{
key:"getCrossStyle",
value:function(t){
return{
position:"absolute",
width:3,
height:14,
transform:"before"===t?"rotate(45deg)":"rotate(-45deg)"};
}},{
key:"render",
value:function(){
vart,e=this,r={
position:"absolute",
width:24,
height:24,
right:8,
top:8},n={
position:"absolute",
left:0,
top:0,
width:"100%",
height:"100%",
margin:0,
padding:0,
border:"none",
textIndent:-9999,
background:"transparent",
color:"transparent",
outline:"none",
cursor:"pointer"};
if(this.props.customIcon){
vara={
className:"bm-cross",
style:i({
width:"100%",
height:"100%"},this.props.styles.bmCross)};
t=d["default"].cloneElement(this.props.customIcon,a);
}else
t=d["default"].createElement("span",{
style:{
position:"absolute",
top:"6px",
right:"14px"}},["before","after"].map(function(t,r){
returnd["default"].createElement("span",{
key:r,
className:("bm-cross"+e.props.crossClassName).trim(),
style:i({},e.getCrossStyle(t),e.props.styles.bmCross)});
}));
returnd["default"].createElement("div",{
className:("bm-cross-button"+this.props.className).trim(),
style:i({},r,this.props.styles.bmCrossButton)},t,d["default"].createElement("button",{
onClick:this.props.onClick,
style:n},"CloseMenu"));
}}]),e
768 0 s(e,t),l(e,[{
key:"getCrossStyle",
value:function(t){
return{
position:"absolute",
width:3,
height:14,
transform:"before"===t?"rotate(45deg)":"rotate(-45deg)"};
}},{
key:"render",
value:function(){
vart,e=this,r={
position:"absolute",
width:24,
height:24,
right:8,
top:8},n={
position:"absolute",
left:0,
top:0,
width:"100%",
height:"100%",
margin:0,
padding:0,
border:"none",
textIndent:-99999,
background:"transparent",
color:"transparent",
outline:"none",
cursor:"pointer"};
if(this.props.customIcon){
vara={
className:"bm-cross",
style:i({
width:"100%",
height:"100%"},this.props.styles.bmCross)};
t=d["default"].cloneElement(this.props.customIcon,a);
}else
t=d["default"].createElement("span",{
style:{
position:"absolute",
top:"6px",
right:"14px"}},["before","after"].map(function(t,r){
returnd["default"].createElement("span",{
key:r,
className:("bm-cross"+e.props.crossClassName).trim(),
style:i({},e.getCrossStyle(t),e.props.styles.bmCross)});
}));
returnd["default"].createElement("div",{
className:("bm-cross-button"+this.props.className).trim(),
style:i({},r,this.props.styles.bmCrossButton)},t,d["default"].createElement("button",{
onClick:this.props.onClick,
style:n},"CloseMenu"));
}}]) s(e,t),l(e,[{
key:"getCrossStyle",
value:function(t){
return{
position:"absolute",
width:3,
height:14,
transform:"before"===t?"rotate(45deg)":"rotate(-45deg)"};
}},{
key:"render",
value:function(){
vart,e=this,r={
position:"absolute",
width:24,
height:24,
right:8,
top:8},n={
position:"absolute",
left:0,
top:0,
width:"100%",
height:"100%",
margin:0,
padding:0,
border:"none",
textIndent:-9999,
background:"transparent",
color:"transparent",
outline:"none",
cursor:"pointer"};
if(this.props.customIcon){
vara={
className:"bm-cross",
style:i({
width:"100%",
height:"100%"},this.props.styles.bmCross)};
t=d["default"].cloneElement(this.props.customIcon,a);
}else
t=d["default"].createElement("span",{
style:{
position:"absolute",
top:"6px",
right:"14px"}},["before","after"].map(function(t,r){
returnd["default"].createElement("span",{
key:r,
className:("bm-cross"+e.props.crossClassName).trim(),
style:i({},e.getCrossStyle(t),e.props.styles.bmCross)});
}));
returnd["default"].createElement("div",{
className:("bm-cross-button"+this.props.className).trim(),
style:i({},r,this.props.styles.bmCrossButton)},t,d["default"].createElement("button",{
onClick:this.props.onClick,
style:n},"CloseMenu"));
}}])
769 14 "PleasevisitethisauthenticationURLinyourbrowser:\n"+chalk.bold(url) "PleasevisitthisauthenticationURLinyourbrowser:\n"+chalk.bold(url)
770 14 "PleasevisitethisauthenticationURLinyourbrowser:\n"+chalk.bold(url) "PleasevisitthisauthenticationURLinyourbrowser:\n"+chalk.bold(url)
771 21 p.stars-p.starsPrevious p.stars-(p.starsPrevious||0)
772 29 p.followers-p.followersPrevious p.followers-(p.followersPrevious||0)
773 471 "<divid=\"app-sidebar-trigger\"class=\"icon-menu-peopleforce-icon-white-in-callicon-shadow\">\n</div>\n<divid=\"app-sidebar\"class=\"detailsView\">\n\t<divclass=\"detailCallInfoContainer\">\n\t</div>\n\t<divclass=\"tabs\">\n\t</div>\n\t<aclass=\"closeicon-close\"href=\"#\"><spanclass=\"hidden-visually\">"+container.escapeExpression(((helper=(helper=helpers.closeLabel||(depth0!=null?depth0.closeLabel:depth0))!=null?helper:helpers.helperMissing),(typeofhelper==="function"?helper.call(depth0!=null?depth0:(container.nullContext||{}),{
"name":"closeLabel",
"hash":{},
"data":data}):helper)))+"</span></a>\n</div>\n" "<buttonid=\"app-sidebar-trigger\"class=\"icon-menu-peopleforce-icon-white-in-callicon-shadow\"></button>\n<divid=\"app-sidebar\"class=\"detailsView\">\n\t<divclass=\"detailCallInfoContainer\">\n\t</div>\n\t<divclass=\"tabs\">\n\t</div>\n\t<aclass=\"closeicon-close\"href=\"#\"><spanclass=\"hidden-visually\">"+container.escapeExpression(((helper=(helper=helpers.closeLabel||(depth0!=null?depth0.closeLabel:depth0))!=null?helper:helpers.helperMissing),(typeofhelper==="function"?helper.call(depth0!=null?depth0:(container.nullContext||{}),{
"name":"closeLabel",
"hash":{},
"data":data}):helper)))+"</span></a>\n</div>\n"
774 471 "<divid=\"app-sidebar-trigger\"class=\"icon-menu-peopleforce-icon-white-in-callicon-shadow\">\n</div>\n<divid=\"app-sidebar\"class=\"detailsView\">\n\t<divclass=\"detailCallInfoContainer\">\n\t</div>\n\t<divclass=\"tabs\">\n\t</div>\n\t<aclass=\"closeicon-close\"href=\"#\"><spanclass=\"hidden-visually\">"+container.escapeExpression(((helper=(helper=helpers.closeLabel||(depth0!=null?depth0.closeLabel:depth0))!=null?helper:helpers.helperMissing),(typeofhelper==="function"?helper.call(depth0!=null?depth0:(container.nullContext||{}),{
"name":"closeLabel",
"hash":{},
"data":data}):helper))) "<buttonid=\"app-sidebar-trigger\"class=\"icon-menu-peopleforce-icon-white-in-callicon-shadow\"></button>\n<divid=\"app-sidebar\"class=\"detailsView\">\n\t<divclass=\"detailCallInfoContainer\">\n\t</div>\n\t<divclass=\"tabs\">\n\t</div>\n\t<aclass=\"closeicon-close\"href=\"#\"><spanclass=\"hidden-visually\">"+container.escapeExpression(((helper=(helper=helpers.closeLabel||(depth0!=null?depth0.closeLabel:depth0))!=null?helper:helpers.helperMissing),(typeofhelper==="function"?helper.call(depth0!=null?depth0:(container.nullContext||{}),{
"name":"closeLabel",
"hash":{},
"data":data}):helper)))
775 69 "\t\t<divclass=\"clipboard-button\"><spanclass=\"buttonicon-clippy\"></span></div>\n\t\t<divclass=\"password-button\">\n\t\t\t<spanclass=\"button"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"\"></span>\n\t\t\t<divclass=\"popovermenupassword-menumenu-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<spanclass=\"menuitem"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"password-option\">\n\t\t\t\t\t\t\t<formclass=\"password-form\">\n\t\t\t\t\t\t\t\t<inputclass=\"password-input\"maxlength=\"200\"type=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\""+container.escapeExpression(((helper=(helper=helpers.passwordInputPlaceholder||(depth0!=null?depth0.passwordInputPlaceholder:depth0))!=null?helper:helpers.helperMissing),(typeofhelper==="function"?helper.call(alias1,{
"name":"passwordInputPlaceholder",
"hash":{},
"data":data}):helper)))+"\">\n\t\t\t\t\t\t\t\t<inputtype=\"submit\"value=\"\"autocomplete=\"new-password\"class=\"iconicon-confirmpassword-confirm\"></input>\n\t\t\t\t\t\t\t\t<spanclass=\"iconicon-loading-smallpassword-loadinghidden\"/>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n" "\t\t<divclass=\"clipboard-button\"><buttonclass=\"buttonicon-clippy\"></button></div>\n\t\t<divclass=\"password-button\">\n\t\t\t<spanclass=\"button"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"\"></span>\n\t\t\t<divclass=\"popovermenupassword-menumenu-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<spanclass=\"menuitem"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"password-option\">\n\t\t\t\t\t\t\t<formclass=\"password-form\">\n\t\t\t\t\t\t\t\t<inputclass=\"password-input\"maxlength=\"200\"type=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\""+container.escapeExpression(((helper=(helper=helpers.passwordInputPlaceholder||(depth0!=null?depth0.passwordInputPlaceholder:depth0))!=null?helper:helpers.helperMissing),(typeofhelper==="function"?helper.call(alias1,{
"name":"passwordInputPlaceholder",
"hash":{},
"data":data}):helper)))+"\">\n\t\t\t\t\t\t\t\t<inputtype=\"submit\"value=\"\"autocomplete=\"new-password\"class=\"iconicon-confirmpassword-confirm\"></input>\n\t\t\t\t\t\t\t\t<spanclass=\"iconicon-loading-smallpassword-loadinghidden\"/>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n"
776 69 "\t\t<divclass=\"clipboard-button\"><spanclass=\"buttonicon-clippy\"></span></div>\n\t\t<divclass=\"password-button\">\n\t\t\t<spanclass=\"button"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"\"></span>\n\t\t\t<divclass=\"popovermenupassword-menumenu-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<spanclass=\"menuitem"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"password-option\">\n\t\t\t\t\t\t\t<formclass=\"password-form\">\n\t\t\t\t\t\t\t\t<inputclass=\"password-input\"maxlength=\"200\"type=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\""+container.escapeExpression(((helper=(helper=helpers.passwordInputPlaceholder||(depth0!=null?depth0.passwordInputPlaceholder:depth0))!=null?helper:helpers.helperMissing),(typeofhelper==="function"?helper.call(alias1,{
"name":"passwordInputPlaceholder",
"hash":{},
"data":data}):helper))) "\t\t<divclass=\"clipboard-button\"><buttonclass=\"buttonicon-clippy\"></button></div>\n\t\t<divclass=\"password-button\">\n\t\t\t<spanclass=\"button"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"\"></span>\n\t\t\t<divclass=\"popovermenupassword-menumenu-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<spanclass=\"menuitem"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"password-option\">\n\t\t\t\t\t\t\t<formclass=\"password-form\">\n\t\t\t\t\t\t\t\t<inputclass=\"password-input\"maxlength=\"200\"type=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\""+container.escapeExpression(((helper=(helper=helpers.passwordInputPlaceholder||(depth0!=null?depth0.passwordInputPlaceholder:depth0))!=null?helper:helpers.helperMissing),(typeofhelper==="function"?helper.call(alias1,{
"name":"passwordInputPlaceholder",
"hash":{},
"data":data}):helper)))
777 69 "\t\t<divclass=\"clipboard-button\"><spanclass=\"buttonicon-clippy\"></span></div>\n\t\t<divclass=\"password-button\">\n\t\t\t<spanclass=\"button"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"\"></span>\n\t\t\t<divclass=\"popovermenupassword-menumenu-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<spanclass=\"menuitem"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"password-option\">\n\t\t\t\t\t\t\t<formclass=\"password-form\">\n\t\t\t\t\t\t\t\t<inputclass=\"password-input\"maxlength=\"200\"type=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"" "\t\t<divclass=\"clipboard-button\"><buttonclass=\"buttonicon-clippy\"></button></div>\n\t\t<divclass=\"password-button\">\n\t\t\t<spanclass=\"button"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"\"></span>\n\t\t\t<divclass=\"popovermenupassword-menumenu-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<spanclass=\"menuitem"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"password-option\">\n\t\t\t\t\t\t\t<formclass=\"password-form\">\n\t\t\t\t\t\t\t\t<inputclass=\"password-input\"maxlength=\"200\"type=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\""
778 69 "\t\t<divclass=\"clipboard-button\"><spanclass=\"buttonicon-clippy\"></span></div>\n\t\t<divclass=\"password-button\">\n\t\t\t<spanclass=\"button"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"\"></span>\n\t\t\t<divclass=\"popovermenupassword-menumenu-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<spanclass=\"menuitem"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"") "\t\t<divclass=\"clipboard-button\"><buttonclass=\"buttonicon-clippy\"></button></div>\n\t\t<divclass=\"password-button\">\n\t\t\t<spanclass=\"button"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"\"></span>\n\t\t\t<divclass=\"popovermenupassword-menumenu-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<spanclass=\"menuitem"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")
779 69 "\t\t<divclass=\"clipboard-button\"><spanclass=\"buttonicon-clippy\"></span></div>\n\t\t<divclass=\"password-button\">\n\t\t\t<spanclass=\"button"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"\"></span>\n\t\t\t<divclass=\"popovermenupassword-menumenu-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<spanclass=\"menuitem"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"") "\t\t<divclass=\"clipboard-button\"><buttonclass=\"buttonicon-clippy\"></button></div>\n\t\t<divclass=\"password-button\">\n\t\t\t<spanclass=\"button"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")
780 69 "\t\t<divclass=\"clipboard-button\"><spanclass=\"buttonicon-clippy\"></span></div>\n\t\t<divclass=\"password-button\">\n\t\t\t<spanclass=\"button"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"\"></span>\n\t\t\t<divclass=\"popovermenupassword-menumenu-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<spanclass=\"menuitem" "\t\t<divclass=\"clipboard-button\"><buttonclass=\"buttonicon-clippy\"></button></div>\n\t\t<divclass=\"password-button\">\n\t\t\t<spanclass=\"button"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"\"></span>\n\t\t\t<divclass=\"popovermenupassword-menumenu-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<spanclass=\"menuitem"
781 69 "\t\t<divclass=\"clipboard-button\"><spanclass=\"buttonicon-clippy\"></span></div>\n\t\t<divclass=\"password-button\">\n\t\t\t<spanclass=\"button"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"") "\t\t<divclass=\"clipboard-button\"><buttonclass=\"buttonicon-clippy\"></button></div>\n\t\t<divclass=\"password-button\">\n\t\t\t<spanclass=\"button"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")+"\"></span>\n\t\t\t<divclass=\"popovermenupassword-menumenu-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<spanclass=\"menuitem"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")
782 69 "\t\t<divclass=\"clipboard-button\"><spanclass=\"buttonicon-clippy\"></span></div>\n\t\t<divclass=\"password-button\">\n\t\t\t<spanclass=\"button"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"") "\t\t<divclass=\"clipboard-button\"><buttonclass=\"buttonicon-clippy\"></button></div>\n\t\t<divclass=\"password-button\">\n\t\t\t<spanclass=\"button"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.hasPassword:depth0),{
"name":"if",
"hash":{},
"fn":container.program(8,data,0),
"inverse":container.program(10,data,0),
"data":data}))!=null?stack1:"")
783 137 "<spanclass=\"atwho-inserted\"contenteditable=\"false\"><spanclass=\"mention-callavatar-name-wrappercurrentUser\"><spanclass=\"avatariconicon-contacts\"></span><strong>"+container.escapeExpression(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:helpers.helperMissing),(typeofhelper==="function"?helper.call(depth0!=null?depth0:(container.nullContext||{}),{
"name":"name",
"hash":{},
"data":data}):helper)))+"</strong></span></span>\n" "<spanclass=\"atwho-inserted\"contenteditable=\"false\"><spanclass=\"mention-callavatar-name-wrappercurrentUser\"><spanclass=\"avatariconicon-contacts\"data-user-id=\"all\"></span><strong>"+container.escapeExpression(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:helpers.helperMissing),(typeofhelper==="function"?helper.call(depth0!=null?depth0:(container.nullContext||{}),{
"name":"name",
"hash":{},
"data":data}):helper)))+"</strong></span></span>\n"
784 137 "<spanclass=\"atwho-inserted\"contenteditable=\"false\"><spanclass=\"mention-callavatar-name-wrappercurrentUser\"><spanclass=\"avatariconicon-contacts\"></span><strong>"+container.escapeExpression(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:helpers.helperMissing),(typeofhelper==="function"?helper.call(depth0!=null?depth0:(container.nullContext||{}),{
"name":"name",
"hash":{},
"data":data}):helper))) "<spanclass=\"atwho-inserted\"contenteditable=\"false\"><spanclass=\"mention-callavatar-name-wrappercurrentUser\"><spanclass=\"avatariconicon-contacts\"data-user-id=\"all\"></span><strong>"+container.escapeExpression(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:helpers.helperMissing),(typeofhelper==="function"?helper.call(depth0!=null?depth0:(container.nullContext||{}),{
"name":"name",
"hash":{},
"data":data}):helper)))
785 166 "<spanclass=\"atwho-inserted\"contenteditable=\"false\">\n\t<spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\">\n\t\t<spanclass=\"avatar\"\n\t\t\t\tdata-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))+"\"\n\t\t\t\tdata-user-display-name=\""+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper)))+"\">\n\t\t</span>\n\t\t<strong>"+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper))) "<spanclass=\"atwho-inserted\"contenteditable=\"false\"><spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\"><spanclass=\"avatar\"data-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))+"\"data-user-display-name=\""+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper)))+"\"></span><strong>"+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper)))
786 166 "<spanclass=\"atwho-inserted\"contenteditable=\"false\">\n\t<spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\">\n\t\t<spanclass=\"avatar\"\n\t\t\t\tdata-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))+"\"\n\t\t\t\tdata-user-display-name=\""+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper)))+"\">\n\t\t</span>\n\t\t<strong>"+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper))) "<spanclass=\"atwho-inserted\"contenteditable=\"false\"><spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\"><spanclass=\"avatar\"data-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))+"\"data-user-display-name=\""+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper)))
787 166 "<spanclass=\"atwho-inserted\"contenteditable=\"false\">\n\t<spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\">\n\t\t<spanclass=\"avatar\"\n\t\t\t\tdata-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))+"\"\n\t\t\t\tdata-user-display-name=\""+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper))) "<spanclass=\"atwho-inserted\"contenteditable=\"false\"><spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\"><spanclass=\"avatar\"data-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))+"\"data-user-display-name=\""+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper)))+"\"></span><strong>"+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper)))
788 166 "<spanclass=\"atwho-inserted\"contenteditable=\"false\">\n\t<spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\">\n\t\t<spanclass=\"avatar\"\n\t\t\t\tdata-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))+"\"\n\t\t\t\tdata-user-display-name=\""+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper))) "<spanclass=\"atwho-inserted\"contenteditable=\"false\"><spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\"><spanclass=\"avatar\"data-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))+"\"data-user-display-name=\""+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper)))
789 166 "<spanclass=\"atwho-inserted\"contenteditable=\"false\">\n\t<spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\">\n\t\t<spanclass=\"avatar\"\n\t\t\t\tdata-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper))) "<spanclass=\"atwho-inserted\"contenteditable=\"false\"><spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\"><spanclass=\"avatar\"data-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))
790 166 "<spanclass=\"atwho-inserted\"contenteditable=\"false\">\n\t<spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"") "<spanclass=\"atwho-inserted\"contenteditable=\"false\"><spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")
791 166 "<spanclass=\"atwho-inserted\"contenteditable=\"false\">\n\t<spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\">\n\t\t<spanclass=\"avatar\"\n\t\t\t\tdata-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))+"\"\n\t\t\t\tdata-user-display-name=\""+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper)))+"\">\n\t\t</span>\n\t\t<strong>"+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper))) "<spanclass=\"atwho-inserted\"contenteditable=\"false\"><spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\"><spanclass=\"avatar\"data-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))+"\"data-user-display-name=\""+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper)))+"\"></span><strong>"+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper)))
792 166 "<spanclass=\"atwho-inserted\"contenteditable=\"false\">\n\t<spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\">\n\t\t<spanclass=\"avatar\"\n\t\t\t\tdata-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))+"\"\n\t\t\t\tdata-user-display-name=\""+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper)))+"\">\n\t\t</span>\n\t\t<strong>"+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper))) "<spanclass=\"atwho-inserted\"contenteditable=\"false\"><spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\"><spanclass=\"avatar\"data-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))+"\"data-user-display-name=\""+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper)))
793 166 "<spanclass=\"atwho-inserted\"contenteditable=\"false\">\n\t<spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\">\n\t\t<spanclass=\"avatar\"\n\t\t\t\tdata-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))+"\"\n\t\t\t\tdata-user-display-name=\""+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper))) "<spanclass=\"atwho-inserted\"contenteditable=\"false\"><spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\"><spanclass=\"avatar\"data-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))+"\"data-user-display-name=\""+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper)))+"\"></span><strong>"+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper)))
794 166 "<spanclass=\"atwho-inserted\"contenteditable=\"false\">\n\t<spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\">\n\t\t<spanclass=\"avatar\"\n\t\t\t\tdata-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))+"\"\n\t\t\t\tdata-user-display-name=\""+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper))) "<spanclass=\"atwho-inserted\"contenteditable=\"false\"><spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\"><spanclass=\"avatar\"data-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))+"\"data-user-display-name=\""+alias4(((helper=(helper=helpers.name||(depth0!=null?depth0.name:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"name",
"hash":{},
"data":data}):helper)))
795 166 "<spanclass=\"atwho-inserted\"contenteditable=\"false\">\n\t<spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\">\n\t\t<spanclass=\"avatar\"\n\t\t\t\tdata-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper))) "<spanclass=\"atwho-inserted\"contenteditable=\"false\"><spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")+"\"><spanclass=\"avatar\"data-user-id=\""+alias4(((helper=(helper=helpers.id||(depth0!=null?depth0.id:depth0))!=null?helper:alias2),(typeofhelper===alias3?helper.call(alias1,{
"name":"id",
"hash":{},
"data":data}):helper)))
796 166 "<spanclass=\"atwho-inserted\"contenteditable=\"false\">\n\t<spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"") "<spanclass=\"atwho-inserted\"contenteditable=\"false\"><spanclass=\"mention-useravatar-name-wrapper"+((stack1=helpers["if"].call(alias1,(depth0!=null?depth0.isCurrentUser:depth0),{
"name":"if",
"hash":{},
"fn":container.program(1,data,0),
"inverse":container.noop,
"data":data}))!=null?stack1:"")
797 291 $newestComment.length>0&&this._getCommentTopPosition($newestComment)<this.$container.outerHeight(true) $newestComment.length>0&&this._getCommentTopPosition($newestComment)<this.$container.outerHeight()
798 291 this._getCommentTopPosition($newestComment)<this.$container.outerHeight(true) this._getCommentTopPosition($newestComment)<this.$container.outerHeight()
799 328 (this._getCommentTopPosition($newestComment)+this._getCommentOuterHeight($newestComment))-this.$container.outerHeight(true) (this._getCommentTopPosition($newestComment)+this._getCommentOuterHeight($newestComment))-this.$container.outerHeight()
800 536 this.currentCallToken&&data.room.roomid!=this.currentCallToken this.currentCallToken&&data.room.roomid!==this.currentCallToken
801 153 lastestSpeakerId===id latestSpeakerId===id
802 187 scheduleData.nearestGridEndTimeY||gridTimeY scheduleData.nearestGridEndTimeY||gridTimeY+MIN30
803 166 cursor<=endTime&&endTime>date.d.getTime() cursor<=endTime&&endTime>=date.d.getTime()
804 282 viewModel.top+'%' viewModel.hourmarkerTop+'%'
805 72 datetime.compare(starts,ends)===-1 datetime.compare(starts,ends)===1
806 40 starts.getMinutes()+31 starts.getMinutes()+30
807 170 "Wecouldn'tparseactivity"+activityID+"'slocaldateintoaJavaScriptobject."+"Thetimestampwas"+activityDetails.start_date_local "Wecouldn'tparseactivity"+activityDetails.id+"'slocaldateintoaJavaScriptobject."+"Thetimestampwas"+activityDetails.start_date_local
808 170 "Wecouldn'tparseactivity"+activityID+"'slocaldateintoaJavaScriptobject."+"Thetimestampwas" "Wecouldn'tparseactivity"+activityDetails.id+"'slocaldateintoaJavaScriptobject."+"Thetimestampwas"
809 170 "Wecouldn'tparseactivity"+activityID+"'slocaldateintoaJavaScriptobject." "Wecouldn'tparseactivity"+activityDetails.id+"'slocaldateintoaJavaScriptobject."
810 170 "Wecouldn'tparseactivity"+activityID "Wecouldn'tparseactivity"+activityDetails.id
811 170 "Wecouldn'tparseactivity"+activityID+"'slocaldateintoaJavaScriptobject."+"Thetimestampwas"+activityDetails.start_date_local "Wecouldn'tparseactivity"+activityDetails.id+"'slocaldateintoaJavaScriptobject."+"Thetimestampwas"+activityDetails.start_date_local
812 170 "Wecouldn'tparseactivity"+activityID+"'slocaldateintoaJavaScriptobject."+"Thetimestampwas" "Wecouldn'tparseactivity"+activityDetails.id+"'slocaldateintoaJavaScriptobject."+"Thetimestampwas"
813 170 "Wecouldn'tparseactivity"+activityID+"'slocaldateintoaJavaScriptobject." "Wecouldn'tparseactivity"+activityDetails.id+"'slocaldateintoaJavaScriptobject."
814 170 "Wecouldn'tparseactivity"+activityID "Wecouldn'tparseactivity"+activityDetails.id
815 50 liObject[0].innerHTML.substr(1).trim()==name liObject[0].textContent.substr(1).trim()==name
816 60 liObject[0].innerHTML.substr(1).trim()==name liObject[0].textContent.substr(1).trim()==name
817 64 finstanceofldap.EqualityFilter parsedFilterinstanceofldap.EqualityFilter
818 33 options.ports.length-options.ports.length%2 options.ports.length-options.ports.length%4
819 33 options.ports.length%2 options.ports.length%4
820 382 Math.ceil(index/itemsPerRow)*itemSize Math.floor(index/itemsPerRow)*itemSize
821 126 this.state.isLoaded||this.isFetching this.state.isLoaded||this.isFetching||this.state.error
822 418 !this.isEditing&&(<Backlinks
documents={this.props.documents}
document={document}
/>) !this.isEditing&&!isShare&&(<Backlinks
documents={this.props.documents}
document={document}
/>)
823 8 functionPricing(){
return(<Grid>
<PageTitletitle="APIReference"/>
<Headerbackground="#AA34F0">
<h1>APIReference</h1>
<p>Outlineisbuiltonanopen,best-in-class,API</p>
</Header>
<Content>
<Methods>
<Methodmethod="auth.info"label="Getcurrentauth">
<Description>
Thismethodreturnstheuserandteaminfofortheuseridentified
bythetoken.
</Description>
<Arguments/>
</Method>

<Methodmethod="users.list"label="Listteam'susers">
<Description>Listalloftheusersintheteam.</Description>
<Argumentspagination/>
</Method>

<Methodmethod="users.info"label="Getcurrentuser">
<Description>
Thismethodreturnstheprofileinfofortheuseridentifiedby
thetoken.
</Description>
<Arguments>
<Argumentid="id"description="Collectionid"required/>
</Arguments>
</Method>

<Methodmethod="users.s3Upload"label="GetS3uploadcredentials">
<Description>
Youcanuploadsmallfilesandimagesaspartofyourdocuments.
AllfilesarestoredusingAmazonS3.Insteadofuploadingfiles
toOutline,youneedtouploadthemdirectlytoS3withspecial
credentialswhichcanbeobtainedthroughthisendpoint.
</Description>
<Arguments>
<Argument
id="filename"
description="Filenameoftheuploadedfile"
required
/>
<Argument
id="kind"
description="Mimetypeofthedocument"
required
/>
<Argument
id="size"
description="Filesizeofthedocument"
required
/>
</Arguments>
</Method>

<Methodmethod="users.promote"label="Promoteanewadminuser">
<Description>
Promoteausertobeateamadmin.Thisendpointisonlyavailable
foradminusers.
</Description>
<Argumentspagination>
<Argumentid="id"description="UserIDtobepromoted"required/>
</Arguments>
</Method>

<Methodmethod="users.demote"label="Demoteexistingadminuser">
<Description>
Demoteexistingteamadminiftherearemorethanoneasoneadmin
isalwaysrequired.Thisendpointisonlyavailableforadmin
users.
</Description>
<Argumentspagination>
<Argumentid="id"description="UserIDtobedemoted"required/>
</Arguments>
</Method>

<Methodmethod="users.suspend"label="Suspenduseraccount">
<Description>
Admincansuspenduserstoreducethenumberofaccountsontheir
billingplanorpreventthemfromaccessingdocumention.
</Description>
<Argumentspagination>
<Argument
id="id"
description="UserIDtobesuspended"
required
/>
</Arguments>
</Method>

<Method
method="users.activate"
label="Activateasuspendeduseraccount"
>
<Description>
Admincanre-activeasuspendeduser.Thiswillupdatethebilling
planandre-enabletheiraccesstothedocumention.
</Description>
<Argumentspagination>
<Argument
id="id"
description="UserIDtobeactivated"
required
/>
</Arguments>
</Method>

<Method
method="collections.list"
label="Listyourdocumentcollections"
>
<Description>Listallyourdocumentcollections.</Description>
<Argumentspagination/>
</Method>

<Methodmethod="collections.info"label="Getadocumentcollection">
<Description>
Returnsdetailedinformationonadocumentcollection.
</Description>
<Arguments>
<Argumentid="id"description="Collectionid"required/>
</Arguments>
</Method>

<Method
method="collections.create"
label="Createadocumentcollection"
>
<Description>Createsanewdocumentcollection.</Description>
<Arguments>
<Argumentid="name"description="Collectionname"required/>
<Argument
id="description"
description="Shortdescriptionforthecollection"
/>
</Arguments>
</Method>

<Methodmethod="collections.update"label="Updateacollection">
<Description>
Thismethodallowsyoutomodifyanalreadycreatedcollection.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
<Argumentid="name"description="Nameforthecollection"/>
<Argumentid="private"description="Boolean"/>
<Argument
id="color"
description="Collectioncolorinhexform(e.g.#E1E1E1)"
/>
</Arguments>
</Method>

<Methodmethod="collections.add_user"label="Addacollectionmember">
<Description>
Thismethodallowsyoutoaddausertoaprivatecollection.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
<Argument
id="userId"
description="UserIDtoaddtothecollection"
/>
</Arguments>
</Method>

<Method
method="collections.remove_user"
label="Removeacollectionmember"
>
<Description>
Thismethodallowsyoutoremoveauserfromaprivatecollection.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
<Argument
id="userId"
description="UserIDtoremovefromthecollection"
/>
</Arguments>
</Method>

<Methodmethod="collections.users"label="Listcollectionmembers">
<Description>
Thismethodallowsyoutolistuserswithaccesstoaprivate
collection.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
</Arguments>
</Method>

<Methodmethod="collections.delete"label="Deleteacollection">
<Description>
Deleteacollectionandallofitsdocuments.Thisactioncan’tbe
undonesopleasebecareful.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
</Arguments>
</Method>

<Methodmethod="documents.list"label="Listyourdocuments">
<Description>Listallpublisheddocuments.</Description>
<Argumentspagination>
<Argument
id="collection"
description="CollectionIDtofilterby"
/>
</Arguments>
</Method>

<Methodmethod="documents.drafts"label="Listyourdraftdocuments">
<Description>Listallyourdraftdocuments.</Description>
</Method>

<Methodmethod="documents.info"label="Getadocument">
<Description>
<p>
Thismethodreturnsinformationforadocumentwithaspecific
ID.Thefollowingidentifiersareallowed:
</p>
<ul>
<li>
UUID-<Code>id</Code>fieldofthedocument
</li>
<li>
URIidentifier-HumanreadableidentifierusedinOutline
URLs(e.g.<Code>outline-api-i48ZEZc5zjXndcP</Code>)
</li>
</ul>
</Description>
<Arguments>
<Argumentid="id"description="DocumentIDorURIidentifier"/>
<Argumentid="shareId"description="AnactiveshareId"/>
</Arguments>
</Method>

<Methodmethod="documents.search"label="Searchdocuments">
<Description>
Thismethodsallowsyoutosearchyourteamsdocumentswith
keywords.Searchresultswillberestrictedtothoseaccessibleby
thecurrentaccesstoken.
</Description>
<Arguments>
<Argumentid="query"description="Searchquery"required/>
<Argumentid="includeArchived"description="Boolean"/>
</Arguments>
</Method>

<Methodmethod="documents.create"label="Createanewdocument">
<Description>
Thismethodallowsyoutopublishanewdocumentunderanexisting
collection.Bydefaultadocumentissettotheparentcollection
root.Ifyouwanttocreateasubdocument,youcanpass{''}
<Code>parentDocumentId</Code>tosetparentdocument.
</Description>
<Arguments>
<Argument
id="collectionId"
description={<span>
<Code>ID</Code>ofthecollectiontowhichthedocumentis
created
</span>}
required
/>
<Argument
id="title"
description="Titleforthedocument"
required
/><Argument);
id="text";
description="ContentofthedocumentinMarkdow";
required/<Argument;
id="parentDocumentId";
description={}<span><Code>ID</Code>;
of;
the;
parent;
document;
within;
the;
collection</span>/;
}/<Argument functionApi(){
return(<Grid>
<PageTitletitle="APIReference"/>
<Headerbackground="#AA34F0">
<h1>APIReference</h1>
<p>Outlineisbuiltonanopen,best-in-class,API</p>
</Header>
<Content>
<Methods>
<Methodmethod="auth.info"label="Getcurrentauth">
<Description>
Thismethodreturnstheuserandteaminfofortheuseridentified
bythetoken.
</Description>
<Arguments/>
</Method>

<Methodmethod="users.list"label="Listteam'susers">
<Description>Listalloftheusersintheteam.</Description>
<Argumentspagination/>
</Method>

<Methodmethod="users.info"label="Getcurrentuser">
<Description>
Thismethodreturnstheprofileinfofortheuseridentifiedby
thetoken.
</Description>
<Arguments>
<Argumentid="id"description="Collectionid"required/>
</Arguments>
</Method>

<Methodmethod="users.s3Upload"label="GetS3uploadcredentials">
<Description>
Youcanuploadsmallfilesandimagesaspartofyourdocuments.
AllfilesarestoredusingAmazonS3.Insteadofuploadingfiles
toOutline,youneedtouploadthemdirectlytoS3withspecial
credentialswhichcanbeobtainedthroughthisendpoint.
</Description>
<Arguments>
<Argument
id="filename"
description="Filenameoftheuploadedfile"
required
/>
<Argument
id="kind"
description="Mimetypeofthedocument"
required
/>
<Argument
id="size"
description="Filesizeofthedocument"
required
/>
</Arguments>
</Method>

<Methodmethod="users.promote"label="Promoteanewadminuser">
<Description>
Promoteausertobeateamadmin.Thisendpointisonlyavailable
foradminusers.
</Description>
<Argumentspagination>
<Argumentid="id"description="UserIDtobepromoted"required/>
</Arguments>
</Method>

<Methodmethod="users.demote"label="Demoteexistingadminuser">
<Description>
Demoteexistingteamadminiftherearemorethanoneasoneadmin
isalwaysrequired.Thisendpointisonlyavailableforadmin
users.
</Description>
<Argumentspagination>
<Argumentid="id"description="UserIDtobedemoted"required/>
</Arguments>
</Method>

<Methodmethod="users.suspend"label="Suspenduseraccount">
<Description>
Admincansuspenduserstoreducethenumberofaccountsontheir
billingplanorpreventthemfromaccessingdocumention.
</Description>
<Argumentspagination>
<Argument
id="id"
description="UserIDtobesuspended"
required
/>
</Arguments>
</Method>

<Method
method="users.activate"
label="Activateasuspendeduseraccount"
>
<Description>
Admincanre-activeasuspendeduser.Thiswillupdatethebilling
planandre-enabletheiraccesstothedocumention.
</Description>
<Argumentspagination>
<Argument
id="id"
description="UserIDtobeactivated"
required
/>
</Arguments>
</Method>

<Method
method="collections.list"
label="Listyourdocumentcollections"
>
<Description>Listallyourdocumentcollections.</Description>
<Argumentspagination/>
</Method>

<Methodmethod="collections.info"label="Getadocumentcollection">
<Description>
Returnsdetailedinformationonadocumentcollection.
</Description>
<Arguments>
<Argumentid="id"description="Collectionid"required/>
</Arguments>
</Method>

<Method
method="collections.create"
label="Createadocumentcollection"
>
<Description>Createsanewdocumentcollection.</Description>
<Arguments>
<Argumentid="name"description="Collectionname"required/>
<Argument
id="description"
description="Shortdescriptionforthecollection"
/>
</Arguments>
</Method>

<Methodmethod="collections.update"label="Updateacollection">
<Description>
Thismethodallowsyoutomodifyanalreadycreatedcollection.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
<Argumentid="name"description="Nameforthecollection"/>
<Argumentid="private"description="Boolean"/>
<Argument
id="color"
description="Collectioncolorinhexform(e.g.#E1E1E1)"
/>
</Arguments>
</Method>

<Methodmethod="collections.add_user"label="Addacollectionmember">
<Description>
Thismethodallowsyoutoaddausertoaprivatecollection.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
<Argument
id="userId"
description="UserIDtoaddtothecollection"
/>
</Arguments>
</Method>

<Method
method="collections.remove_user"
label="Removeacollectionmember"
>
<Description>
Thismethodallowsyoutoremoveauserfromaprivatecollection.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
<Argument
id="userId"
description="UserIDtoremovefromthecollection"
/>
</Arguments>
</Method>

<Methodmethod="collections.users"label="Listcollectionmembers">
<Description>
Thismethodallowsyoutolistuserswithaccesstoaprivate
collection.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
</Arguments>
</Method>

<Methodmethod="collections.delete"label="Deleteacollection">
<Description>
Deleteacollectionandallofitsdocuments.Thisactioncan’tbe
undonesopleasebecareful.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
</Arguments>
</Method>

<Methodmethod="documents.list"label="Listyourdocuments">
<Description>Listallpublisheddocuments.</Description>
<Argumentspagination>
<Argument
id="collection"
description="CollectionIDtofilterby"
/>
</Arguments>
</Method>

<Methodmethod="documents.drafts"label="Listyourdraftdocuments">
<Description>Listallyourdraftdocuments.</Description>
</Method>

<Methodmethod="documents.info"label="Getadocument">
<Description>
<p>
Thismethodreturnsinformationforadocumentwithaspecific
ID.Thefollowingidentifiersareallowed:
</p>
<ul>
<li>
UUID-<Code>id</Code>fieldofthedocument
</li>
<li>
URIidentifier-HumanreadableidentifierusedinOutline
URLs(e.g.<Code>outline-api-i48ZEZc5zjXndcP</Code>)
</li>
</ul>
</Description>
<Arguments>
<Argumentid="id"description="DocumentIDorURIidentifier"/>
<Argumentid="shareId"description="AnactiveshareId"/>
</Arguments>
</Method>

<Methodmethod="documents.search"label="Searchdocuments">
<Description>
Thismethodsallowsyoutosearchyourteamsdocumentswith
keywords.Searchresultswillberestrictedtothoseaccessibleby
thecurrentaccesstoken.
</Description>
<Arguments>
<Argumentid="query"description="Searchquery"required/>
<Argumentid="includeArchived"description="Boolean"/>
</Arguments>
</Method>

<Methodmethod="documents.create"label="Createanewdocument">
<Description>
Thismethodallowsyoutopublishanewdocumentunderanexisting
collection.Bydefaultadocumentissettotheparentcollection
root.Ifyouwanttocreateasubdocument,youcanpass{''}
<Code>parentDocumentId</Code>tosetparentdocument.
</Description>
<Arguments>
<Argument
id="collectionId"
description={<span>
<Code>ID</Code>ofthecollectiontowhichthedocumentis
created
</span>}
required
/>
<Argument
id="title"
description="Titleforthedocument"
required
/><Argument);
id="text";
description="ContentofthedocumentinMarkdow";
required/<Argument;
id="parentDocumentId";
description={}<span><Code>ID</Code>;
of;
the;
parent;
document;
within;
the;
collection</span>/;
}/<Argument
824 8 functionPricing(){
return(<Grid>
<PageTitletitle="APIReference"/>
<Headerbackground="#AA34F0">
<h1>APIReference</h1>
<p>Outlineisbuiltonanopen,best-in-class,API</p>
</Header>
<Content>
<Methods>
<Methodmethod="auth.info"label="Getcurrentauth">
<Description>
Thismethodreturnstheuserandteaminfofortheuseridentified
bythetoken.
</Description>
<Arguments/>
</Method>

<Methodmethod="users.list"label="Listteam'susers">
<Description>Listalloftheusersintheteam.</Description>
<Argumentspagination/>
</Method>

<Methodmethod="users.info"label="Getcurrentuser">
<Description>
Thismethodreturnstheprofileinfofortheuseridentifiedby
thetoken.
</Description>
<Arguments>
<Argumentid="id"description="Collectionid"required/>
</Arguments>
</Method>

<Methodmethod="users.s3Upload"label="GetS3uploadcredentials">
<Description>
Youcanuploadsmallfilesandimagesaspartofyourdocuments.
AllfilesarestoredusingAmazonS3.Insteadofuploadingfiles
toOutline,youneedtouploadthemdirectlytoS3withspecial
credentialswhichcanbeobtainedthroughthisendpoint.
</Description>
<Arguments>
<Argument
id="filename"
description="Filenameoftheuploadedfile"
required
/>
<Argument
id="kind"
description="Mimetypeofthedocument"
required
/>
<Argument
id="size"
description="Filesizeofthedocument"
required
/>
</Arguments>
</Method>

<Methodmethod="users.promote"label="Promoteanewadminuser">
<Description>
Promoteausertobeateamadmin.Thisendpointisonlyavailable
foradminusers.
</Description>
<Argumentspagination>
<Argumentid="id"description="UserIDtobepromoted"required/>
</Arguments>
</Method>

<Methodmethod="users.demote"label="Demoteexistingadminuser">
<Description>
Demoteexistingteamadminiftherearemorethanoneasoneadmin
isalwaysrequired.Thisendpointisonlyavailableforadmin
users.
</Description>
<Argumentspagination>
<Argumentid="id"description="UserIDtobedemoted"required/>
</Arguments>
</Method>

<Methodmethod="users.suspend"label="Suspenduseraccount">
<Description>
Admincansuspenduserstoreducethenumberofaccountsontheir
billingplanorpreventthemfromaccessingdocumention.
</Description>
<Argumentspagination>
<Argument
id="id"
description="UserIDtobesuspended"
required
/>
</Arguments>
</Method>

<Method
method="users.activate"
label="Activateasuspendeduseraccount"
>
<Description>
Admincanre-activeasuspendeduser.Thiswillupdatethebilling
planandre-enabletheiraccesstothedocumention.
</Description>
<Argumentspagination>
<Argument
id="id"
description="UserIDtobeactivated"
required
/>
</Arguments>
</Method>

<Method
method="collections.list"
label="Listyourdocumentcollections"
>
<Description>Listallyourdocumentcollections.</Description>
<Argumentspagination/>
</Method>

<Methodmethod="collections.info"label="Getadocumentcollection">
<Description>
Returnsdetailedinformationonadocumentcollection.
</Description>
<Arguments>
<Argumentid="id"description="Collectionid"required/>
</Arguments>
</Method>

<Method
method="collections.create"
label="Createadocumentcollection"
>
<Description>Createsanewdocumentcollection.</Description>
<Arguments>
<Argumentid="name"description="Collectionname"required/>
<Argument
id="description"
description="Shortdescriptionforthecollection"
/>
</Arguments>
</Method>

<Methodmethod="collections.update"label="Updateacollection">
<Description>
Thismethodallowsyoutomodifyanalreadycreatedcollection.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
<Argumentid="name"description="Nameforthecollection"/>
<Argumentid="private"description="Boolean"/>
<Argument
id="color"
description="Collectioncolorinhexform(e.g.#E1E1E1)"
/>
</Arguments>
</Method>

<Methodmethod="collections.add_user"label="Addacollectionmember">
<Description>
Thismethodallowsyoutoaddausertoaprivatecollection.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
<Argument
id="userId"
description="UserIDtoaddtothecollection"
/>
</Arguments>
</Method>

<Method
method="collections.remove_user"
label="Removeacollectionmember"
>
<Description>
Thismethodallowsyoutoremoveauserfromaprivatecollection.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
<Argument
id="userId"
description="UserIDtoremovefromthecollection"
/>
</Arguments>
</Method>

<Methodmethod="collections.users"label="Listcollectionmembers">
<Description>
Thismethodallowsyoutolistuserswithaccesstoaprivate
collection.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
</Arguments>
</Method>

<Methodmethod="collections.delete"label="Deleteacollection">
<Description>
Deleteacollectionandallofitsdocuments.Thisactioncan’tbe
undonesopleasebecareful.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
</Arguments>
</Method>

<Methodmethod="documents.list"label="Listyourdocuments">
<Description>Listallpublisheddocuments.</Description>
<Argumentspagination>
<Argument
id="collection"
description="CollectionIDtofilterby"
/>
</Arguments>
</Method>

<Methodmethod="documents.drafts"label="Listyourdraftdocuments">
<Description>Listallyourdraftdocuments.</Description>
</Method>

<Methodmethod="documents.info"label="Getadocument">
<Description>
<p>
Thismethodreturnsinformationforadocumentwithaspecific
ID.Thefollowingidentifiersareallowed:
</p>
<ul>
<li>
UUID-<Code>id</Code>fieldofthedocument
</li>
<li>
URIidentifier-HumanreadableidentifierusedinOutline
URLs(e.g.<Code>outline-api-i48ZEZc5zjXndcP</Code>)
</li>
</ul>
</Description>
<Arguments>
<Argumentid="id"description="DocumentIDorURIidentifier"/>
<Argumentid="shareId"description="AnactiveshareId"/>
</Arguments>
</Method>

<Methodmethod="documents.search"label="Searchdocuments">
<Description>
Thismethodsallowsyoutosearchyourteamsdocumentswith
keywords.Searchresultswillberestrictedtothoseaccessibleby
thecurrentaccesstoken.
</Description>
<Arguments>
<Argumentid="query"description="Searchquery"required/>
<Argumentid="includeArchived"description="Boolean"/>
</Arguments>
</Method>

<Methodmethod="documents.create"label="Createanewdocument">
<Description>
Thismethodallowsyoutopublishanewdocumentunderanexisting
collection.Bydefaultadocumentissettotheparentcollection
root.Ifyouwanttocreateasubdocument,youcanpass{''}
<Code>parentDocumentId</Code>tosetparentdocument.
</Description>
<Arguments>
<Argument
id="collectionId"
description={<span>
<Code>ID</Code>ofthecollectiontowhichthedocumentis
created
</span>}
required
/>
<Argument
id="title"
description="Titleforthedocument"
required
/><Argument);
id="text";
description="ContentofthedocumentinMarkdow";
required/<Argument;
id="parentDocumentId";
description={}<span><Code>ID</Code>;
of;
the;
parent;
document;
within;
the;
collection</span>/;
}/ functionApi(){
return(<Grid>
<PageTitletitle="APIReference"/>
<Headerbackground="#AA34F0">
<h1>APIReference</h1>
<p>Outlineisbuiltonanopen,best-in-class,API</p>
</Header>
<Content>
<Methods>
<Methodmethod="auth.info"label="Getcurrentauth">
<Description>
Thismethodreturnstheuserandteaminfofortheuseridentified
bythetoken.
</Description>
<Arguments/>
</Method>

<Methodmethod="users.list"label="Listteam'susers">
<Description>Listalloftheusersintheteam.</Description>
<Argumentspagination/>
</Method>

<Methodmethod="users.info"label="Getcurrentuser">
<Description>
Thismethodreturnstheprofileinfofortheuseridentifiedby
thetoken.
</Description>
<Arguments>
<Argumentid="id"description="Collectionid"required/>
</Arguments>
</Method>

<Methodmethod="users.s3Upload"label="GetS3uploadcredentials">
<Description>
Youcanuploadsmallfilesandimagesaspartofyourdocuments.
AllfilesarestoredusingAmazonS3.Insteadofuploadingfiles
toOutline,youneedtouploadthemdirectlytoS3withspecial
credentialswhichcanbeobtainedthroughthisendpoint.
</Description>
<Arguments>
<Argument
id="filename"
description="Filenameoftheuploadedfile"
required
/>
<Argument
id="kind"
description="Mimetypeofthedocument"
required
/>
<Argument
id="size"
description="Filesizeofthedocument"
required
/>
</Arguments>
</Method>

<Methodmethod="users.promote"label="Promoteanewadminuser">
<Description>
Promoteausertobeateamadmin.Thisendpointisonlyavailable
foradminusers.
</Description>
<Argumentspagination>
<Argumentid="id"description="UserIDtobepromoted"required/>
</Arguments>
</Method>

<Methodmethod="users.demote"label="Demoteexistingadminuser">
<Description>
Demoteexistingteamadminiftherearemorethanoneasoneadmin
isalwaysrequired.Thisendpointisonlyavailableforadmin
users.
</Description>
<Argumentspagination>
<Argumentid="id"description="UserIDtobedemoted"required/>
</Arguments>
</Method>

<Methodmethod="users.suspend"label="Suspenduseraccount">
<Description>
Admincansuspenduserstoreducethenumberofaccountsontheir
billingplanorpreventthemfromaccessingdocumention.
</Description>
<Argumentspagination>
<Argument
id="id"
description="UserIDtobesuspended"
required
/>
</Arguments>
</Method>

<Method
method="users.activate"
label="Activateasuspendeduseraccount"
>
<Description>
Admincanre-activeasuspendeduser.Thiswillupdatethebilling
planandre-enabletheiraccesstothedocumention.
</Description>
<Argumentspagination>
<Argument
id="id"
description="UserIDtobeactivated"
required
/>
</Arguments>
</Method>

<Method
method="collections.list"
label="Listyourdocumentcollections"
>
<Description>Listallyourdocumentcollections.</Description>
<Argumentspagination/>
</Method>

<Methodmethod="collections.info"label="Getadocumentcollection">
<Description>
Returnsdetailedinformationonadocumentcollection.
</Description>
<Arguments>
<Argumentid="id"description="Collectionid"required/>
</Arguments>
</Method>

<Method
method="collections.create"
label="Createadocumentcollection"
>
<Description>Createsanewdocumentcollection.</Description>
<Arguments>
<Argumentid="name"description="Collectionname"required/>
<Argument
id="description"
description="Shortdescriptionforthecollection"
/>
</Arguments>
</Method>

<Methodmethod="collections.update"label="Updateacollection">
<Description>
Thismethodallowsyoutomodifyanalreadycreatedcollection.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
<Argumentid="name"description="Nameforthecollection"/>
<Argumentid="private"description="Boolean"/>
<Argument
id="color"
description="Collectioncolorinhexform(e.g.#E1E1E1)"
/>
</Arguments>
</Method>

<Methodmethod="collections.add_user"label="Addacollectionmember">
<Description>
Thismethodallowsyoutoaddausertoaprivatecollection.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
<Argument
id="userId"
description="UserIDtoaddtothecollection"
/>
</Arguments>
</Method>

<Method
method="collections.remove_user"
label="Removeacollectionmember"
>
<Description>
Thismethodallowsyoutoremoveauserfromaprivatecollection.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
<Argument
id="userId"
description="UserIDtoremovefromthecollection"
/>
</Arguments>
</Method>

<Methodmethod="collections.users"label="Listcollectionmembers">
<Description>
Thismethodallowsyoutolistuserswithaccesstoaprivate
collection.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
</Arguments>
</Method>

<Methodmethod="collections.delete"label="Deleteacollection">
<Description>
Deleteacollectionandallofitsdocuments.Thisactioncan’tbe
undonesopleasebecareful.
</Description>
<Arguments>
<Argumentid="id"description="CollectionID"required/>
</Arguments>
</Method>

<Methodmethod="documents.list"label="Listyourdocuments">
<Description>Listallpublisheddocuments.</Description>
<Argumentspagination>
<Argument
id="collection"
description="CollectionIDtofilterby"
/>
</Arguments>
</Method>

<Methodmethod="documents.drafts"label="Listyourdraftdocuments">
<Description>Listallyourdraftdocuments.</Description>
</Method>

<Methodmethod="documents.info"label="Getadocument">
<Description>
<p>
Thismethodreturnsinformationforadocumentwithaspecific
ID.Thefollowingidentifiersareallowed:
</p>
<ul>
<li>
UUID-<Code>id</Code>fieldofthedocument
</li>
<li>
URIidentifier-HumanreadableidentifierusedinOutline
URLs(e.g.<Code>outline-api-i48ZEZc5zjXndcP</Code>)
</li>
</ul>
</Description>
<Arguments>
<Argumentid="id"description="DocumentIDorURIidentifier"/>
<Argumentid="shareId"description="AnactiveshareId"/>
</Arguments>
</Method>

<Methodmethod="documents.search"label="Searchdocuments">
<Description>
Thismethodsallowsyoutosearchyourteamsdocumentswith
keywords.Searchresultswillberestrictedtothoseaccessibleby
thecurrentaccesstoken.
</Description>
<Arguments>
<Argumentid="query"description="Searchquery"required/>
<Argumentid="includeArchived"description="Boolean"/>
</Arguments>
</Method>

<Methodmethod="documents.create"label="Createanewdocument">
<Description>
Thismethodallowsyoutopublishanewdocumentunderanexisting
collection.Bydefaultadocumentissettotheparentcollection
root.Ifyouwanttocreateasubdocument,youcanpass{''}
<Code>parentDocumentId</Code>tosetparentdocument.
</Description>
<Arguments>
<Argument
id="collectionId"
description={<span>
<Code>ID</Code>ofthecollectiontowhichthedocumentis
created
</span>}
required
/>
<Argument
id="title"
description="Titleforthedocument"
required
/><Argument);
id="text";
description="ContentofthedocumentinMarkdow";
required/<Argument;
id="parentDocumentId";
description={}<span><Code>ID</Code>;
of;
the;
parent;
document;
within;
the;
collection</span>/;
}/
825 117 string,prefetch string,prefetch?:boolean
826 332 filters.length>0 filters.size>0
827 694 untouchable.indexOf(colum.name)===-1 untouchable.indexOf(column.name)===-1
828 83 "Unknowmodeforpostcss-url:"+mode "Unknownmodeforpostcss-url:"+mode
829 83 "Unknowmodeforpostcss-url:"+mode "Unknownmodeforpostcss-url:"+mode
830 54 typeofwindow!==undefined typeofwindow!=="undefined"
831 58 "statinamic/lib/markdown-as-json-loader"+ "statinamic/lib/md-collection-loader"+
832 78 scope.inputObj.disabledDates&&scope.inputObj.disabledDates.length==0 scope.inputObj.disabledDates&&scope.inputObj.disabledDates.length===0
833 0 t.prevMonth=function(){
1===r.getMonth()&&r.setFullYear(r.getFullYear()),r.setMonth(r.getMonth()-1),t.currentMonth=a[r.getMonth()],t.currentYear=r.getFullYear(),o(r);
},t.nextMonth=function(){
11===r.getMonth()&&r.setFullYear(r.getFullYear()),r.setMonth(r.getMonth()+1),t.currentMonth=a[r.getMonth()],t.currentYear=r.getFullYear(),o(r);
},t.date_selection={
selected:!1,
selectedDate:"",
submitted:!1},t.dateSelected=function(e){
t.selctedDateString=e.dateString,t.date_selection.selected=!0,t.date_selection.selectedDate=newDate(e.dateString);
},n.on("click",function(){
o(angular.copy(t.ipDate)),e.show({
templateUrl:"templates/date-picker-modal.html",
title:"<strong>SelectDate</strong>",
subTitle:"",
scope:t,
buttons:[{
text:"Cancel"},{
text:"Set",
type:"button-positive",
onTap:function(e){
t.date_selection.submitted=!0,t.date_selection.selected===!0?t.ipDate=angular.copy(t.date_selection.selectedDate):e.preventDefault();
}}]});
}) t.prevMonth=function(){
1===r.getMonth()&&r.setFullYear(r.getFullYear()),r.setMonth(r.getMonth()-1),t.currentMonth=a[r.getMonth()],t.currentYear=r.getFullYear(),o(r);
},t.nextMonth=function(){
11===r.getMonth()&&r.setFullYear(r.getFullYear()),r.setMonth(r.getMonth()+1),t.currentMonth=a[r.getMonth()],t.currentYear=r.getFullYear(),o(r);
},t.date_selection={
selected:!1,
selectedDate:"",
submitted:!1},t.dateSelected=function(e){
t.selctedDateString=e.dateString,t.date_selection.selected=!0,t.date_selection.selectedDate=newDate(e.dateString);
},n.on("click",function(){
o(angular.copy(t.ipDate)),e.show({
templateUrl:"date-picker-modal.html",
title:"<strong>SelectDate</strong>",
subTitle:"",
scope:t,
buttons:[{
text:"Cancel"},{
text:"Set",
type:"button-positive",
onTap:function(e){
t.date_selection.submitted=!0,t.date_selection.selected===!0?t.ipDate=angular.copy(t.date_selection.selectedDate):e.preventDefault();
}}]});
})
834 0 o(angular.copy(t.ipDate)),e.show({
templateUrl:"templates/date-picker-modal.html",
title:"<strong>SelectDate</strong>",
subTitle:"",
scope:t,
buttons:[{
text:"Cancel"},{
text:"Set",
type:"button-positive",
onTap:function(e){
t.date_selection.submitted=!0,t.date_selection.selected===!0?t.ipDate=angular.copy(t.date_selection.selectedDate):e.preventDefault();
}}]}) o(angular.copy(t.ipDate)),e.show({
templateUrl:"date-picker-modal.html",
title:"<strong>SelectDate</strong>",
subTitle:"",
scope:t,
buttons:[{
text:"Cancel"},{
text:"Set",
type:"button-positive",
onTap:function(e){
t.date_selection.submitted=!0,t.date_selection.selected===!0?t.ipDate=angular.copy(t.date_selection.selectedDate):e.preventDefault();
}}]})
835 76 style.top||style.left==0 style.top||style.top==0
836 76 style.left==0 style.top==0
837 353 e.errno!=-(_c.EBADF||_c.os.errno.EBADF)&&e.errno!=(_c.ENOENT||_c.os.errno.ENOENT) e.errno!=-(_c.EBADF||_c.os.errno.EBADF)&&e.errno!=-(_c.ENOENT||_c.os.errno.ENOENT)
838 353 e.errno!=(_c.ENOENT||_c.os.errno.ENOENT) e.errno!=-(_c.ENOENT||_c.os.errno.ENOENT)
839 354 e.errno!=-_c.EBADF&&e.errno!=-c.ENOENT e.errno!=-_c.EBADF&&e.errno!=-_c.ENOENT
840 354 e.errno!=-c.ENOENT e.errno!=-_c.ENOENT
841 354 e.errno!=-_c.EBADF&&e.errno!=-c.ENOENT e.errno!=-_c.EBADF&&e.errno!=-_c.ENOENT
842 354 e.errno!=-c.ENOENT e.errno!=-_c.ENOENT
843 49 browserTemplates&&browserTemplates[templateKey]||templatesCache[templateKey] global.browserTemplates&&global.browserTemplates[templateKey]||templatesCache[templateKey]
844 0 Diff2HtmlUI.prototype.draw=function(targetId,config){
varcfg=config||{},$target=this._getTarget(targetId);
$target.html(Diff2Html.getPrettyHtml(diffJson,cfg));
},Diff2HtmlUI.prototype.fileListCloseable=function(targetId,startVisible){
functionshow(){
$showBtn.hide(),$hideBtn.show(),$fileList.show();
}
functionhide(){
$hideBtn.hide(),$showBtn.show(),$fileList.hide();
}
var$target=this._getTarget(targetId),hashTag=this._getHashTag(),$showBtn=$target.find(".d2h-show"),$hideBtn=$target.find(".d2h-hide"),$fileList=$target.find(".d2h-file-list");
"files-summary-show"===hashTag?show():"files-summary-hide"===hashTag?hide():startVisible?show():hide(),$showBtn.click(show),$hideBtn.click(hide);
},Diff2HtmlUI.prototype.highlightCode=function(targetId){
varthat=this,$target=that._getTarget(targetId),languages=that._getLanguages($target);
hljs.configure({
languages:languages});
var$codeLines=$target.find(".d2h-code-line-ctn");
$codeLines.map(function(i,line){
hljs.highlightBlock(line);
});
},Diff2HtmlUI.prototype._getTarget=function(targetId){
var$target;
return$target=$(targetId?targetId:defaultTarget);
},Diff2HtmlUI.prototype._getLanguages=function($target){
varallFileLanguages=[];
returndiffJson?allFileLanguages=diffJson.map(function(line){
returnline.language;
}):$target.find(".d2h-file-wrapper").map(function(i,file){
allFileLanguages.push($(file).data("lang"));
}),this._distinct(allFileLanguages);
},Diff2HtmlUI.prototype._getHashTag=function(){
vardocUrl=document.URL,hashTagIndex=docUrl.indexOf("#"),hashTag=null;
return-1!=hashTagIndex&&(hashTag=docUrl.substr(hashTagIndex+1)),hashTag;
},Diff2HtmlUI.prototype._distinct=function(collection){
returncollection.filter(function(v,i){
returncollection.indexOf(v)===i;
});
},module.exports.Diff2HtmlUI=Diff2HtmlUI,global.Diff2HtmlUI=Diff2HtmlUI Diff2HtmlUI.prototype.draw=function(targetId,config){
varcfg=config||{},$target=this._getTarget(targetId);
$target.html(Diff2Html.getPrettyHtml(diffJson,cfg));
},Diff2HtmlUI.prototype.fileListCloseable=function(targetId,startVisible){
functionshow(){
$showBtn.hide(),$hideBtn.show(),$fileList.show();
}
functionhide(){
$hideBtn.hide(),$showBtn.show(),$fileList.hide();
}
var$target=this._getTarget(targetId),hashTag=this._getHashTag(),$showBtn=$target.find(".d2h-show"),$hideBtn=$target.find(".d2h-hide"),$fileList=$target.find(".d2h-file-list");
"files-summary-show"===hashTag?show():"files-summary-hide"===hashTag?hide():startVisible?show():hide(),$showBtn.click(show),$hideBtn.click(hide);
},Diff2HtmlUI.prototype.highlightCode=function(targetId){
varthat=this,$target=that._getTarget(targetId),languages=that._getLanguages($target);
hljs.configure({
languages:languages});
var$codeLines=$target.find(".d2h-code-line-ctn");
$codeLines.map(function(i,line){
hljs.highlightBlock(line);
});
},Diff2HtmlUI.prototype._getTarget=function(targetId){
var$target;
return$target=$(targetId?targetId:defaultTarget);
},Diff2HtmlUI.prototype._getLanguages=function($target){
varallFileLanguages=[];
returndiffJson?allFileLanguages=diffJson.map(function(line){
returnline.language;
}):$target.find(".d2h-file-wrapper").map(function(i,file){
allFileLanguages.push($(file).data("lang"));
}),this._distinct(allFileLanguages);
},Diff2HtmlUI.prototype._getHashTag=function(){
vardocUrl=document.URL,hashTagIndex=docUrl.indexOf("#"),hashTag=null;
return-1!==hashTagIndex&&(hashTag=docUrl.substr(hashTagIndex+1)),hashTag;
},Diff2HtmlUI.prototype._distinct=function(collection){
returncollection.filter(function(v,i){
returncollection.indexOf(v)===i;
});
},module.exports.Diff2HtmlUI=Diff2HtmlUI,global.Diff2HtmlUI=Diff2HtmlUI
845 0 Diff2HtmlUI.prototype.draw=function(targetId,config){
varcfg=config||{},$target=this._getTarget(targetId);
$target.html(Diff2Html.getPrettyHtml(diffJson,cfg));
},Diff2HtmlUI.prototype.fileListCloseable=function(targetId,startVisible){
functionshow(){
$showBtn.hide(),$hideBtn.show(),$fileList.show();
}
functionhide(){
$hideBtn.hide(),$showBtn.show(),$fileList.hide();
}
var$target=this._getTarget(targetId),hashTag=this._getHashTag(),$showBtn=$target.find(".d2h-show"),$hideBtn=$target.find(".d2h-hide"),$fileList=$target.find(".d2h-file-list");
"files-summary-show"===hashTag?show():"files-summary-hide"===hashTag?hide():startVisible?show():hide(),$showBtn.click(show),$hideBtn.click(hide);
},Diff2HtmlUI.prototype.highlightCode=function(targetId){
varthat=this,$target=that._getTarget(targetId),languages=that._getLanguages($target);
hljs.configure({
languages:languages});
var$codeLines=$target.find(".d2h-code-line-ctn");
$codeLines.map(function(i,line){
hljs.highlightBlock(line);
});
},Diff2HtmlUI.prototype._getTarget=function(targetId){
var$target;
return$target=$(targetId?targetId:defaultTarget);
},Diff2HtmlUI.prototype._getLanguages=function($target){
varallFileLanguages=[];
returndiffJson?allFileLanguages=diffJson.map(function(line){
returnline.language;
}):$target.find(".d2h-file-wrapper").map(function(i,file){
allFileLanguages.push($(file).data("lang"));
}),this._distinct(allFileLanguages);
},Diff2HtmlUI.prototype._getHashTag=function(){
vardocUrl=document.URL,hashTagIndex=docUrl.indexOf("#"),hashTag=null;
return-1!=hashTagIndex&&(hashTag=docUrl.substr(hashTagIndex+1)),hashTag;
},Diff2HtmlUI.prototype._distinct=function(collection){
returncollection.filter(function(v,i){
returncollection.indexOf(v)===i;
});
},module.exports.Diff2HtmlUI=Diff2HtmlUI Diff2HtmlUI.prototype.draw=function(targetId,config){
varcfg=config||{},$target=this._getTarget(targetId);
$target.html(Diff2Html.getPrettyHtml(diffJson,cfg));
},Diff2HtmlUI.prototype.fileListCloseable=function(targetId,startVisible){
functionshow(){
$showBtn.hide(),$hideBtn.show(),$fileList.show();
}
functionhide(){
$hideBtn.hide(),$showBtn.show(),$fileList.hide();
}
var$target=this._getTarget(targetId),hashTag=this._getHashTag(),$showBtn=$target.find(".d2h-show"),$hideBtn=$target.find(".d2h-hide"),$fileList=$target.find(".d2h-file-list");
"files-summary-show"===hashTag?show():"files-summary-hide"===hashTag?hide():startVisible?show():hide(),$showBtn.click(show),$hideBtn.click(hide);
},Diff2HtmlUI.prototype.highlightCode=function(targetId){
varthat=this,$target=that._getTarget(targetId),languages=that._getLanguages($target);
hljs.configure({
languages:languages});
var$codeLines=$target.find(".d2h-code-line-ctn");
$codeLines.map(function(i,line){
hljs.highlightBlock(line);
});
},Diff2HtmlUI.prototype._getTarget=function(targetId){
var$target;
return$target=$(targetId?targetId:defaultTarget);
},Diff2HtmlUI.prototype._getLanguages=function($target){
varallFileLanguages=[];
returndiffJson?allFileLanguages=diffJson.map(function(line){
returnline.language;
}):$target.find(".d2h-file-wrapper").map(function(i,file){
allFileLanguages.push($(file).data("lang"));
}),this._distinct(allFileLanguages);
},Diff2HtmlUI.prototype._getHashTag=function(){
vardocUrl=document.URL,hashTagIndex=docUrl.indexOf("#"),hashTag=null;
return-1!==hashTagIndex&&(hashTag=docUrl.substr(hashTagIndex+1)),hashTag;
},Diff2HtmlUI.prototype._distinct=function(collection){
returncollection.filter(function(v,i){
returncollection.indexOf(v)===i;
});
},module.exports.Diff2HtmlUI=Diff2HtmlUI
846 0 Diff2HtmlUI.prototype.draw=function(targetId,config){
varcfg=config||{},$target=this._getTarget(targetId);
$target.html(Diff2Html.getPrettyHtml(diffJson,cfg));
},Diff2HtmlUI.prototype.fileListCloseable=function(targetId,startVisible){
functionshow(){
$showBtn.hide(),$hideBtn.show(),$fileList.show();
}
functionhide(){
$hideBtn.hide(),$showBtn.show(),$fileList.hide();
}
var$target=this._getTarget(targetId),hashTag=this._getHashTag(),$showBtn=$target.find(".d2h-show"),$hideBtn=$target.find(".d2h-hide"),$fileList=$target.find(".d2h-file-list");
"files-summary-show"===hashTag?show():"files-summary-hide"===hashTag?hide():startVisible?show():hide(),$showBtn.click(show),$hideBtn.click(hide);
},Diff2HtmlUI.prototype.highlightCode=function(targetId){
varthat=this,$target=that._getTarget(targetId),languages=that._getLanguages($target);
hljs.configure({
languages:languages});
var$codeLines=$target.find(".d2h-code-line-ctn");
$codeLines.map(function(i,line){
hljs.highlightBlock(line);
});
},Diff2HtmlUI.prototype._getTarget=function(targetId){
var$target;
return$target=$(targetId?targetId:defaultTarget);
},Diff2HtmlUI.prototype._getLanguages=function($target){
varallFileLanguages=[];
returndiffJson?allFileLanguages=diffJson.map(function(line){
returnline.language;
}):$target.find(".d2h-file-wrapper").map(function(i,file){
allFileLanguages.push($(file).data("lang"));
}),this._distinct(allFileLanguages);
},Diff2HtmlUI.prototype._getHashTag=function(){
vardocUrl=document.URL,hashTagIndex=docUrl.indexOf("#"),hashTag=null;
return-1!=hashTagIndex&&(hashTag=docUrl.substr(hashTagIndex+1)),hashTag;
},Diff2HtmlUI.prototype._distinct=function(collection){
returncollection.filter(function(v,i){
returncollection.indexOf(v)===i;
});
} Diff2HtmlUI.prototype.draw=function(targetId,config){
varcfg=config||{},$target=this._getTarget(targetId);
$target.html(Diff2Html.getPrettyHtml(diffJson,cfg));
},Diff2HtmlUI.prototype.fileListCloseable=function(targetId,startVisible){
functionshow(){
$showBtn.hide(),$hideBtn.show(),$fileList.show();
}
functionhide(){
$hideBtn.hide(),$showBtn.show(),$fileList.hide();
}
var$target=this._getTarget(targetId),hashTag=this._getHashTag(),$showBtn=$target.find(".d2h-show"),$hideBtn=$target.find(".d2h-hide"),$fileList=$target.find(".d2h-file-list");
"files-summary-show"===hashTag?show():"files-summary-hide"===hashTag?hide():startVisible?show():hide(),$showBtn.click(show),$hideBtn.click(hide);
},Diff2HtmlUI.prototype.highlightCode=function(targetId){
varthat=this,$target=that._getTarget(targetId),languages=that._getLanguages($target);
hljs.configure({
languages:languages});
var$codeLines=$target.find(".d2h-code-line-ctn");
$codeLines.map(function(i,line){
hljs.highlightBlock(line);
});
},Diff2HtmlUI.prototype._getTarget=function(targetId){
var$target;
return$target=$(targetId?targetId:defaultTarget);
},Diff2HtmlUI.prototype._getLanguages=function($target){
varallFileLanguages=[];
returndiffJson?allFileLanguages=diffJson.map(function(line){
returnline.language;
}):$target.find(".d2h-file-wrapper").map(function(i,file){
allFileLanguages.push($(file).data("lang"));
}),this._distinct(allFileLanguages);
},Diff2HtmlUI.prototype._getHashTag=function(){
vardocUrl=document.URL,hashTagIndex=docUrl.indexOf("#"),hashTag=null;
return-1!==hashTagIndex&&(hashTag=docUrl.substr(hashTagIndex+1)),hashTag;
},Diff2HtmlUI.prototype._distinct=function(collection){
returncollection.filter(function(v,i){
returncollection.indexOf(v)===i;
});
}
847 0 Diff2HtmlUI.prototype.draw=function(targetId,config){
varcfg=config||{},$target=this._getTarget(targetId);
$target.html(Diff2Html.getPrettyHtml(diffJson,cfg));
},Diff2HtmlUI.prototype.fileListCloseable=function(targetId,startVisible){
functionshow(){
$showBtn.hide(),$hideBtn.show(),$fileList.show();
}
functionhide(){
$hideBtn.hide(),$showBtn.show(),$fileList.hide();
}
var$target=this._getTarget(targetId),hashTag=this._getHashTag(),$showBtn=$target.find(".d2h-show"),$hideBtn=$target.find(".d2h-hide"),$fileList=$target.find(".d2h-file-list");
"files-summary-show"===hashTag?show():"files-summary-hide"===hashTag?hide():startVisible?show():hide(),$showBtn.click(show),$hideBtn.click(hide);
},Diff2HtmlUI.prototype.highlightCode=function(targetId){
varthat=this,$target=that._getTarget(targetId),languages=that._getLanguages($target);
hljs.configure({
languages:languages});
var$codeLines=$target.find(".d2h-code-line-ctn");
$codeLines.map(function(i,line){
hljs.highlightBlock(line);
});
},Diff2HtmlUI.prototype._getTarget=function(targetId){
var$target;
return$target=$(targetId?targetId:defaultTarget);
},Diff2HtmlUI.prototype._getLanguages=function($target){
varallFileLanguages=[];
returndiffJson?allFileLanguages=diffJson.map(function(line){
returnline.language;
}):$target.find(".d2h-file-wrapper").map(function(i,file){
allFileLanguages.push($(file).data("lang"));
}),this._distinct(allFileLanguages);
},Diff2HtmlUI.prototype._getHashTag=function(){
vardocUrl=document.URL,hashTagIndex=docUrl.indexOf("#"),hashTag=null;
return-1!=hashTagIndex&&(hashTag=docUrl.substr(hashTagIndex+1)),hashTag;
} Diff2HtmlUI.prototype.draw=function(targetId,config){
varcfg=config||{},$target=this._getTarget(targetId);
$target.html(Diff2Html.getPrettyHtml(diffJson,cfg));
},Diff2HtmlUI.prototype.fileListCloseable=function(targetId,startVisible){
functionshow(){
$showBtn.hide(),$hideBtn.show(),$fileList.show();
}
functionhide(){
$hideBtn.hide(),$showBtn.show(),$fileList.hide();
}
var$target=this._getTarget(targetId),hashTag=this._getHashTag(),$showBtn=$target.find(".d2h-show"),$hideBtn=$target.find(".d2h-hide"),$fileList=$target.find(".d2h-file-list");
"files-summary-show"===hashTag?show():"files-summary-hide"===hashTag?hide():startVisible?show():hide(),$showBtn.click(show),$hideBtn.click(hide);
},Diff2HtmlUI.prototype.highlightCode=function(targetId){
varthat=this,$target=that._getTarget(targetId),languages=that._getLanguages($target);
hljs.configure({
languages:languages});
var$codeLines=$target.find(".d2h-code-line-ctn");
$codeLines.map(function(i,line){
hljs.highlightBlock(line);
});
},Diff2HtmlUI.prototype._getTarget=function(targetId){
var$target;
return$target=$(targetId?targetId:defaultTarget);
},Diff2HtmlUI.prototype._getLanguages=function($target){
varallFileLanguages=[];
returndiffJson?allFileLanguages=diffJson.map(function(line){
returnline.language;
}):$target.find(".d2h-file-wrapper").map(function(i,file){
allFileLanguages.push($(file).data("lang"));
}),this._distinct(allFileLanguages);
},Diff2HtmlUI.prototype._getHashTag=function(){
vardocUrl=document.URL,hashTagIndex=docUrl.indexOf("#"),hashTag=null;
return-1!==hashTagIndex&&(hashTag=docUrl.substr(hashTagIndex+1)),hashTag;
}
848 0 -1!=hashTagIndex&&(hashTag=docUrl.substr(hashTagIndex+1)),hashTag -1!==hashTagIndex&&(hashTag=docUrl.substr(hashTagIndex+1)),hashTag
849 0 -1!=hashTagIndex&&(hashTag=docUrl.substr(hashTagIndex+1)) -1!==hashTagIndex&&(hashTag=docUrl.substr(hashTagIndex+1))
850 125 newLines.length>0||(line.type!==diffParser.LINE_TYPE.DELETES&&oldLines>0) newLines.length>0||(line.type!==diffParser.LINE_TYPE.DELETES&&oldLines.length>0)
851 125 line.type!==diffParser.LINE_TYPE.DELETES&&oldLines>0 line.type!==diffParser.LINE_TYPE.DELETES&&oldLines.length>0
852 125 oldLines>0 oldLines.length>0
853 150 newLines.length>0||(line.type!==diffParser.LINE_TYPE.DELETES&&oldLines>0) newLines.length>0||(line.type!==diffParser.LINE_TYPE.DELETES&&oldLines.length>0)
854 150 line.type!==diffParser.LINE_TYPE.DELETES&&oldLines>0 line.type!==diffParser.LINE_TYPE.DELETES&&oldLines.length>0
855 150 oldLines>0 oldLines.length>0
856 125 newLines.length>0||(line.type!==diffParser.LINE_TYPE.DELETES&&oldLines>0) newLines.length>0||(line.type!==diffParser.LINE_TYPE.DELETES&&oldLines.length>0)
857 125 line.type!==diffParser.LINE_TYPE.DELETES&&oldLines>0 line.type!==diffParser.LINE_TYPE.DELETES&&oldLines.length>0
858 125 oldLines>0 oldLines.length>0
859 150 newLines.length>0||(line.type!==diffParser.LINE_TYPE.DELETES&&oldLines>0) newLines.length>0||(line.type!==diffParser.LINE_TYPE.DELETES&&oldLines.length>0)
860 150 line.type!==diffParser.LINE_TYPE.DELETES&&oldLines>0 line.type!==diffParser.LINE_TYPE.DELETES&&oldLines.length>0
861 150 oldLines>0 oldLines.length>0
862 331 '#'+sectionId '#'+decodeURI(sectionId)
863 63 fs.existsSync(this.helpFile)&&options.helpFile fs.existsSync(options.helpFile)&&options.helpFile
864 63 fs.existsSync(this.helpFile)&&options.helpFile fs.existsSync(options.helpFile)&&options.helpFile
865 160 codeUrl&&codeUrl.lastIndexOf("https://github.com/",0)===0 codeUrl&&(codeUrl.lastIndexOf("https://github.com/",0)===0||codeUrl.lastIndexOf("https://gitlab.com/",0)===0||codeUrl.lastIndexOf("https://bitbucket.org/",0)===0)
866 160 codeUrl&&codeUrl.lastIndexOf("https://github.com/",0)===0 codeUrl&&(codeUrl.lastIndexOf("https://github.com/",0)===0||codeUrl.lastIndexOf("https://gitlab.com/",0)===0||codeUrl.lastIndexOf("https://bitbucket.org/",0)===0)
867 127 mail.headers["message-id"]||Meteor.uuid()+"@"+HOSTNAME mail.headers["message-id"]||Random.id()+"@"+HOSTNAME
868 127 Meteor.uuid()+"@"+HOSTNAME Random.id()+"@"+HOSTNAME
869 127 Meteor.uuid()+"@" Random.id()+"@"
870 7 15*60*1000 60*60*1000
871 7 15*60 60*60
872 16 15*60*1000 60*60*1000
873 16 15*60 60*60
874 55 t.grainIdingrainIdSet grainIdingrainIdSet
875 55 t.grainIdingrainIdSet grainIdingrainIdSet
876 1252 !_.isEqual(newApiToken.roleAssignment,oldApiToken.roaleAssignment)||!_.isEqual(newApiToken.revoked,oldApiToken.revoked) !_.isEqual(newApiToken.roleAssignment,oldApiToken.roleAssignment)||!_.isEqual(newApiToken.revoked,oldApiToken.revoked)
877 1412 membership&&membership.ldap&&membership.saml.enabled membership&&membership.saml&&membership.saml.enabled
878 1412 membership.ldap&&membership.saml.enabled membership.saml&&membership.saml.enabled
879 1412 membership&&membership.ldap&&membership.saml.enabled membership&&membership.saml&&membership.saml.enabled
880 1412 membership.ldap&&membership.saml.enabled membership.saml&&membership.saml.enabled
881 1559 !account.payments&&!Contacts.findOne({
ownerId:account._id}) !(account.payments&&account.payments.id)&&!Contacts.findOne({
ownerId:account._id})
882 72 "The"+serviceName+"loginservicehasaconfigurationproblem("+err.message "Configurationproblem:"+err.message
883 116 keyInfo&&keyInfo.rejectedBy===user._id keyInfo&&user&&keyInfo.rejectedBy===user._id
884 287 now+twentyMinutesFromNow now+twentyMinutesInMilliseconds
885 288 result.notAfter-twentyMinutesFromNow result.notAfter-twentyMinutesInMilliseconds
886 803 current&&ApiTokens.find({
grainId:current.grainId(),
userId:Meteor.userId(),
forSharing:{
$ne:true},
$or:[{
owner:{
webkey:null}},{
owner:{
$exists:false}}],
expiresIfUnused:null}) current&&ApiTokens.find({
grainId:current.grainId(),
identityId:current.identityId(),
forSharing:{
$ne:true},
$or:[{
owner:{
webkey:null}},{
owner:{
$exists:false}}],
expiresIfUnused:null})
887 803 current&&ApiTokens.find({
grainId:current.grainId(),
userId:Meteor.userId(),
forSharing:{
$ne:true},
$or:[{
owner:{
webkey:null}},{
owner:{
$exists:false}}],
expiresIfUnused:null}) current&&ApiTokens.find({
grainId:current.grainId(),
identityId:current.identityId(),
forSharing:{
$ne:true},
$or:[{
owner:{
webkey:null}},{
owner:{
$exists:false}}],
expiresIfUnused:null})
888 149 i<grainIds.length i<ids.length
889 251 totalSize<=(40*1024) totalSize<=(64*1024)
890 251 40*1024 64*1024
891 259 totalSize>(40*1024) totalSize>(64*1024)
892 259 40*1024 64*1024
893 139 grainInfo.ownerId===userId grainInfo.owner===userId
894 139 grainInfo.ownerId===userId grainInfo.owner===userId
895 53 karma.LOG_DISABLE,reporters karma.LOG_ERROR,reporters
896 25 target.length===0||this.isNode(target[0]) target.length===0||isNode(target[0])
897 737 !sequence.blocked&&elem.revealing&&!elem.disabled elem.config.reset&&elem.revealing&&!elem.disabled
898 528 /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge|maemo|midp|mmp|mobile.+firefox|netfront|operam(ob|in)i|palm(os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows(ce|phone)|xda|xiino/i.test(agent)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|awa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r|s)|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp(i|ip)|hs\-c|ht(c(\-||_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac(|\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt(|\/)|klon|kpt|kwc\-|kyo(c|k)|le(no|xi)|lg(g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-||o|v)|zz)|mt(50|p1|v)|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v)|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-|)|webc|whit|wi(g|nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(agent.substr(0,4)) /(ipad|playbook|silk|android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge|maemo|midp|mmp|mobile.+firefox|netfront|operam(ob|in)i|palm(os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows(ce|phone)|xda|xiino/i.test(agent)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|awa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r|s)|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp(i|ip)|hs\-c|ht(c(\-||_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac(|\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt(|\/)|klon|kpt|kwc\-|kyo(c|k)|le(no|xi)|lg(g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-||o|v)|zz)|mt(50|p1|v)|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v)|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-|)|webc|whit|wi(g|nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(agent.substr(0,4))
899 516 (elTop+elHeight*vFactor>self.scrolled)&&(elBottom-elHeight*vFactor<self.scrolled+self.getViewportH())||(elem.domEl.currentStyle?elem.domEl.currentStyle:window.getComputedStyle(elem.domEl,null)).position=='fixed' (elTop+elHeight*vFactor<self.scrolled+self.getViewportH())&&(elBottom-elHeight*vFactor>self.scrolled)||(elem.domEl.currentStyle?elem.domEl.currentStyle:window.getComputedStyle(elem.domEl,null)).position=='fixed'
900 70 (v*=parse(number,true))/10000 (v*=parse(number,false))/10000
901 376 x<0 a<0
902 376 x<0 a<0
903 822 i===this.pos||c<'0'||c>'9' i===this.pos||(c!='_'&&(c<'0'||c>'9'))
904 155 formatWithLabel(`${prefix}unexpectationsexception:`,actual),formatWithLabel('Expectedtobestrictlyequalto:',expectations.is) formatWithLabel(`${prefix}unexpectedexception:`,actual),formatWithLabel('Expectedtobestrictlyequalto:',expectations.is)
905 8 ''.repeat(String(maxLineNumber).length-String(lineNumber).length)+lineNumber ''.repeat(Math.max(0,String(maxLineNumber).length-String(lineNumber).length))+lineNumber
906 257 msg||err.toString() msg||err&&err.toString()
907 192 isRegExp(constraints.callbackId)&&!constraints.callbackId.text(payload.callback_id) isRegExp(constraints.callbackId)&&!constraints.callbackId.test(payload.callback_id)
908 61 opts.socketFn||wsSocketFn clientOpts.socketFn||wsSocketFn
909 48 rule.hostname&&rule.hostname!=u.hostname rule.hostname&&rule.hostname.hostname!=u.hostname
910 48 rule.hostname!=u.hostname rule.hostname.hostname!=u.hostname
911 74 this.portalNode.props.node||this.protalNode.defaultNode this.portalNode.props.node||this.portalNode.defaultNode
912 74 this.portalNode.props.node||this.protalNode.defaultNode this.portalNode.props.node||this.portalNode.defaultNode
913 138 root.contains(e.target)||e.button!==0 root.contains(e.target)||(e.button&&e.button!==0)
914 138 root.contains(e.target)||e.button!==0 root.contains(e.target)||(e.button&&e.button!==0)
915 459 !req.seeder&&!req.passkeyuser.isVip&&event(query.event)===EVENT_STARTED !req.seeder&&!req.passkeyuser.isVip&&!req.passkeyuser.isOper&&event(query.event)===EVENT_STARTED
916 459 !req.passkeyuser.isVip&&event(query.event)===EVENT_STARTED !req.passkeyuser.isVip&&!req.passkeyuser.isOper&&event(query.event)===EVENT_STARTED
917 55 parseFloat(v)||0 parseFloat(parseFloat(v).toFixed(2))||0
918 39 parseFloat(v)||0 parseFloat(parseFloat(v).toFixed(2))||0
919 35 parseFloat(v)||0 parseFloat(parseFloat(v).toFixed(2))||0
920 33 data.write_score||0 data.write_score.toFixed(2)||0
921 36 data.isUploader||undefined data.scoreSettingValue||undefined
922 72 (request.createdAt+requestsConfig.requestExpires)>=Date.now() (moment(request.createdAt)+requestsConfig.requestExpires)>=Date.now()
923 72 request.createdAt+requestsConfig.requestExpires moment(request.createdAt)+requestsConfig.requestExpires
924 276 60*60*1000*24*1 60*60*1000*24*7
925 90 r.createdAt+vm.requestsConfig.requestExpires moment(r.createdAt)+vm.requestsConfig.requestExpires
926 93 r.createdAt+vm.requestsConfig.requestExpires moment(r.createdAt)+vm.requestsConfig.requestExpires
927 93 r.createdAt+vm.requestsConfig.requestExpires moment(r.createdAt)+vm.requestsConfig.requestExpires
928 263 r.createdAt+vm.requestsConfig.requestExpires moment(r.createdAt)+vm.requestsConfig.requestExpires
929 76 vm.user._id+'|'+vm.user.username vm.user._id+'|'+vm.user.displayName
930 27 vm.user._id+'|'+vm.user.username vm.user._id+'|'+vm.user.displayName
931 696 req.torrent.torrent_vip&&!req.user.isVip req.torrent.torrent_vip&&!req.user.isVip&&!req.user.isOper
932 127 o.user._id.str===vm.user._id o.user._id===vm.user._id
933 111 this.total_seed_day>=hnrConfig.condition.seedTime this.total_seed_time>=hnrConfig.condition.seedTime
934 111 this.total_ratio===-1||this.total_ratio>=hnrConfig.condition.ratio this.total_downloaded===0||this.total_ratio>=hnrConfig.condition.ratio
935 19 user._id+'|'+user.username user._id+'|'+user.displayName
936 17 'L'+level 'L'+(level?level:0)
937 13 24*(60*1000) 24*(60*60*1000)
938 13 60*1000 60*60*1000
939 13 24*(60*1000) 24*(60*60*1000)
940 13 60*1000 60*60*1000
941 144 this.menus[menuId].items[itemIndex].subitems[subitemIndex].link===menuItemURL this.menus[menuId].items[itemIndex].subitems[subitemIndex].link===submenuItemURL
942 101 this.menus[menuId].items[itemIndex].menuItemURL===menuItemURL this.menus[menuId].items[itemIndex].link===menuItemURL
943 129 "isnotexactlyonefrom"+schema.oneOf.map(function(v){
return(v.id&&('<'+v.id+'>'))||(v.title&&JSON.stringify(v.title))||(v['$ref']&&('<'+v['$ref']+'>'))||'[subschema'+i+']';
}) "isnotexactlyonefrom"+schema.oneOf.map(function(v,i){
return(v.id&&('<'+v.id+'>'))||(v.title&&JSON.stringify(v.title))||(v['$ref']&&('<'+v['$ref']+'>'))||'[subschema'+i+']';
})
944 164 "Property"+property "additionalProperty'"+property
945 314 "isnot"+schema.minimum "musthaveaminimumvalueof"+schema.minimum
946 314 "isnot"+schema.minimum "musthaveaminimumvalueof"+schema.minimum
947 11 n.options.anchorSettings.anchorClickable!==!1 n.options.anchorSettings.enableAllAnchors!==!1
948 24 headers.type==="link" headers.type==="symlink"
949 63 author.id===bot.id author.id===bot.user.id
950 13 opts.authors||phaser.utils.AUTHORS()||[] opts.authors||phaser.utils.authors()||[]
951 13 phaser.utils.AUTHORS()||[] phaser.utils.authors()||[]
952 336 preferredProto+base preferredProto+':'+base
953 132 preferredProto+base preferredProto+':'+base
954 1039 "{}.toString.call("+this.name+")" "{}.toString.call("+this.name+".prototype)"
955 15 this.host||hostname opts.host||hostname
956 64 resolveExtensions.indexOf(ext)>=-1 resolveExtensions.indexOf(ext)>=0
957 434 !isMutable&&bufcmp(sha1(res.v),hash) !isMutable&&!bufcmp(sha1(res.v),hash)
958 230 i<filesCount i<files_count
959 239 (startAt&&theDate.isAfter(dueAt))||(endAt&&theDate.isAfter(endAt))||(dueAt&&theDate.isAfter(dueAt)) (startAt&&theDate.isAfter(startAt))||(endAt&&theDate.isAfter(endAt))||(dueAt&&theDate.isAfter(dueAt))
960 239 startAt&&theDate.isAfter(dueAt) startAt&&theDate.isAfter(startAt)
961 523 disableRegistration&&options.ldap disableRegistration&&options&&options.ldap
962 100 action.memberName==='*' action.username==='*'
963 202 evt.keyCode===13&&!event.shiftKey evt.keyCode===13&&!evt.shiftKey
964 200 evt.keyCode===13&&!event.shiftKey evt.keyCode===13&&!evt.shiftKey
965 304 this._now(commentToCreate.createdAt),userId this._now(comment.date),userId
966 287 this._user(comment.memberCreator.id), this._user(comment.idMemberCreator),
967 300 this._user(commentToCreate.userId), commentToCreate.userId,
968 287 this._user(comment.memberCreator.id), this._user(comment.idMemberCreator),
969 300 this._user(commentToCreate.userId), commentToCreate.userId,
970 154 Math.floor(maxOrder)+1 maxOrder+1
971 32 shallow!=='2' shallow!=='1'
972 60 string,httpChallengeInfo?:HTTPChallengeInfo string|null,httpChallengeInfo?:HTTPChallengeInfo
973 163 nowConfig.files||pkg.files nowConfig.files||pkg.files||(pkg.now&&pkg.now.files)
974 49 config.app&&config.app.env&&config.app.env.PORT!==80 config.app&&config.app.env&&config.app.env.PORT&&config.app.env.PORT!==80
975 67 logs.stderr.length-2000 logs.stderr.length-4200
976 69 logs.stdout.length-2000 logs.stdout.length-4200
977 40 this.storezfData||this this.options.reflow&&this.storezfData||this
978 155 (this.options.end-this.options.start)*pctOfBar+this.options.start (this.options.end-this.options.start)*pctOfBar+parseFloat(this.options.start)
979 155 (this.options.end-this.options.start)*pctOfBar+this.options.start (this.options.end-this.options.start)*pctOfBar+parseFloat(this.options.start)
980 159 e.target===_this.$element[0]||$.contains(_this.$element[0],e.target) e.target===_this.$element[0]||$.contains(_this.$element[0],e.target)||!$.contains(document,e.target)
981 30 eleDims.offset.left+eleDims.width<=parDims.width eleDims.offset.left+eleDims.width<=parDims.width+parDims.offset.left
982 143 !Foundation.Box.ImNotTouchingYou(this.$element)&&this.counter !Foundation.Box.ImNotTouchingYou(this.$element,false,true)&&this.counter
983 30 eleDims.offset.left+eleDims.width<=parDims.width eleDims.offset.left+eleDims.width<=parDims.width+parDims.offset.left
984 143 !Foundation.Box.ImNotTouchingYou(this.$element)&&this.counter !Foundation.Box.ImNotTouchingYou(this.$element,false,true)&&this.counter
985 172 movement-(isNaN(handlePos)?this.options.initialStart:handlePos)+handlePct movement-(isNaN(handlePos)?this.options.initialStart/((this.options.end-this.options.start)/100):handlePos)+handlePct
986 172 movement-(isNaN(handlePos)?this.options.initialStart:handlePos) movement-(isNaN(handlePos)?this.options.initialStart/((this.options.end-this.options.start)/100):handlePos)
987 163 this.options.tooltipClass+'' this.options.tooltipClass+''+this.options.positionClass+''
988 54 S(e.target).data(self.data_attr())&&settings.is_hover S(e.currentTarget).data(self.data_attr())&&settings.is_hover
989 40 e.pageX||e.originalEvent.touches[0].clientX||e.currentPoint.x e.pageX||e.originalEvent.clientX||e.originalEvent.touches[0].clientX||e.currentPoint.x
990 460 this.outerWidth(this.settings.$target)+this.settings.$target.offset().left+nub_width this.settings.$target.outerWidth()+this.settings.$target.offset().left+nub_width
991 460 this.outerWidth(this.settings.$target)+this.settings.$target.offset().left this.settings.$target.outerWidth()+this.settings.$target.offset().left
992 468 this.settings.$target.offset().left-this.outerWidth(this.settings.$next_tip)-nub_width this.settings.$target.offset().left-this.settings.$next_tip.outerWidth()-nub_width
993 468 this.settings.$target.offset().left-this.outerWidth(this.settings.$next_tip) this.settings.$target.offset().left-this.settings.$next_tip.outerWidth()
994 458 this.outerWidth(this.settings.$target)+this.settings.$target.offset().left+nub_width this.settings.$target.outerWidth()+this.settings.$target.offset().left+nub_width
995 458 this.outerWidth(this.settings.$target)+this.settings.$target.offset().left this.settings.$target.outerWidth()+this.settings.$target.offset().left
996 466 this.settings.$target.offset().left-this.outerWidth(this.settings.$next_tip)-nub_width this.settings.$target.offset().left-this.settings.$next_tip.outerWidth()-nub_width
997 466 this.settings.$target.offset().left-this.outerWidth(this.settings.$next_tip) this.settings.$target.offset().left-this.settings.$next_tip.outerWidth()
998 90 $destination.offset().top-windowScrollTop $destination.offset().top-$destination.outerHeight(true)-windowScrollTop
999 351 !selected&&!settings.deep_linking&&(settings.one_up||!self.is_horizontal_nav(section)&&!self.is_vertical_nav(section)&&!self.is_accordion(section)) !selected&&(settings.one_up||!self.is_horizontal_nav(section)&&!self.is_vertical_nav(section)&&!self.is_accordion(section))
1000 351 !selected&&!settings.deep_linking&&(settings.one_up||!self.is_horizontal_nav(section)&&!self.is_vertical_nav(section)&&!self.is_accordion(section)) !selected&&(settings.one_up||!self.is_horizontal_nav(section)&&!self.is_vertical_nav(section)&&!self.is_accordion(section))
1001 336 image[0].complete||image.readyState===4 image[0].complete||image[0].readyState===4
1002 336 image.readyState===4 image[0].readyState===4
1003 96 offset.top+this.outerHeight(target) position.top+this.outerHeight(target)
1004 101 offset.top+this.outerHeight(target) position.top+this.outerHeight(target)
1005 180 '.'+this.stickyClass '.'+this.settings.stickyClass
1006 180 '.'+this.stickyClass '.'+this.settings.stickyClass
1007 68 self.small(parent)||self.settings.one_up !self.small(parent)||self.settings.one_up
